{
  "_format": "hh-sol-artifact-1",
  "contractName": "TreeOfCellsParser",
  "sourceName": "contracts/parser/TreeOfCellsParser.sol",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "BOC_GENERIC",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BOC_IDX",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BOC_IDX_CRC32C",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LibraryCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MerkleProofCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MerkleUpdateCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OrdinaryCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PrunnedBranchCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "levelMask",
          "type": "uint32"
        }
      ],
      "name": "applyLevelMask",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cell_info",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cell_slice",
          "type": "bytes"
        }
      ],
      "name": "calcHashForRefs",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        }
      ],
      "name": "calcHashesForToc",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "n",
          "type": "uint32"
        }
      ],
      "name": "count_setbits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "refs",
          "type": "uint256[4]"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cell_info",
          "type": "tuple"
        }
      ],
      "name": "create_data_cell",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData",
          "name": "cell",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cells_slice",
          "type": "bytes"
        },
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        },
        {
          "internalType": "uint256",
          "name": "ref_byte_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cell_count",
          "type": "uint256"
        }
      ],
      "name": "deserialize_cell",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData",
          "name": "cell",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "getDepth",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getHashesCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getHashesCountFromMask",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getLevel",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getLevelFromMask",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cells_slice",
          "type": "bytes"
        },
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        }
      ],
      "name": "get_cell_slice",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "cell_slice",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "get_indexes",
      "outputs": [
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "get_tree_of_cells",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "ref_byte_size",
          "type": "uint256"
        }
      ],
      "name": "init_cell_serialization_info",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cellInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "isLevelSignificant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        }
      ],
      "name": "parseSerializedHeader",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "header",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061029a5760003560e01c806378c6414111610161578063ad7117b3116100ca578063d0dc8d4e11610084578063f06c329d11610061578063f06c329d14610873578063fa9e2008146108a1578063fe08378a146108b657005b8063d0dc8d4e14610829578063dd8254d81461083e578063e433fce71461085e57005b8063b88d34ee116100b2578063b88d34ee146107c9578063bc856891146107e9578063c5de6a651461080957005b8063ad7117b314610789578063b2cad9b7146107a957005b80639aa3c6951161011b578063a62f193811610103578063a62f19381461071c578063a6d8ea9814610749578063a77230cf1461076957005b80639aa3c695146106c35780639c544ceb146106e357005b80637ff3d1ad116101495780637ff3d1ad1461066157806380b6f8171461067657806380e912a21461069657005b806378c64141146106115780637e8c8d7b1461063157005b80633c82adfe11610203578063505a7b9b116101bd57806371734cce116101a557806371734cce146105a457806374e6af29146105d15780637893a08a146105f157005b8063505a7b9b14610564578063622258711461058457005b806341c0044c116101eb57806341c0044c146104f7578063420a02f3146105175780634dca6f061461054457005b80633c82adfe1461048e5780633f6093fa146104c357005b80631b839b86116102545780631f6520e61161023c5780631f6520e61461041a578063323273ea1461043a578063365dc6141461045a57005b80631b839b86146103c05780631c1aa8ad146103ed57005b8063151346d311610282578063151346d31461034057806319aac94a146103725780631a1ae01c146103a057005b806303084edd146102a35780631109637d1461030d57005b366102a157005b005b3480156102af57600080fd5b506102d77facc3a7280000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561031957600080fd5b5061032d610328366004613677565b6108cb565b60405161ffff9091168152602001610304565b34801561034c57600080fd5b5061036061035b3660046136e7565b610a77565b60405160ff9091168152602001610304565b34801561037e57600080fd5b5061039261038d366004613702565b610ac6565b604051908152602001610304565b3480156103ac57600080fd5b506102a16103bb36600461376c565b610b0b565b3480156103cc57600080fd5b506103e06103db366004613834565b610d6f565b6040516103049190613880565b3480156103f957600080fd5b5061040d610408366004613975565b6110c3565b6040516103049190613acc565b34801561042657600080fd5b5061032d610435366004613adb565b61131b565b34801561044657600080fd5b506103926104553660046136e7565b6113b4565b34801561046657600080fd5b506102d77f68ff65f30000000000000000000000000000000000000000000000000000000081565b34801561049a57600080fd5b506104ae6104a9366004613b4e565b6113eb565b60405163ffffffff9091168152602001610304565b3480156104cf57600080fd5b506102d77fb5ee9c720000000000000000000000000000000000000000000000000000000081565b34801561050357600080fd5b506103606105123660046136e7565b61140d565b34801561052357600080fd5b50610537610532366004613702565b611462565b6040516103049190613b81565b34801561055057600080fd5b5061039261055f366004613bb7565b6114b2565b34801561057057600080fd5b5061036061057f366004613be4565b611536565b34801561059057600080fd5b506102a161059f366004613d5d565b61160c565b3480156105b057600080fd5b506105c46105bf366004613dc6565b611766565b6040516103049190613e1c565b3480156105dd57600080fd5b506103926105ec366004613677565b611825565b3480156105fd57600080fd5b5061039261060c366004613e45565b61194d565b34801561061d57600080fd5b5061039261062c366004613be4565b6119e4565b34801561063d57600080fd5b5061065161064c366004613b4e565b611a0a565b6040519015158152602001610304565b34801561066d57600080fd5b50610360600281565b34801561068257600080fd5b5061040d610691366004613f7d565b611a4a565b3480156106a257600080fd5b506106b66106b1366004613dc6565b611a6c565b6040516103049190613faa565b3480156106cf57600080fd5b506103606106de366004613adb565b611b6c565b3480156106ef57600080fd5b506107036106fe366004613e45565b611c01565b60405167ffffffffffffffff9091168152602001610304565b34801561072857600080fd5b5061073c610737366004613fdf565b611ca2565b6040516103049190614021565b34801561075557600080fd5b50610651610764366004613be4565b6127a5565b34801561077557600080fd5b506104ae610784366004613adb565b6127c3565b34801561079557600080fd5b506103926107a4366004614109565b61285e565b3480156107b557600080fd5b506103606107c43660046136e7565b6128d3565b3480156107d557600080fd5b506103926107e4366004613702565b6128e1565b3480156107f557600080fd5b50610392610804366004613834565b612936565b34801561081557600080fd5b506103606108243660046136e7565b612991565b34801561083557600080fd5b5061036060ff81565b34801561084a57600080fd5b506102a1610859366004614122565b61299f565b34801561086a57600080fd5b50610360600481565b34801561087f57600080fd5b5061089361088e3660046141c6565b613209565b60405161030492919061421b565b3480156108ad57600080fd5b50610360600181565b3480156108c257600080fd5b50610360600381565b60008060016108f7610512878787606481106108e9576108e9614268565b602002015160a001516113eb565b61090191906142c6565b9050600184846064811061091757610917614268565b602002015160e0015160ff1603610a36576000600161094f86866064811061094157610941614268565b602002015160a00151612991565b61095991906142c6565b90508060ff168260ff1614610a3057600061097860ff841660026142e9565b6109839060086142e9565b61099160ff841660206142e9565b61099c9060086142e9565b6109a7906010614308565b6109b19190614308565b9050808686606481106109c6576109c6614268565b60200201516040018181516109db9190614308565b90525060006109ee8a8a8989601061131b565b90506109fb826010614308565b878760648110610a0d57610a0d614268565b6020020151604001818151610a229190614320565b9052509350610a6e92505050565b60009150505b838360648110610a4857610a48614268565b602002015160c001518160ff1660048110610a6557610a65614268565b60200201519150505b95945050505050565b600081815b60038160ff1611610abc578163ffffffff16600003610a9c579392505050565b60018263ffffffff16901c91508080610ab490614337565b915050610a7c565b5060039392505050565b6000805b8215610b0157610adc87878787611536565b610aed9060ff16600183901b614308565b905082610af981614356565b935050610aca565b9695505050505050565b600085610b1a898988886127a5565b610b6e57610b2a898988886119e4565b915060005b82811015610b6857610b438a8a8989611536565b610b549060ff16600184901b614308565b915080610b608161436d565b915050610b2f565b50610c3d565b610b7a898988886127a5565b610bde57610b9689898888610b8e8961285e565b60ff16611c01565b67ffffffffffffffff16915060005b82811015610b6857610bb98a8a8989611536565b610bca9060ff16600184901b614308565b915080610bd68161436d565b915050610ba5565b6000610bec8a8a8989611536565b60ff169050610c018a8a8989610b8e8a61285e565b67ffffffffffffffff16925060005b83811015610c3a57610c2682600185901b614308565b925080610c328161436d565b915050610c10565b50505b610c478285614320565b600003610cad5760005b6020811015610ca757838160208110610c6c57610c6c614268565b602002015160ff03610c955785848260208110610c8b57610c8b614268565b6020020152610ca7565b80610c9f8161436d565b915050610c51565b50610d64565b6000610cb987876114b2565b90506000610cc788886114b2565b90508160ff14158015610cef5750878260648110610ce757610ce7614268565b602002015151155b15610d1e57610d1e8b8b600186901b8b8660018a8d610d0e9190614320565b610d189190614320565b8b610b0b565b8060ff14158015610d445750878160648110610d3c57610d3c614268565b602002015151155b15610d6157610d618b8b600286901b8b856001610d0e8b8e614320565b50505b505050505050505050565b610dec604051806101a00160405280600060ff168152602001600060ff168152602001600015158152602001600063ffffffff168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6002831015610e425760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f7567682062797465730000000000000000000000000000000060448201526064015b60405180910390fd5b600084846000818110610e5757610e57614268565b919091013560f81c91506000905085856001818110610e7857610e78614268565b60ff85168652919091013560f81c6020850181905260078085166101608701819052600586901c909116606087015260088516151560408701526010851615156080870152909250600410159050610f7e578261016001516007141580610ee157508260800151155b15610f2e5760405162461bcd60e51b815260206004820152601260248201527f496e76616c6964206669727374206279746500000000000000000000000000006044820152606401610e39565b600061016084015260405162461bcd60e51b815260206004820152601260248201527f544f444f3a20616273656e742063656c6c7300000000000000000000000000006044820152606401610e39565b600260a08401526060830151600090610f96906113b4565b610fa1906001614308565b90508360800151610fb3576000610fbe565b610fbe8160206142e9565b8460a00151610fcd9190614308565b60c08501526080840151610fe2576000610fed565b610fed8160026142e9565b8460c00151610ffc9190614308565b60e085015261101560018381169084901c607f16614387565b60ff16610100850181905260018316151561012086015260e085015161103b9190614308565b6101408501526101608401516110529086906142e9565b8461014001516110629190614308565b61018085018190528610156110b95760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610e39565b5050509392505050565b6110cb613274565b3660006110da89898989613209565b915091506110e66132cd565b60005b600481101561111d5760ff82826004811061110657611106614268565b6020020152806111158161436d565b9150506110e9565b50600061112b848489610d6f565b61018081015190915083146111825760405162461bcd60e51b815260206004820152601460248201527f756e7573656420737061636520696e2063656c6c0000000000000000000000006044820152606401610e39565b60005b8161016001518110156112a45760006111c486866111a38c866142e9565b8661014001516111b39190614308565b6111be9282906143ac565b8b612936565b90508c81116112155760405162461bcd60e51b815260206004820152601260248201527f6261672d6f662d63656c6c73206572726f7200000000000000000000000000006044820152606401610e39565b8781106112645760405162461bcd60e51b815260206004820152601d60248201527f726566496e646578206973206269676765722063656c6c20636f756e740000006044820152606401610e39565b6001611270828a614320565b61127a9190614320565b84836004811061128c5761128c614268565b6020020152508061129c8161436d565b915050611185565b506112af8282611a4a565b94508a156112dd57876112c360018d614320565b606481106112d3576112d3614268565b60200201516112e0565b60005b8160e001516112ef9190614308565b6112fa9060086142e9565b60408601526060015163ffffffff1660a08501525050509695505050505050565b600060108260ff1611156113715760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732031362062697473000000000000000000000000006044820152606401610e39565b5060005b60ff821615610a6e5761138a86868686611536565b6113a09060ff166201fffe600184901b166143d6565b9050816113ac816143fc565b925050611375565b6000805b63ffffffff8316156113e5576113d16001841682614308565b905060018363ffffffff16901c92506113b8565b92915050565b60006113fe600160ff851681901b614320565b90911663ffffffff1692915050565b60008082815b60038160ff16101561144e5761142c6001831684614387565b925060018263ffffffff16901c9150808061144690614337565b915050611413565b5061145a826001614387565b949350505050565b61146a6132eb565b60005b60208110156114a15760ff82826020811061148a5761148a614268565b6020020152806114998161436d565b91505061146d565b50610a6e8686600087878787610b0b565b60008282606481106114c6576114c6614268565b6020020151602001518383606481106114e1576114e1614268565b60200201516060015160ff16600481106114fd576114fd614268565b6020020151905082826064811061151657611516614268565b602002015160600180519061152a82614337565b60ff1690525092915050565b600080600884846064811061154d5761154d614268565b6020020151604001516115609190614448565b90506000600885856064811061157857611578614268565b60200201516040015161158b919061445c565b90506007818888858181106115a2576115a2614268565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c9350600190508585606481106115ea576115ea614268565b60200201516040018181516115ff9190614308565b9052505050949350505050565b6000366000868686610180015190876101a001518861018001516116309190614308565b9261163d939291906143ac565b91509150600061164e888888611766565b905060005b8660400151811015610d645780600188604001516116719190614320565b61167b9190614320565b945036600061168c87878787613209565b9150915060006116a183838c60800151610d6f565b905060ff8985606481106116b7576116b7614268565b602002015160ff90911660e0909101528884606481106116d9576116d9614268565b60200201515115611741576116f28c8c8b876008611b6c565b89856064811061170457611704614268565b602002015160ff90911660e090910152600889856064811061172857611728614268565b602002015160400181815161173d9190614320565b9052505b6117508c8c838c88888861299f565b505050808061175e9061436d565b915050611653565b61176e61330a565b366000858585610180015190866101a001518761018001516117909190614308565b9261179d939291906143ac565b915091506000805b856040015181101561181a5760006117c285858960800151610d6f565b6101808101519091506117d890859081886143ac565b94509450806101800151836117ed9190614308565b92508286836064811061180257611802614268565b602002015250806118128161436d565b9150506117a5565b505050509392505050565b6000806001611843610512878787606481106108e9576108e9614268565b61184d91906142c6565b9050600184846064811061186357611863614268565b602002015160e0015160ff160361191e576000600161188d86866064811061094157610941614268565b61189791906142c6565b90508060ff168260ff16146119185760006118b660ff841660026142e9565b6118c19060086142e9565b6118cc906010614308565b9050808686606481106118e1576118e1614268565b60200201516040018181516118f69190614308565b905250600061190a8a8a898961010061194d565b90506109fb82610100614308565b60009150505b83836064811061193057611930614268565b6020020151608001518160ff1660048110610a6557610a65614268565b60006101008261ffff1611156119a55760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610e39565b5060005b61ffff821615610a6e576119bf86868686611536565b6119d09060ff16600183901b614308565b9050816119dc81614470565b9250506119a9565b60005b6119f3858585856127a5565b1561145a5780611a028161436d565b9150506119e7565b600060ff83161580611a4357506002611a246001856142c6565b60ff168363ffffffff16901c611a3a9190614484565b63ffffffff1615155b9392505050565b611a52613274565b602081019290925260400151151581526000606082015290565b611a74613329565b6000611a81858585611766565b9050366000868686610180015190876101a00151886101800151611aa59190614308565b92611ab2939291906143ac565b90925090506000805b8660400151811015611b5f578060018860400151611ad99190614320565b611ae39190614320565b9150611afb828585888b608001518c604001516110c3565b868260648110611b0d57611b0d614268565b6020020152610180870151611b239060086142e9565b868260648110611b3557611b35614268565b6020020151604001818151611b4a9190614308565b90525080611b578161436d565b915050611abb565b5061181a8888888861160c565b600060088260ff161115611bc25760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610e39565b5060005b60ff821615610a6e57611bdb86868686611536565b611bed906101fe600184901b16614387565b905081611bf9816143fc565b925050611bc6565b600060408261ffff161115611c585760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610e39565b5060005b61ffff821615610a6e57611c7286868686611536565b611c8e9060ff166801fffffffffffffffe600184901b166144a7565b905081611c9a81614470565b925050611c5c565b611d4960405180610200016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b816004811015611d9b5760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610e39565b60408051610200810190915260009080611db8600484888a6143ac565b611dc1916144ca565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160001515815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815250925063b5ee9c7260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611ef2575082517fffffffff00000000000000000000000000000000000000000000000000000000167f68ff65f30000000000000000000000000000000000000000000000000000000014155b8015611f41575082517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a7280000000000000000000000000000000000000000000000000000000014155b15611f8e5760405162461bcd60e51b815260206004820152600e60248201527f77726f6e6720626f6320747970650000000000000000000000000000000000006044820152606401610e39565b600085856004818110611fa357611fa3614268565b865192013560f81c9250507fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e00000000000000000000000000000000000000000000000000000000016120545761200860026001600784901c16614512565b60ff1660011460c08501526120256002600683901c600316614512565b60ff166001146101008501526120436002600583901c600716614512565b60ff166001146101208501526120a8565b600160c085015283517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a72800000000000000000000000000000000000000000000000000000000146101008501525b83610120015180156120bc57508360c00151155b156121095760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b600781166080850181905260041080612126575060018460800151105b156121735760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b60068310156121c45760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b858560058181106121d7576121d7614268565b919091013560f81c60a086018190526008109050806121fa575060018460a00151105b156122475760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b60a0840151608085015161225c9060036142e9565b612267906006614308565b6122719190614308565b610140850152612282600683614308565b915061228f600684614320565b925083608001518310156122e55760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b6122fe6122f48684818a6143ac565b8660800151612936565b604085018190526123515760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b60808401516123619060026142e9565b8310156123b05760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b6123d086868660800151856123c59190614308565b6122f49282906143ac565b602085018190526124235760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b61014084015161016085015283517fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e00000000000000000000000000000000000000000000000000000000016124ae578360800151846020015161248d91906142e9565b846101600181815161249f9190614308565b905250600160e0850152612502565b83602001516001146125025760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b61016084015161018085015260c084015115612542578360a00151846040015161252c91906142e9565b846101800181815161253e9190614308565b9052505b60808401516125529060036142e9565b8310156125a15760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b6125c18686866080015160026125b791906142e9565b6123c59086614308565b606085018190526040850151101561261b5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b60a084015160808501516126309060036142e9565b61263a9190614308565b8310156126895760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b6126be86868660800151600361269f91906142e9565b6126a99086614308565b6126b49282906143ac565b8660a00151612936565b6101a08501819052604085015160201b101561271c5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610e39565b83610100015161272d576000612730565b60045b60ff16846101a001518561018001516127499190614308565b6127539190614308565b6101c085015261014084015160019061277d90612773908890818b6143ac565b8760800151612936565b856040015161278c9190614320565b6127969190614320565b6101e085015250505092915050565b60006127b385858585611536565b60ff166001149050949350505050565b600060208260ff1611156128195760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610e39565b5060005b60ff821615610a6e5761283286868686611536565b61284a9060ff166401fffffffe600184901b16614534565b905081612856816143fc565b92505061281d565b6000805b60018311156128ac57612876600183614308565b9150826001166001148015612889575080155b156128a057612899600183614308565b9150600190505b600183901c9250612862565b8260011480156128ba575080155b156128cd576128ca600183614308565b91505b50919050565b60006113e582600716610a77565b6000806128ef8360086142e9565b905060005b811561292b5761290688888888611536565b6129179060ff16600183901b614308565b90508161292381614356565b9250506128f4565b979650505050505050565b600080805b83156129885785858281811061295357612953614268565b61296892013560f81c9050600884901b614308565b9150806129748161436d565b9150508361298190614356565b935061293b565b50949350505050565b60006113e58260071661140d565b60018484606481106129b3576129b3614268565b602002015160e0015160ff1603612a2857818160038181106129d7576129d7614268565b919091013560f81c90508484606481106129f3576129f3614268565b602002015163ffffffff90911660a09091015281816003818110612a1957612a19614268565b919091013560f81c6060870152505b60006001858560648110612a3e57612a3e614268565b602002015160e0015160ff1614612a6157612a5c8660600151612991565b612a64565b60015b612a718760600151612991565b612a7b91906142c6565b9050600080612a8d88606001516128d3565b905060005b8160ff168160ff1611610d6157612aad818a60600151611a0a565b156131f7578360ff168360ff161015612ad25782612aca81614337565b9350506131f7565b60608460ff168460ff1603612ca55760ff841615801590612b1157506001898960648110612b0257612b02614268565b602002015160e0015160ff1614155b15612b5e5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420646573657269616c697a652063656c6c0000000000000000006044820152606401610e39565b6000805b6004811015612bc3578a8a60648110612b7d57612b7d614268565b6020020151602001518160048110612b9757612b97614268565b602002015160ff14612bc35781612bad81614337565b9250508080612bbb9061436d565b915050612b62565b506000612bdc848c8c606481106108e9576108e9614268565b90506000612beb826020614553565b8c8c60648110612bfd57612bfd614268565b602002015151612c0e576000612c11565b60085b612c1b9085614387565b60ff16612c289190614534565b6101408e0151909150612c3e9060018b8d6143ac565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051929650612c8c9260f885901b92508791506020016145ba565b6040516020818303038152906040529350505050612d8c565b60ff82161580612cd257506001898960648110612cc457612cc4614268565b602002015160e0015160ff16145b15612d1f5760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f7420646573657269616c697a652063656c6c2032000000000000006044820152606401610e39565b80898960648110612d3257612d32614268565b6020020151608001516001612d4788886142c6565b612d5191906142c6565b60ff1660048110612d6457612d64614268565b6020020151604051602001612d7a9291906145ee565b60405160208183030381529060405290505b888860648110612d9e57612d9e614268565b602002015160200151600060048110612db957612db9614268565b602002015160ff1461315a5760005b6004811015612fbf57898960648110612de357612de3614268565b6020020151602001518160048110612dfd57612dfd614268565b602002015160ff14612fbf5781612e478e8e868e8f8f60648110612e2357612e23614268565b6020020151602001518760048110612e3d57612e3d614268565b60200201516108cb565b604051602001612e82919060f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016815260020190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052612ebe9291602001614607565b6040516020818303038152906040529150898960648110612ee157612ee1614268565b602002015160c00151612ef487876142c6565b60ff1660048110612f0757612f07614268565b602002015161ffff16612f298e8e868e8f8f60648110612e2357612e23614268565b61ffff161115612fad57612f668d8d858d8e8e60648110612f4c57612f4c614268565b6020020151602001518660048110612e3d57612e3d614268565b8a8a60648110612f7857612f78614268565b602002015160c00151612f8b88886142c6565b60ff1660048110612f9e57612f9e614268565b61ffff90921660209290920201525b80612fb78161436d565b915050612dc8565b898960648110612fd157612fd1614268565b602002015160c00151612fe487876142c6565b60ff1660048110612ff757612ff7614268565b602002018051906130078261461c565b61ffff16905250600090505b60048110156130c75789896064811061302e5761302e614268565b602002015160200151816004811061304857613048614268565b602002015160ff146130c757816130928e8e868e8f8f6064811061306e5761306e614268565b602002015160200151876004811061308857613088614268565b6020020151611825565b6040516020016130a39291906145ee565b604051602081830303815290604052915080806130bf9061436d565b915050613013565b6002826040516130d7919061463d565b602060405180830381855afa1580156130f4573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906131179190614649565b8a8a6064811061312957613129614268565b60200201516080015161313c88886142c6565b60ff166004811061314f5761314f614268565b6020020152506131e8565b60028160405161316a919061463d565b602060405180830381855afa158015613187573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906131aa9190614649565b8989606481106131bc576131bc614268565b6020020151608001516131cf87876142c6565b60ff16600481106131e2576131e2614268565b60200201525b836131f281614337565b945050505b8061320181614337565b915050612a92565b366000808615613239578361321f600189614320565b6064811061322f5761322f614268565b602002015161323c565b60005b9050600084886064811061325257613252614268565b602002015190506132658183888a6143ac565b93509350505094509492505050565b6040518061010001604052806000151581526020016132916132cd565b815260006020820181905260408201526060016132ac6132cd565b8152600060208201526040016132c06132cd565b8152600060209091015290565b60405180608001604052806004906020820280368337509192915050565b6040518061040001604052806020906020820280368337509192915050565b60405180610c8001604052806064906020820280368337509192915050565b60405180610c8001604052806064905b613341613274565b8152602001906001900390816133395790505090565b60008083601f84011261336957600080fd5b50813567ffffffffffffffff81111561338157600080fd5b60208301915083602082850101111561339957600080fd5b9250929050565b803560ff811681146133b157600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715613409576134096133b6565b60405290565b604051610200810167ffffffffffffffff81118282101715613409576134096133b6565b6040516101a0810167ffffffffffffffff81118282101715613409576134096133b6565b6040516080810167ffffffffffffffff81118282101715613409576134096133b6565b604051610c80810167ffffffffffffffff81118282101715613409576134096133b6565b604051610400810167ffffffffffffffff81118282101715613409576134096133b6565b803580151581146133b157600080fd5b600082601f8301126134e357600080fd5b6134eb613457565b8060808401858111156134fd57600080fd5b845b818110156135175780358452602093840193016134ff565b509095945050505050565b803563ffffffff811681146133b157600080fd5b803561ffff811681146133b157600080fd5b600082601f83011261355957600080fd5b613561613457565b80608084018581111561357357600080fd5b845b818110156135175761358681613536565b845260209384019301613575565b600082601f8301126135a557600080fd5b6135ad61347a565b8061d4808401858111156135c057600080fd5b845b818110156135175761022081880312156135dc5760008081fd5b6135e46133e5565b6135ed826134c2565b815260206135fd898285016134d2565b8183015260a080840135604084015260c06136198186016133a0565b606085015260e061362c8c8288016134d2565b608086015261363e6101608701613522565b838601526136508c6101808801613548565b8286015261366161020087016133a0565b90850152505090855290930192610220016135c2565b600080600080600061d4e0868803121561369057600080fd5b853567ffffffffffffffff8111156136a757600080fd5b6136b388828901613357565b90965094506136c69050602087016133a0565b92506136d58760408801613594565b9497939650919461d4c0013592915050565b6000602082840312156136f957600080fd5b611a4382613522565b600080600080600061d4e0868803121561371b57600080fd5b853567ffffffffffffffff81111561373257600080fd5b61373e88828901613357565b909650945061375290508760208801613594565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b03121561378957600080fd5b883567ffffffffffffffff8111156137a057600080fd5b6137ac8b828c01613357565b90995097505060208981013596506137c78b60408c01613594565b955061d4c08a0135945061d4e08a013593508a61d51f8b01126137e957600080fd5b6137f161349e565b918a0191808c84111561380357600080fd5b61d5008c015b848110156138205780358352918301918301613809565b508094505050505092959891949750929550565b60008060006040848603121561384957600080fd5b833567ffffffffffffffff81111561386057600080fd5b61386c86828701613357565b909790965060209590950135949350505050565b815160ff1681526101a0810160208301516138a0602084018260ff169052565b5060408301516138b4604084018215159052565b5060608301516138cc606084018263ffffffff169052565b5060808301516138e0608084018215159052565b5060a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015161391f8285018215159052565b50506101408381015190830152610160808401519083015261018092830151929091019190915290565b600082601f83011261395a57600080fd5b61396261347a565b80610c808401858111156134fd57600080fd5b600080600080600080610d00878903121561398f57600080fd5b86359550602087013567ffffffffffffffff8111156139ad57600080fd5b6139b989828a01613357565b90965094506139cd90508860408901613949565b9250610cc08701359150610ce087013590509295509295509295565b8060005b6004811015613a0c5781518452602093840193909101906001016139ed565b50505050565b8060005b6004811015613a0c57815161ffff16845260209384019390910190600101613a16565b80511515825260208082015181840160005b6004811015613a6857825182529183019190830190600101613a4b565b50505050604081015160a0830152606081015160ff1660c08301526080810151613a9560e08401826139e9565b5060a081015163ffffffff1661016083015260c0810151613aba610180840182613a12565b5060e0015160ff166102009190910152565b61022081016113e58284613a39565b600080600080600061d4e08688031215613af457600080fd5b853567ffffffffffffffff811115613b0b57600080fd5b613b1788828901613357565b9096509450613b2b90508760208801613594565b925061d4a08601359150613b4261d4c087016133a0565b90509295509295909350565b60008060408385031215613b6157600080fd5b613b6a836133a0565b9150613b7860208401613522565b90509250929050565b6104008101818360005b6020808210613b9a5750613bae565b825184529283019290910190600101613b8b565b50505092915050565b60008061d4a08385031215613bcb57600080fd5b613bd58484613594565b9461d480939093013593505050565b60008060008061d4c08587031215613bfb57600080fd5b843567ffffffffffffffff811115613c1257600080fd5b613c1e87828801613357565b9095509350613c3290508660208701613594565b9396929550929361d4a00135925050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146133b157600080fd5b60006102008284031215613c8657600080fd5b613c8e61340f565b9050613c9982613c43565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152613cd960c083016134c2565b60c0820152613cea60e083016134c2565b60e0820152610100613cfd8184016134c2565b90820152610120613d0f8382016134c2565b908201526101408281013590820152610160808301359082015261018080830135908201526101a080830135908201526101c080830135908201526101e09182013591810191909152919050565b60008060008061d6a08587031215613d7457600080fd5b843567ffffffffffffffff811115613d8b57600080fd5b613d9787828801613357565b9095509350613dab90508660208701613c73565b9150613dbb866102208701613594565b905092959194509250565b60008060006102208486031215613ddc57600080fd5b833567ffffffffffffffff811115613df357600080fd5b613dff86828701613357565b9094509250613e1390508560208601613c73565b90509250925092565b610c808101818360005b6064811015613bae578151835260209283019290910190600101613e26565b600080600080600061d4e08688031215613e5e57600080fd5b853567ffffffffffffffff811115613e7557600080fd5b613e8188828901613357565b9096509450613e9590508760208801613594565b925061d4a08601359150613b4261d4c08701613536565b60006101a08284031215613ebf57600080fd5b613ec7613433565b9050613ed2826133a0565b8152613ee0602083016133a0565b6020820152613ef1604083016134c2565b6040820152613f0260608301613522565b6060820152613f13608083016134c2565b608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120613f508184016134c2565b90820152610140828101359082015261016080830135908201526101809182013591810191909152919050565b6000806102208385031215613f9157600080fd5b613f9b84846134d2565b9150613b788460808501613eac565b61d4808101818360005b6064811015613bae57613fc8838351613a39565b610220929092019160209190910190600101613fb4565b60008060208385031215613ff257600080fd5b823567ffffffffffffffff81111561400957600080fd5b61401585828601613357565b90969095509350505050565b81517fffffffff0000000000000000000000000000000000000000000000000000000016815261020081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015161409160c084018215159052565b5060e08301516140a560e084018215159052565b5061010083810151151590830152610120808401511515908301526101408084015190830152610160808401519083015261018080840151908301526101a080840151908301526101c080840151908301526101e092830151929091019190915290565b60006020828403121561411b57600080fd5b5035919050565b600080600080600080600061d680888a03121561413e57600080fd5b873567ffffffffffffffff8082111561415657600080fd5b6141628b838c01613357565b90995097508791506141778b60208c01613eac565b96506141878b6101c08c01613594565b955061d6408a0135945061d6608a01359150808211156141a657600080fd5b506141b38a828b01613357565b989b979a50959850939692959293505050565b600080600080610cc085870312156141dd57600080fd5b84359350602085013567ffffffffffffffff8111156141fb57600080fd5b61420787828801613357565b9094509250613dbb90508660408701613949565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8416808210156142e0576142e0614297565b90039392505050565b600081600019048311821515161561430357614303614297565b500290565b6000821982111561431b5761431b614297565b500190565b60008282101561433257614332614297565b500390565b600060ff821660ff810361434d5761434d614297565b60010192915050565b60008161436557614365614297565b506000190190565b6000600019820361438057614380614297565b5060010190565b600060ff821660ff84168060ff038211156143a4576143a4614297565b019392505050565b600080858511156143bc57600080fd5b838611156143c957600080fd5b5050820193919092039150565b600061ffff8083168185168083038211156143f3576143f3614297565b01949350505050565b600060ff82168061440f5761440f614297565b6000190192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261445757614457614419565b500490565b60008261446b5761446b614419565b500690565b600061ffff82168061440f5761440f614297565b600063ffffffff8084168061449b5761449b614419565b92169190910692915050565b600067ffffffffffffffff8083168185168083038211156143f3576143f3614297565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561450a5780818660040360031b1b83161692505b505092915050565b600060ff83168061452557614525614419565b8060ff84160691505092915050565b600063ffffffff8083168185168083038211156143f3576143f3614297565b600063ffffffff8083168185168183048111821515161561457657614576614297565b02949350505050565b6000815160005b818110156145a05760208185018101518683015201614586565b818111156145af576000828601525b509290920192915050565b7fff0000000000000000000000000000000000000000000000000000000000000083168152600061145a600183018461457f565b60006145fa828561457f565b9283525050602001919050565b600061145a614616838661457f565b8461457f565b600061ffff80831681810361463357614633614297565b6001019392505050565b6000611a43828461457f565b60006020828403121561465b57600080fd5b505191905056fea26469706673582212200d70388f8a0f087890e80836af08e78fc12519be0a6bc0689353c15e9001101064736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
