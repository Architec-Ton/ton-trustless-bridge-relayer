{
  "_format": "hh-sol-artifact-1",
  "contractName": "Adapter",
  "sourceName": "contracts/Adapter.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tonToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "transactionParser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e7838038062001e788339810160408190526200003491620000de565b6200003f3362000071565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905562000116565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000d957600080fd5b919050565b60008060408385031215620000f257600080fd5b620000fd83620000c1565b91506200010d60208401620000c1565b90509250929050565b611d5280620001266000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806378c64141116100b2578063a6d8ea9811610081578063ad7117b311610066578063ad7117b3146102e7578063b88d34ee146102fa578063f2fde38b1461030d57600080fd5b8063a6d8ea981461029c578063a77230cf146102bf57600080fd5b806378c64141146102225780638da5cb5b146102355780639aa3c6951461025d5780639c544ceb1461027057600080fd5b80634dca6f06116101095780636ccf7471116100ee5780636ccf7471146101f4578063715018a6146102075780637893a08a1461020f57600080fd5b80634dca6f06146101bc578063505a7b9b146101cf57600080fd5b806319aac94a1461013b5780631a1ae01c146101615780631f6520e614610176578063420a02f31461019c575b600080fd5b61014e610149366004611365565b610320565b6040519081526020015b60405180910390f35b61017461016f3660046113cf565b610367565b005b610189610184366004611497565b6105cb565b60405161ffff9091168152602001610158565b6101af6101aa366004611365565b610669565b604051610158919061150e565b61014e6101ca366004611544565b6106b9565b6101e26101dd366004611571565b61073d565b60405160ff9091168152602001610158565b610174610202366004611571565b610814565b6101746109fc565b61014e61021d3660046115d0565b610a10565b61014e610230366004611571565b610aa7565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610158565b6101e261026b366004611497565b610acd565b61028361027e3660046115d0565b610b62565b60405167ffffffffffffffff9091168152602001610158565b6102af6102aa366004611571565b610c03565b6040519015158152602001610158565b6102d26102cd366004611497565b610c21565b60405163ffffffff9091168152602001610158565b61014e6102f5366004611643565b610cbc565b61014e610308366004611365565b610d31565b61017461031b36600461165c565b610d86565b6000805b821561035b576103368787878761073d565b6103479060ff16600183901b6116c8565b905082610353816116e0565b935050610324565b90505b95945050505050565b60008561037689898888610c03565b6103ca5761038689898888610aa7565b915060005b828110156103c45761039f8a8a898961073d565b6103b09060ff16600184901b6116c8565b9150806103bc816116f7565b91505061038b565b50610499565b6103d689898888610c03565b61043a576103f2898988886103ea89610cbc565b60ff16610b62565b67ffffffffffffffff16915060005b828110156103c4576104158a8a898961073d565b6104269060ff16600184901b6116c8565b915080610432816116f7565b915050610401565b60006104488a8a898961073d565b60ff16905061045d8a8a89896103ea8a610cbc565b67ffffffffffffffff16925060005b838110156104965761048282600185901b6116c8565b92508061048e816116f7565b91505061046c565b50505b6104a38285611711565b6000036105095760005b6020811015610503578381602081106104c8576104c8611728565b602002015160ff036104f157858482602081106104e7576104e7611728565b6020020152610503565b806104fb816116f7565b9150506104ad565b506105c0565b600061051587876106b9565b9050600061052388886106b9565b90508160ff1415801561054b575087826064811061054357610543611728565b602002015151155b1561057a5761057a8b8b600186901b8b8660018a8d61056a9190611711565b6105749190611711565b8b610367565b8060ff141580156105a0575087816064811061059857610598611728565b602002015151155b156105bd576105bd8b8b600286901b8b85600161056a8b8e611711565b50505b505050505050505050565b600060108260ff1611156106265760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff82161561035e5761063f8686868661073d565b6106559060ff166201fffe600184901b16611757565b9050816106618161177d565b92505061062a565b610671610fc5565b60005b60208110156106a85760ff82826020811061069157610691611728565b6020020152806106a0816116f7565b915050610674565b5061035e8686600087878787610367565b60008282606481106106cd576106cd611728565b6020020151602001518383606481106106e8576106e8611728565b60200201516060015160ff166004811061070457610704611728565b6020020151905082826064811061071d5761071d611728565b60200201516060018051906107318261179a565b60ff1690525092915050565b600080600884846064811061075457610754611728565b60200201516040015161076791906117e8565b90506000600885856064811061077f5761077f611728565b60200201516040015161079291906117fc565b90506007818888858181106107a9576107a9611728565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c9350600190508585606481106107f1576107f1611728565b602002015160400181815161080691906116c8565b90525050505b949350505050565b61081c610e23565b6002546040517f1e7b8da300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690631e7b8da390610878908790879087908790600401611860565b610cc060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611b9f565b5060025460009073ffffffffffffffffffffffffffffffffffffffff16630660d87d8686866108e981886106b9565b6040518563ffffffff1660e01b81526004016109089493929190611860565b610b8060405180830381865afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611c65565b9050600061095e8686868560600151610e8a565b600154602082015182516040517f94bf804d000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff90811660248301529293509116906394bf804d90604401600060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b50505050505050505050565b610a04610e23565b610a0e6000610f50565b565b60006101008261ffff161115610a685760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203634206269747300000000000000000000000000604482015260640161061d565b5060005b61ffff82161561035e57610a828686868661073d565b610a939060ff16600183901b6116c8565b905081610a9f81611c82565b925050610a6c565b60005b610ab685858585610c03565b1561080c5780610ac5816116f7565b915050610aaa565b600060088260ff161115610b235760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a65206973203820626974730000000000000000000000000000604482015260640161061d565b5060005b60ff82161561035e57610b3c8686868661073d565b610b4e906101fe600184901b16611c96565b905081610b5a8161177d565b925050610b27565b600060408261ffff161115610bb95760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203634206269747300000000000000000000000000604482015260640161061d565b5060005b61ffff82161561035e57610bd38686868661073d565b610bef9060ff166801fffffffffffffffe600184901b16611cbb565b905081610bfb81611c82565b925050610bbd565b6000610c118585858561073d565b60ff166001149050949350505050565b600060208260ff161115610c775760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203332206269747300000000000000000000000000604482015260640161061d565b5060005b60ff82161561035e57610c908686868661073d565b610ca89060ff166401fffffffe600184901b16611cde565b905081610cb48161177d565b925050610c7b565b6000805b6001831115610d0a57610cd46001836116c8565b9150826001166001148015610ce7575080155b15610cfe57610cf76001836116c8565b9150600190505b600183901c9250610cc0565b826001148015610d18575080155b15610d2b57610d286001836116c8565b91505b50919050565b600080610d3f836008611cfd565b905060005b8115610d7b57610d568888888861073d565b610d679060ff16600183901b6116c8565b905081610d73816116e0565b925050610d44565b979650505050505050565b610d8e610e23565b73ffffffffffffffffffffffffffffffffffffffff8116610e175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161061d565b610e2081610f50565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a0e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161061d565b604080518082019091526000808252602082015260005b6005811015610f475763c0470ccf838260058110610ec157610ec1611728565b60200201515160a001515103610f35576000838260058110610ee557610ee5611728565b6020020151602001519050610efe8787878460a0610a10565b73ffffffffffffffffffffffffffffffffffffffff168352610f24878787846040610b62565b67ffffffffffffffff166020840152505b80610f3f816116f7565b915050610ea1565b50949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610ff657600080fd5b50813567ffffffffffffffff81111561100e57600080fd5b60208301915083602082850101111561102657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156110805761108061102d565b60405290565b6040805190810167ffffffffffffffff811182821017156110805761108061102d565b604051610180810167ffffffffffffffff811182821017156110805761108061102d565b6040516080810167ffffffffffffffff811182821017156110805761108061102d565b604051610160810167ffffffffffffffff811182821017156110805761108061102d565b604051610c80810167ffffffffffffffff811182821017156110805761108061102d565b604051610400810167ffffffffffffffff811182821017156110805761108061102d565b60405160a0810167ffffffffffffffff811182821017156110805761108061102d565b8015158114610e2057600080fd5b80356111988161117f565b919050565b600082601f8301126111ae57600080fd5b6111b66110cd565b8060808401858111156111c857600080fd5b845b818110156111e25780358452602093840193016111ca565b509095945050505050565b60ff81168114610e2057600080fd5b8035611198816111ed565b63ffffffff81168114610e2057600080fd5b803561119881611207565b803561ffff8116811461119857600080fd5b600082601f83011261124757600080fd5b61124f6110cd565b80608084018581111561126157600080fd5b845b818110156111e25761127481611224565b845260209384019301611263565b600082601f83011261129357600080fd5b61129b611114565b8061d4808401858111156112ae57600080fd5b845b818110156111e25761022081880312156112ca5760008081fd5b6112d261105c565b6112db8261118d565b815260206112eb8982850161119d565b8183015260a080840135604084015260c06113078186016111fc565b606085015260e061131a8c82880161119d565b608086015261132c6101608701611219565b8386015261133e8c6101808801611236565b8286015261134f61020087016111fc565b90850152505090855290930192610220016112b0565b600080600080600061d4e0868803121561137e57600080fd5b853567ffffffffffffffff81111561139557600080fd5b6113a188828901610fe4565b90965094506113b590508760208801611282565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156113ec57600080fd5b883567ffffffffffffffff81111561140357600080fd5b61140f8b828c01610fe4565b909950975050602089810135965061142a8b60408c01611282565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261144c57600080fd5b611454611138565b918a0191808c84111561146657600080fd5b61d5008c015b84811015611483578035835291830191830161146c565b508094505050505092959891949750929550565b600080600080600061d4e086880312156114b057600080fd5b853567ffffffffffffffff8111156114c757600080fd5b6114d388828901610fe4565b90965094506114e790508760208801611282565b925061d4a0860135915061d4c0860135611500816111ed565b809150509295509295909350565b6104008101818360005b6020808210611527575061153b565b825184529283019290910190600101611518565b50505092915050565b60008061d4a0838503121561155857600080fd5b6115628484611282565b9461d480939093013593505050565b60008060008061d4c0858703121561158857600080fd5b843567ffffffffffffffff81111561159f57600080fd5b6115ab87828801610fe4565b90955093506115bf90508660208701611282565b9396929550929361d4a00135925050565b600080600080600061d4e086880312156115e957600080fd5b853567ffffffffffffffff81111561160057600080fd5b61160c88828901610fe4565b909650945061162090508760208801611282565b925061d4a0860135915061163761d4c08701611224565b90509295509295909350565b60006020828403121561165557600080fd5b5035919050565b60006020828403121561166e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461169257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156116db576116db611699565b500190565b6000816116ef576116ef611699565b506000190190565b6000600019820361170a5761170a611699565b5060010190565b60008282101561172357611723611699565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff80831681851680830382111561177457611774611699565b01949350505050565b600060ff82168061179057611790611699565b6000190192915050565b600060ff821660ff81036117b0576117b0611699565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826117f7576117f76117b9565b500490565b60008261180b5761180b6117b9565b500690565b8060005b6004811015611833578151845260209384019390910190600101611814565b50505050565b8060005b600481101561183357815161ffff1684526020938401939091019060010161183d565b61d4c08082528101849052600061d4e0858782850137600080828886010152817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f89011685010192506020915081840186825b606481101561197957815180511515845285810151868501865b60048110156118ec578251825291880191908801906001016118cf565b505050604081015160a081818701526060830151915060c06119128188018460ff169052565b6080840151925060e061192781890185611810565b8285015163ffffffff1661016089015281850151935061194b610180890185611839565b939093015160ff81166102008801529250611964915050565b506102209290920191908401906001016118b5565b50505050508261d4a083015295945050505050565b8051611198816111ed565b805167ffffffffffffffff8116811461119857600080fd5b805161119881611207565b80516111988161117f565b6000604082840312156119d957600080fd5b6119e1611086565b90508151815260208201516119f5816111ed565b602082015292915050565b60008183036101e0811215611a1457600080fd5b611a1c611086565b91506101c080821215611a2e57600080fd5b611a366110a9565b915083518252611a48602085016119bc565b6020830152611a59604085016119bc565b6040830152611a6a606085016119bc565b6060830152611a7c85608086016119c7565b6080830152611a8e8560c086016119c7565b60a08301526101008085015160c08401526101208086015160e08501526101408087015183860152610160925082870151828601526101808701518186015250506101a08501518184015250818352808401516020840152505092915050565b6000610b80808385031215611b0257600080fd5b611b0a6110cd565b91508251611b178161117f565b8252602083810151611b288161117f565b83820152611b398560408601611a00565b60408401528461023f850112611b4e57600080fd5b611b5661115c565b918401918086841115611b6857600080fd5b61022086015b84811015611b8f57611b808882611a00565b8352918301916101e001611b6e565b5060608501525091949350505050565b6000610cc08284031215611bb257600080fd5b611bba6110f0565b611bc38361198e565b815260208301516020820152611bdb60408401611999565b604082015260608301516060820152611bf660808401611999565b6080820152611c0760a084016119b1565b60a0820152611c1860c084016119b1565b60c0820152611c2960e0840161198e565b60e0820152610100611c3c81850161198e565b908201526101208381015190820152610140611c5a85828601611aee565b908201529392505050565b6000610b808284031215611c7857600080fd5b6116928383611aee565b600061ffff82168061179057611790611699565b600060ff821660ff84168060ff03821115611cb357611cb3611699565b019392505050565b600067ffffffffffffffff80831681851680830382111561177457611774611699565b600063ffffffff80831681851680830382111561177457611774611699565b6000816000190483118215151615611d1757611d17611699565b50029056fea264697066735822122049514c70ebe0e354f0dd4da05656927b34c1809f353d7aa55cbd5aa3c26169f564736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806378c64141116100b2578063a6d8ea9811610081578063ad7117b311610066578063ad7117b3146102e7578063b88d34ee146102fa578063f2fde38b1461030d57600080fd5b8063a6d8ea981461029c578063a77230cf146102bf57600080fd5b806378c64141146102225780638da5cb5b146102355780639aa3c6951461025d5780639c544ceb1461027057600080fd5b80634dca6f06116101095780636ccf7471116100ee5780636ccf7471146101f4578063715018a6146102075780637893a08a1461020f57600080fd5b80634dca6f06146101bc578063505a7b9b146101cf57600080fd5b806319aac94a1461013b5780631a1ae01c146101615780631f6520e614610176578063420a02f31461019c575b600080fd5b61014e610149366004611365565b610320565b6040519081526020015b60405180910390f35b61017461016f3660046113cf565b610367565b005b610189610184366004611497565b6105cb565b60405161ffff9091168152602001610158565b6101af6101aa366004611365565b610669565b604051610158919061150e565b61014e6101ca366004611544565b6106b9565b6101e26101dd366004611571565b61073d565b60405160ff9091168152602001610158565b610174610202366004611571565b610814565b6101746109fc565b61014e61021d3660046115d0565b610a10565b61014e610230366004611571565b610aa7565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610158565b6101e261026b366004611497565b610acd565b61028361027e3660046115d0565b610b62565b60405167ffffffffffffffff9091168152602001610158565b6102af6102aa366004611571565b610c03565b6040519015158152602001610158565b6102d26102cd366004611497565b610c21565b60405163ffffffff9091168152602001610158565b61014e6102f5366004611643565b610cbc565b61014e610308366004611365565b610d31565b61017461031b36600461165c565b610d86565b6000805b821561035b576103368787878761073d565b6103479060ff16600183901b6116c8565b905082610353816116e0565b935050610324565b90505b95945050505050565b60008561037689898888610c03565b6103ca5761038689898888610aa7565b915060005b828110156103c45761039f8a8a898961073d565b6103b09060ff16600184901b6116c8565b9150806103bc816116f7565b91505061038b565b50610499565b6103d689898888610c03565b61043a576103f2898988886103ea89610cbc565b60ff16610b62565b67ffffffffffffffff16915060005b828110156103c4576104158a8a898961073d565b6104269060ff16600184901b6116c8565b915080610432816116f7565b915050610401565b60006104488a8a898961073d565b60ff16905061045d8a8a89896103ea8a610cbc565b67ffffffffffffffff16925060005b838110156104965761048282600185901b6116c8565b92508061048e816116f7565b91505061046c565b50505b6104a38285611711565b6000036105095760005b6020811015610503578381602081106104c8576104c8611728565b602002015160ff036104f157858482602081106104e7576104e7611728565b6020020152610503565b806104fb816116f7565b9150506104ad565b506105c0565b600061051587876106b9565b9050600061052388886106b9565b90508160ff1415801561054b575087826064811061054357610543611728565b602002015151155b1561057a5761057a8b8b600186901b8b8660018a8d61056a9190611711565b6105749190611711565b8b610367565b8060ff141580156105a0575087816064811061059857610598611728565b602002015151155b156105bd576105bd8b8b600286901b8b85600161056a8b8e611711565b50505b505050505050505050565b600060108260ff1611156106265760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff82161561035e5761063f8686868661073d565b6106559060ff166201fffe600184901b16611757565b9050816106618161177d565b92505061062a565b610671610fc5565b60005b60208110156106a85760ff82826020811061069157610691611728565b6020020152806106a0816116f7565b915050610674565b5061035e8686600087878787610367565b60008282606481106106cd576106cd611728565b6020020151602001518383606481106106e8576106e8611728565b60200201516060015160ff166004811061070457610704611728565b6020020151905082826064811061071d5761071d611728565b60200201516060018051906107318261179a565b60ff1690525092915050565b600080600884846064811061075457610754611728565b60200201516040015161076791906117e8565b90506000600885856064811061077f5761077f611728565b60200201516040015161079291906117fc565b90506007818888858181106107a9576107a9611728565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c9350600190508585606481106107f1576107f1611728565b602002015160400181815161080691906116c8565b90525050505b949350505050565b61081c610e23565b6002546040517f1e7b8da300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690631e7b8da390610878908790879087908790600401611860565b610cc060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611b9f565b5060025460009073ffffffffffffffffffffffffffffffffffffffff16630660d87d8686866108e981886106b9565b6040518563ffffffff1660e01b81526004016109089493929190611860565b610b8060405180830381865afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611c65565b9050600061095e8686868560600151610e8a565b600154602082015182516040517f94bf804d000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff90811660248301529293509116906394bf804d90604401600060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b50505050505050505050565b610a04610e23565b610a0e6000610f50565b565b60006101008261ffff161115610a685760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203634206269747300000000000000000000000000604482015260640161061d565b5060005b61ffff82161561035e57610a828686868661073d565b610a939060ff16600183901b6116c8565b905081610a9f81611c82565b925050610a6c565b60005b610ab685858585610c03565b1561080c5780610ac5816116f7565b915050610aaa565b600060088260ff161115610b235760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a65206973203820626974730000000000000000000000000000604482015260640161061d565b5060005b60ff82161561035e57610b3c8686868661073d565b610b4e906101fe600184901b16611c96565b905081610b5a8161177d565b925050610b27565b600060408261ffff161115610bb95760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203634206269747300000000000000000000000000604482015260640161061d565b5060005b61ffff82161561035e57610bd38686868661073d565b610bef9060ff166801fffffffffffffffe600184901b16611cbb565b905081610bfb81611c82565b925050610bbd565b6000610c118585858561073d565b60ff166001149050949350505050565b600060208260ff161115610c775760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a65206973203332206269747300000000000000000000000000604482015260640161061d565b5060005b60ff82161561035e57610c908686868661073d565b610ca89060ff166401fffffffe600184901b16611cde565b905081610cb48161177d565b925050610c7b565b6000805b6001831115610d0a57610cd46001836116c8565b9150826001166001148015610ce7575080155b15610cfe57610cf76001836116c8565b9150600190505b600183901c9250610cc0565b826001148015610d18575080155b15610d2b57610d286001836116c8565b91505b50919050565b600080610d3f836008611cfd565b905060005b8115610d7b57610d568888888861073d565b610d679060ff16600183901b6116c8565b905081610d73816116e0565b925050610d44565b979650505050505050565b610d8e610e23565b73ffffffffffffffffffffffffffffffffffffffff8116610e175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161061d565b610e2081610f50565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a0e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161061d565b604080518082019091526000808252602082015260005b6005811015610f475763c0470ccf838260058110610ec157610ec1611728565b60200201515160a001515103610f35576000838260058110610ee557610ee5611728565b6020020151602001519050610efe8787878460a0610a10565b73ffffffffffffffffffffffffffffffffffffffff168352610f24878787846040610b62565b67ffffffffffffffff166020840152505b80610f3f816116f7565b915050610ea1565b50949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610ff657600080fd5b50813567ffffffffffffffff81111561100e57600080fd5b60208301915083602082850101111561102657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156110805761108061102d565b60405290565b6040805190810167ffffffffffffffff811182821017156110805761108061102d565b604051610180810167ffffffffffffffff811182821017156110805761108061102d565b6040516080810167ffffffffffffffff811182821017156110805761108061102d565b604051610160810167ffffffffffffffff811182821017156110805761108061102d565b604051610c80810167ffffffffffffffff811182821017156110805761108061102d565b604051610400810167ffffffffffffffff811182821017156110805761108061102d565b60405160a0810167ffffffffffffffff811182821017156110805761108061102d565b8015158114610e2057600080fd5b80356111988161117f565b919050565b600082601f8301126111ae57600080fd5b6111b66110cd565b8060808401858111156111c857600080fd5b845b818110156111e25780358452602093840193016111ca565b509095945050505050565b60ff81168114610e2057600080fd5b8035611198816111ed565b63ffffffff81168114610e2057600080fd5b803561119881611207565b803561ffff8116811461119857600080fd5b600082601f83011261124757600080fd5b61124f6110cd565b80608084018581111561126157600080fd5b845b818110156111e25761127481611224565b845260209384019301611263565b600082601f83011261129357600080fd5b61129b611114565b8061d4808401858111156112ae57600080fd5b845b818110156111e25761022081880312156112ca5760008081fd5b6112d261105c565b6112db8261118d565b815260206112eb8982850161119d565b8183015260a080840135604084015260c06113078186016111fc565b606085015260e061131a8c82880161119d565b608086015261132c6101608701611219565b8386015261133e8c6101808801611236565b8286015261134f61020087016111fc565b90850152505090855290930192610220016112b0565b600080600080600061d4e0868803121561137e57600080fd5b853567ffffffffffffffff81111561139557600080fd5b6113a188828901610fe4565b90965094506113b590508760208801611282565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156113ec57600080fd5b883567ffffffffffffffff81111561140357600080fd5b61140f8b828c01610fe4565b909950975050602089810135965061142a8b60408c01611282565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261144c57600080fd5b611454611138565b918a0191808c84111561146657600080fd5b61d5008c015b84811015611483578035835291830191830161146c565b508094505050505092959891949750929550565b600080600080600061d4e086880312156114b057600080fd5b853567ffffffffffffffff8111156114c757600080fd5b6114d388828901610fe4565b90965094506114e790508760208801611282565b925061d4a0860135915061d4c0860135611500816111ed565b809150509295509295909350565b6104008101818360005b6020808210611527575061153b565b825184529283019290910190600101611518565b50505092915050565b60008061d4a0838503121561155857600080fd5b6115628484611282565b9461d480939093013593505050565b60008060008061d4c0858703121561158857600080fd5b843567ffffffffffffffff81111561159f57600080fd5b6115ab87828801610fe4565b90955093506115bf90508660208701611282565b9396929550929361d4a00135925050565b600080600080600061d4e086880312156115e957600080fd5b853567ffffffffffffffff81111561160057600080fd5b61160c88828901610fe4565b909650945061162090508760208801611282565b925061d4a0860135915061163761d4c08701611224565b90509295509295909350565b60006020828403121561165557600080fd5b5035919050565b60006020828403121561166e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461169257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156116db576116db611699565b500190565b6000816116ef576116ef611699565b506000190190565b6000600019820361170a5761170a611699565b5060010190565b60008282101561172357611723611699565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff80831681851680830382111561177457611774611699565b01949350505050565b600060ff82168061179057611790611699565b6000190192915050565b600060ff821660ff81036117b0576117b0611699565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826117f7576117f76117b9565b500490565b60008261180b5761180b6117b9565b500690565b8060005b6004811015611833578151845260209384019390910190600101611814565b50505050565b8060005b600481101561183357815161ffff1684526020938401939091019060010161183d565b61d4c08082528101849052600061d4e0858782850137600080828886010152817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f89011685010192506020915081840186825b606481101561197957815180511515845285810151868501865b60048110156118ec578251825291880191908801906001016118cf565b505050604081015160a081818701526060830151915060c06119128188018460ff169052565b6080840151925060e061192781890185611810565b8285015163ffffffff1661016089015281850151935061194b610180890185611839565b939093015160ff81166102008801529250611964915050565b506102209290920191908401906001016118b5565b50505050508261d4a083015295945050505050565b8051611198816111ed565b805167ffffffffffffffff8116811461119857600080fd5b805161119881611207565b80516111988161117f565b6000604082840312156119d957600080fd5b6119e1611086565b90508151815260208201516119f5816111ed565b602082015292915050565b60008183036101e0811215611a1457600080fd5b611a1c611086565b91506101c080821215611a2e57600080fd5b611a366110a9565b915083518252611a48602085016119bc565b6020830152611a59604085016119bc565b6040830152611a6a606085016119bc565b6060830152611a7c85608086016119c7565b6080830152611a8e8560c086016119c7565b60a08301526101008085015160c08401526101208086015160e08501526101408087015183860152610160925082870151828601526101808701518186015250506101a08501518184015250818352808401516020840152505092915050565b6000610b80808385031215611b0257600080fd5b611b0a6110cd565b91508251611b178161117f565b8252602083810151611b288161117f565b83820152611b398560408601611a00565b60408401528461023f850112611b4e57600080fd5b611b5661115c565b918401918086841115611b6857600080fd5b61022086015b84811015611b8f57611b808882611a00565b8352918301916101e001611b6e565b5060608501525091949350505050565b6000610cc08284031215611bb257600080fd5b611bba6110f0565b611bc38361198e565b815260208301516020820152611bdb60408401611999565b604082015260608301516060820152611bf660808401611999565b6080820152611c0760a084016119b1565b60a0820152611c1860c084016119b1565b60c0820152611c2960e0840161198e565b60e0820152610100611c3c81850161198e565b908201526101208381015190820152610140611c5a85828601611aee565b908201529392505050565b6000610b808284031215611c7857600080fd5b6116928383611aee565b600061ffff82168061179057611790611699565b600060ff821660ff84168060ff03821115611cb357611cb3611699565b019392505050565b600067ffffffffffffffff80831681851680830382111561177457611774611699565b600063ffffffff80831681851680830382111561177457611774611699565b6000816000190483118215151615611d1757611d17611699565b50029056fea264697066735822122049514c70ebe0e354f0dd4da05656927b34c1809f353d7aa55cbd5aa3c26169f564736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
