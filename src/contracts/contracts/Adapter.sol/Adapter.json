{
  "_format": "hh-sol-artifact-1",
  "contractName": "Adapter",
  "sourceName": "contracts/Adapter.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tonToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "transactionParser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SwapEthereumInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SwapWTONInitialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "opcode",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "swapETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "swapToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021df380380620021df8339810160408190526200003491620000de565b6200003f3362000071565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905562000116565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000d957600080fd5b919050565b60008060408385031215620000f257600080fd5b620000fd83620000c1565b91506200010d60208401620000c1565b90509250929050565b6120b980620001266000396000f3fe60806040526004361061015f5760003560e01c806378c64141116100c0578063a77230cf11610074578063b88d34ee11610059578063b88d34ee14610413578063efc354eb14610433578063f2fde38b1461044657600080fd5b8063a77230cf146103be578063ad7117b3146103f357600080fd5b80639aa3c695116100a55780639aa3c695146103355780639c544ceb14610355578063a6d8ea981461038e57600080fd5b806378c64141146102e05780638da5cb5b1461030057600080fd5b8063505a7b9b11610117578063715018a6116100fc578063715018a61461028b57806372618aac146102a05780637893a08a146102c057600080fd5b8063505a7b9b14610239578063650b55661461026b57600080fd5b80631f6520e6116101485780631f6520e6146101b9578063420a02f3146101ec5780634dca6f061461021957600080fd5b806319aac94a146101645780631a1ae01c14610197575b600080fd5b34801561017057600080fd5b5061018461017f366004611628565b610466565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b506101b76101b2366004611692565b6104ad565b005b3480156101c557600080fd5b506101d96101d436600461175a565b610711565b60405161ffff909116815260200161018e565b3480156101f857600080fd5b5061020c610207366004611628565b6107af565b60405161018e91906117d1565b34801561022557600080fd5b50610184610234366004611807565b6107ff565b34801561024557600080fd5b50610259610254366004611834565b610883565b60405160ff909116815260200161018e565b34801561027757600080fd5b506101b7610286366004611893565b61095a565b34801561029757600080fd5b506101b7610bc4565b3480156102ac57600080fd5b506101b76102bb36600461191f565b610bd8565b3480156102cc57600080fd5b506101846102db366004611952565b610ca3565b3480156102ec57600080fd5b506101846102fb366004611834565b610d3a565b34801561030c57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018e565b34801561034157600080fd5b5061025961035036600461175a565b610d60565b34801561036157600080fd5b50610375610370366004611952565b610df5565b60405167ffffffffffffffff909116815260200161018e565b34801561039a57600080fd5b506103ae6103a9366004611834565b610e96565b604051901515815260200161018e565b3480156103ca57600080fd5b506103de6103d936600461175a565b610eb4565b60405163ffffffff909116815260200161018e565b3480156103ff57600080fd5b5061018461040e3660046119c5565b610f4f565b34801561041f57600080fd5b5061018461042e366004611628565b610fc4565b6101b76104413660046119c5565b611019565b34801561045257600080fd5b506101b76104613660046119de565b611054565b6000805b82156104a15761047c87878787610883565b61048d9060ff16600183901b611a2f565b90508261049981611a47565b93505061046a565b90505b95945050505050565b6000856104bc89898888610e96565b610510576104cc89898888610d3a565b915060005b8281101561050a576104e58a8a8989610883565b6104f69060ff16600184901b611a2f565b91508061050281611a5e565b9150506104d1565b506105df565b61051c89898888610e96565b610580576105388989888861053089610f4f565b60ff16610df5565b67ffffffffffffffff16915060005b8281101561050a5761055b8a8a8989610883565b61056c9060ff16600184901b611a2f565b91508061057881611a5e565b915050610547565b600061058e8a8a8989610883565b60ff1690506105a38a8a89896105308a610f4f565b67ffffffffffffffff16925060005b838110156105dc576105c882600185901b611a2f565b9250806105d481611a5e565b9150506105b2565b50505b6105e98285611a78565b60000361064f5760005b60208110156106495783816020811061060e5761060e611a8f565b602002015160ff03610637578584826020811061062d5761062d611a8f565b6020020152610649565b8061064181611a5e565b9150506105f3565b50610706565b600061065b87876107ff565b9050600061066988886107ff565b90508160ff14158015610691575087826064811061068957610689611a8f565b602002015151155b156106c0576106c08b8b600186901b8b8660018a8d6106b09190611a78565b6106ba9190611a78565b8b6104ad565b8060ff141580156106e657508781606481106106de576106de611a8f565b602002015151155b15610703576107038b8b600286901b8b8560016106b08b8e611a78565b50505b505050505050505050565b600060108260ff16111561076c5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff8216156104a45761078586868686610883565b61079b9060ff166201fffe600184901b16611abe565b9050816107a781611ae4565b925050610770565b6107b7611288565b60005b60208110156107ee5760ff8282602081106107d7576107d7611a8f565b6020020152806107e681611a5e565b9150506107ba565b506104a486866000878787876104ad565b600082826064811061081357610813611a8f565b60200201516020015183836064811061082e5761082e611a8f565b60200201516060015160ff166004811061084a5761084a611a8f565b6020020151905082826064811061086357610863611a8f565b602002015160600180519061087782611b01565b60ff1690525092915050565b600080600884846064811061089a5761089a611a8f565b6020020151604001516108ad9190611b4f565b9050600060088585606481106108c5576108c5611a8f565b6020020151604001516108d89190611b63565b90506007818888858181106108ef576108ef611a8f565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c93506001905085856064811061093757610937611a8f565b602002015160400181815161094c9190611a2f565b90525050505b949350505050565b6109626110f1565b6002546040517f1e7b8da300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690631e7b8da3906109be908890889087908790600401611bc7565b610cc060405180830381865afa1580156109dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a009190611f06565b5060025460009073ffffffffffffffffffffffffffffffffffffffff16630660d87d878786610a2f81886107ff565b6040518563ffffffff1660e01b8152600401610a4e9493929190611bc7565b610b8060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611fcc565b90506000610aa5878787878660600151611158565b905084600103610b6b57600154602082015173ffffffffffffffffffffffffffffffffffffffff909116906394bf804d90610ae490633b9aca00611fe9565b835160405160e084901b7fffffffff00000000000000000000000000000000000000000000000000000000168152600481019290925273ffffffffffffffffffffffffffffffffffffffff166024820152604401600060405180830381600087803b158015610b5257600080fd5b505af1158015610b66573d6000803e3d6000fd5b505050505b84600203610bbb578051602082015160405173ffffffffffffffffffffffffffffffffffffffff83169180156108fc02916000818181858888f19350505050158015610706573d6000803e3d6000fd5b50505050505050565b610bcc6110f1565b610bd66000611213565b565b6001546040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690639dc29fac90604401600060405180830381600087803b158015610c4c57600080fd5b505af1158015610c60573d6000803e3d6000fd5b505060408051848152602081018690527f09a9af46918f2e52460329a694cdd4cd6d55354ea9b336b88b4dea59914a9a83935001905060405180910390a1505050565b60006101008261ffff161115610cfb5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610763565b5060005b61ffff8216156104a457610d1586868686610883565b610d269060ff16600183901b611a2f565b905081610d3281612008565b925050610cff565b60005b610d4985858585610e96565b156109525780610d5881611a5e565b915050610d3d565b600060088260ff161115610db65760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610763565b5060005b60ff8216156104a457610dcf86868686610883565b610de1906101fe600184901b1661201c565b905081610ded81611ae4565b925050610dba565b600060408261ffff161115610e4c5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610763565b5060005b61ffff8216156104a457610e6686868686610883565b610e829060ff166801fffffffffffffffe600184901b16612041565b905081610e8e81612008565b925050610e50565b6000610ea485858585610883565b60ff166001149050949350505050565b600060208260ff161115610f0a5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610763565b5060005b60ff8216156104a457610f2386868686610883565b610f3b9060ff166401fffffffe600184901b16612064565b905081610f4781611ae4565b925050610f0e565b6000805b6001831115610f9d57610f67600183611a2f565b9150826001166001148015610f7a575080155b15610f9157610f8a600183611a2f565b9150600190505b600183901c9250610f53565b826001148015610fab575080155b15610fbe57610fbb600183611a2f565b91505b50919050565b600080610fd2836008611fe9565b905060005b811561100e57610fe988888888610883565b610ffa9060ff16600183901b611a2f565b90508161100681611a47565b925050610fd7565b979650505050505050565b604080518281523460208201527f6888ec7969c035bf2b2a4f1c3d41fd8e393fee76a9fa186e4c9405c1a01f9b72910160405180910390a150565b61105c6110f1565b73ffffffffffffffffffffffffffffffffffffffff81166110e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610763565b6110ee81611213565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610763565b604080518082019091526000808252602082015260005b6005811015611209578483826005811061118b5761118b611a8f565b60200201515160a0015151036111f75760008382600581106111af576111af611a8f565b60200201516020015190506111c988888784610100610ca3565b73ffffffffffffffffffffffffffffffffffffffff1683526111f088888784610100610ca3565b6020840152505b8061120181611a5e565b91505061116f565b5095945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f8401126112b957600080fd5b50813567ffffffffffffffff8111156112d157600080fd5b6020830191508360208285010111156112e957600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611343576113436112f0565b60405290565b6040805190810167ffffffffffffffff81118282101715611343576113436112f0565b604051610180810167ffffffffffffffff81118282101715611343576113436112f0565b6040516080810167ffffffffffffffff81118282101715611343576113436112f0565b604051610160810167ffffffffffffffff81118282101715611343576113436112f0565b604051610c80810167ffffffffffffffff81118282101715611343576113436112f0565b604051610400810167ffffffffffffffff81118282101715611343576113436112f0565b60405160a0810167ffffffffffffffff81118282101715611343576113436112f0565b80151581146110ee57600080fd5b803561145b81611442565b919050565b600082601f83011261147157600080fd5b611479611390565b80608084018581111561148b57600080fd5b845b818110156114a557803584526020938401930161148d565b509095945050505050565b60ff811681146110ee57600080fd5b803561145b816114b0565b63ffffffff811681146110ee57600080fd5b803561145b816114ca565b803561ffff8116811461145b57600080fd5b600082601f83011261150a57600080fd5b611512611390565b80608084018581111561152457600080fd5b845b818110156114a557611537816114e7565b845260209384019301611526565b600082601f83011261155657600080fd5b61155e6113d7565b8061d48084018581111561157157600080fd5b845b818110156114a557610220818803121561158d5760008081fd5b61159561131f565b61159e82611450565b815260206115ae89828501611460565b8183015260a080840135604084015260c06115ca8186016114bf565b606085015260e06115dd8c828801611460565b60808601526115ef61016087016114dc565b838601526116018c61018088016114f9565b8286015261161261020087016114bf565b9085015250509085529093019261022001611573565b600080600080600061d4e0868803121561164157600080fd5b853567ffffffffffffffff81111561165857600080fd5b611664888289016112a7565b909650945061167890508760208801611545565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156116af57600080fd5b883567ffffffffffffffff8111156116c657600080fd5b6116d28b828c016112a7565b90995097505060208981013596506116ed8b60408c01611545565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261170f57600080fd5b6117176113fb565b918a0191808c84111561172957600080fd5b61d5008c015b84811015611746578035835291830191830161172f565b508094505050505092959891949750929550565b600080600080600061d4e0868803121561177357600080fd5b853567ffffffffffffffff81111561178a57600080fd5b611796888289016112a7565b90965094506117aa90508760208801611545565b925061d4a0860135915061d4c08601356117c3816114b0565b809150509295509295909350565b6104008101818360005b60208082106117ea57506117fe565b8251845292830192909101906001016117db565b50505092915050565b60008061d4a0838503121561181b57600080fd5b6118258484611545565b9461d480939093013593505050565b60008060008061d4c0858703121561184b57600080fd5b843567ffffffffffffffff81111561186257600080fd5b61186e878288016112a7565b909550935061188290508660208701611545565b9396929550929361d4a00135925050565b600080600080600061d4e086880312156118ac57600080fd5b853567ffffffffffffffff8111156118c357600080fd5b6118cf888289016112a7565b909650945050602086013592506118e98760408801611545565b9497939650919461d4c0013592915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461145b57600080fd5b60008060006060848603121561193457600080fd5b61193d846118fb565b95602085013595506040909401359392505050565b600080600080600061d4e0868803121561196b57600080fd5b853567ffffffffffffffff81111561198257600080fd5b61198e888289016112a7565b90965094506119a290508760208801611545565b925061d4a086013591506119b961d4c087016114e7565b90509295509295909350565b6000602082840312156119d757600080fd5b5035919050565b6000602082840312156119f057600080fd5b6119f9826118fb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611a4257611a42611a00565b500190565b600081611a5657611a56611a00565b506000190190565b60006000198203611a7157611a71611a00565b5060010190565b600082821015611a8a57611a8a611a00565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff808316818516808303821115611adb57611adb611a00565b01949350505050565b600060ff821680611af757611af7611a00565b6000190192915050565b600060ff821660ff8103611b1757611b17611a00565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611b5e57611b5e611b20565b500490565b600082611b7257611b72611b20565b500690565b8060005b6004811015611b9a578151845260209384019390910190600101611b7b565b50505050565b8060005b6004811015611b9a57815161ffff16845260209384019390910190600101611ba4565b61d4c08082528101849052600061d4e0858782850137600080828886010152817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f89011685010192506020915081840186825b6064811015611ce057815180511515845285810151868501865b6004811015611c5357825182529188019190880190600101611c36565b505050604081015160a081818701526060830151915060c0611c798188018460ff169052565b6080840151925060e0611c8e81890185611b77565b8285015163ffffffff16610160890152818501519350611cb2610180890185611ba0565b939093015160ff81166102008801529250611ccb915050565b50610220929092019190840190600101611c1c565b50505050508261d4a083015295945050505050565b805161145b816114b0565b805167ffffffffffffffff8116811461145b57600080fd5b805161145b816114ca565b805161145b81611442565b600060408284031215611d4057600080fd5b611d48611349565b9050815181526020820151611d5c816114b0565b602082015292915050565b60008183036101e0811215611d7b57600080fd5b611d83611349565b91506101c080821215611d9557600080fd5b611d9d61136c565b915083518252611daf60208501611d23565b6020830152611dc060408501611d23565b6040830152611dd160608501611d23565b6060830152611de38560808601611d2e565b6080830152611df58560c08601611d2e565b60a08301526101008085015160c08401526101208086015160e08501526101408087015183860152610160925082870151828601526101808701518186015250506101a08501518184015250818352808401516020840152505092915050565b6000610b80808385031215611e6957600080fd5b611e71611390565b91508251611e7e81611442565b8252602083810151611e8f81611442565b83820152611ea08560408601611d67565b60408401528461023f850112611eb557600080fd5b611ebd61141f565b918401918086841115611ecf57600080fd5b61022086015b84811015611ef657611ee78882611d67565b8352918301916101e001611ed5565b5060608501525091949350505050565b6000610cc08284031215611f1957600080fd5b611f216113b3565b611f2a83611cf5565b815260208301516020820152611f4260408401611d00565b604082015260608301516060820152611f5d60808401611d00565b6080820152611f6e60a08401611d18565b60a0820152611f7f60c08401611d18565b60c0820152611f9060e08401611cf5565b60e0820152610100611fa3818501611cf5565b908201526101208381015190820152610140611fc185828601611e55565b908201529392505050565b6000610b808284031215611fdf57600080fd5b6119f98383611e55565b600081600019048311821515161561200357612003611a00565b500290565b600061ffff821680611af757611af7611a00565b600060ff821660ff84168060ff0382111561203957612039611a00565b019392505050565b600067ffffffffffffffff808316818516808303821115611adb57611adb611a00565b600063ffffffff808316818516808303821115611adb57611adb611a0056fea2646970667358221220689b44e9b69eeeca06b437b6fa9ad3f43443aadbaa115efd984953b873a5967664736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061015f5760003560e01c806378c64141116100c0578063a77230cf11610074578063b88d34ee11610059578063b88d34ee14610413578063efc354eb14610433578063f2fde38b1461044657600080fd5b8063a77230cf146103be578063ad7117b3146103f357600080fd5b80639aa3c695116100a55780639aa3c695146103355780639c544ceb14610355578063a6d8ea981461038e57600080fd5b806378c64141146102e05780638da5cb5b1461030057600080fd5b8063505a7b9b11610117578063715018a6116100fc578063715018a61461028b57806372618aac146102a05780637893a08a146102c057600080fd5b8063505a7b9b14610239578063650b55661461026b57600080fd5b80631f6520e6116101485780631f6520e6146101b9578063420a02f3146101ec5780634dca6f061461021957600080fd5b806319aac94a146101645780631a1ae01c14610197575b600080fd5b34801561017057600080fd5b5061018461017f366004611628565b610466565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b506101b76101b2366004611692565b6104ad565b005b3480156101c557600080fd5b506101d96101d436600461175a565b610711565b60405161ffff909116815260200161018e565b3480156101f857600080fd5b5061020c610207366004611628565b6107af565b60405161018e91906117d1565b34801561022557600080fd5b50610184610234366004611807565b6107ff565b34801561024557600080fd5b50610259610254366004611834565b610883565b60405160ff909116815260200161018e565b34801561027757600080fd5b506101b7610286366004611893565b61095a565b34801561029757600080fd5b506101b7610bc4565b3480156102ac57600080fd5b506101b76102bb36600461191f565b610bd8565b3480156102cc57600080fd5b506101846102db366004611952565b610ca3565b3480156102ec57600080fd5b506101846102fb366004611834565b610d3a565b34801561030c57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018e565b34801561034157600080fd5b5061025961035036600461175a565b610d60565b34801561036157600080fd5b50610375610370366004611952565b610df5565b60405167ffffffffffffffff909116815260200161018e565b34801561039a57600080fd5b506103ae6103a9366004611834565b610e96565b604051901515815260200161018e565b3480156103ca57600080fd5b506103de6103d936600461175a565b610eb4565b60405163ffffffff909116815260200161018e565b3480156103ff57600080fd5b5061018461040e3660046119c5565b610f4f565b34801561041f57600080fd5b5061018461042e366004611628565b610fc4565b6101b76104413660046119c5565b611019565b34801561045257600080fd5b506101b76104613660046119de565b611054565b6000805b82156104a15761047c87878787610883565b61048d9060ff16600183901b611a2f565b90508261049981611a47565b93505061046a565b90505b95945050505050565b6000856104bc89898888610e96565b610510576104cc89898888610d3a565b915060005b8281101561050a576104e58a8a8989610883565b6104f69060ff16600184901b611a2f565b91508061050281611a5e565b9150506104d1565b506105df565b61051c89898888610e96565b610580576105388989888861053089610f4f565b60ff16610df5565b67ffffffffffffffff16915060005b8281101561050a5761055b8a8a8989610883565b61056c9060ff16600184901b611a2f565b91508061057881611a5e565b915050610547565b600061058e8a8a8989610883565b60ff1690506105a38a8a89896105308a610f4f565b67ffffffffffffffff16925060005b838110156105dc576105c882600185901b611a2f565b9250806105d481611a5e565b9150506105b2565b50505b6105e98285611a78565b60000361064f5760005b60208110156106495783816020811061060e5761060e611a8f565b602002015160ff03610637578584826020811061062d5761062d611a8f565b6020020152610649565b8061064181611a5e565b9150506105f3565b50610706565b600061065b87876107ff565b9050600061066988886107ff565b90508160ff14158015610691575087826064811061068957610689611a8f565b602002015151155b156106c0576106c08b8b600186901b8b8660018a8d6106b09190611a78565b6106ba9190611a78565b8b6104ad565b8060ff141580156106e657508781606481106106de576106de611a8f565b602002015151155b15610703576107038b8b600286901b8b8560016106b08b8e611a78565b50505b505050505050505050565b600060108260ff16111561076c5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff8216156104a45761078586868686610883565b61079b9060ff166201fffe600184901b16611abe565b9050816107a781611ae4565b925050610770565b6107b7611288565b60005b60208110156107ee5760ff8282602081106107d7576107d7611a8f565b6020020152806107e681611a5e565b9150506107ba565b506104a486866000878787876104ad565b600082826064811061081357610813611a8f565b60200201516020015183836064811061082e5761082e611a8f565b60200201516060015160ff166004811061084a5761084a611a8f565b6020020151905082826064811061086357610863611a8f565b602002015160600180519061087782611b01565b60ff1690525092915050565b600080600884846064811061089a5761089a611a8f565b6020020151604001516108ad9190611b4f565b9050600060088585606481106108c5576108c5611a8f565b6020020151604001516108d89190611b63565b90506007818888858181106108ef576108ef611a8f565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c93506001905085856064811061093757610937611a8f565b602002015160400181815161094c9190611a2f565b90525050505b949350505050565b6109626110f1565b6002546040517f1e7b8da300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690631e7b8da3906109be908890889087908790600401611bc7565b610cc060405180830381865afa1580156109dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a009190611f06565b5060025460009073ffffffffffffffffffffffffffffffffffffffff16630660d87d878786610a2f81886107ff565b6040518563ffffffff1660e01b8152600401610a4e9493929190611bc7565b610b8060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611fcc565b90506000610aa5878787878660600151611158565b905084600103610b6b57600154602082015173ffffffffffffffffffffffffffffffffffffffff909116906394bf804d90610ae490633b9aca00611fe9565b835160405160e084901b7fffffffff00000000000000000000000000000000000000000000000000000000168152600481019290925273ffffffffffffffffffffffffffffffffffffffff166024820152604401600060405180830381600087803b158015610b5257600080fd5b505af1158015610b66573d6000803e3d6000fd5b505050505b84600203610bbb578051602082015160405173ffffffffffffffffffffffffffffffffffffffff83169180156108fc02916000818181858888f19350505050158015610706573d6000803e3d6000fd5b50505050505050565b610bcc6110f1565b610bd66000611213565b565b6001546040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690639dc29fac90604401600060405180830381600087803b158015610c4c57600080fd5b505af1158015610c60573d6000803e3d6000fd5b505060408051848152602081018690527f09a9af46918f2e52460329a694cdd4cd6d55354ea9b336b88b4dea59914a9a83935001905060405180910390a1505050565b60006101008261ffff161115610cfb5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610763565b5060005b61ffff8216156104a457610d1586868686610883565b610d269060ff16600183901b611a2f565b905081610d3281612008565b925050610cff565b60005b610d4985858585610e96565b156109525780610d5881611a5e565b915050610d3d565b600060088260ff161115610db65760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610763565b5060005b60ff8216156104a457610dcf86868686610883565b610de1906101fe600184901b1661201c565b905081610ded81611ae4565b925050610dba565b600060408261ffff161115610e4c5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610763565b5060005b61ffff8216156104a457610e6686868686610883565b610e829060ff166801fffffffffffffffe600184901b16612041565b905081610e8e81612008565b925050610e50565b6000610ea485858585610883565b60ff166001149050949350505050565b600060208260ff161115610f0a5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610763565b5060005b60ff8216156104a457610f2386868686610883565b610f3b9060ff166401fffffffe600184901b16612064565b905081610f4781611ae4565b925050610f0e565b6000805b6001831115610f9d57610f67600183611a2f565b9150826001166001148015610f7a575080155b15610f9157610f8a600183611a2f565b9150600190505b600183901c9250610f53565b826001148015610fab575080155b15610fbe57610fbb600183611a2f565b91505b50919050565b600080610fd2836008611fe9565b905060005b811561100e57610fe988888888610883565b610ffa9060ff16600183901b611a2f565b90508161100681611a47565b925050610fd7565b979650505050505050565b604080518281523460208201527f6888ec7969c035bf2b2a4f1c3d41fd8e393fee76a9fa186e4c9405c1a01f9b72910160405180910390a150565b61105c6110f1565b73ffffffffffffffffffffffffffffffffffffffff81166110e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610763565b6110ee81611213565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610763565b604080518082019091526000808252602082015260005b6005811015611209578483826005811061118b5761118b611a8f565b60200201515160a0015151036111f75760008382600581106111af576111af611a8f565b60200201516020015190506111c988888784610100610ca3565b73ffffffffffffffffffffffffffffffffffffffff1683526111f088888784610100610ca3565b6020840152505b8061120181611a5e565b91505061116f565b5095945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f8401126112b957600080fd5b50813567ffffffffffffffff8111156112d157600080fd5b6020830191508360208285010111156112e957600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611343576113436112f0565b60405290565b6040805190810167ffffffffffffffff81118282101715611343576113436112f0565b604051610180810167ffffffffffffffff81118282101715611343576113436112f0565b6040516080810167ffffffffffffffff81118282101715611343576113436112f0565b604051610160810167ffffffffffffffff81118282101715611343576113436112f0565b604051610c80810167ffffffffffffffff81118282101715611343576113436112f0565b604051610400810167ffffffffffffffff81118282101715611343576113436112f0565b60405160a0810167ffffffffffffffff81118282101715611343576113436112f0565b80151581146110ee57600080fd5b803561145b81611442565b919050565b600082601f83011261147157600080fd5b611479611390565b80608084018581111561148b57600080fd5b845b818110156114a557803584526020938401930161148d565b509095945050505050565b60ff811681146110ee57600080fd5b803561145b816114b0565b63ffffffff811681146110ee57600080fd5b803561145b816114ca565b803561ffff8116811461145b57600080fd5b600082601f83011261150a57600080fd5b611512611390565b80608084018581111561152457600080fd5b845b818110156114a557611537816114e7565b845260209384019301611526565b600082601f83011261155657600080fd5b61155e6113d7565b8061d48084018581111561157157600080fd5b845b818110156114a557610220818803121561158d5760008081fd5b61159561131f565b61159e82611450565b815260206115ae89828501611460565b8183015260a080840135604084015260c06115ca8186016114bf565b606085015260e06115dd8c828801611460565b60808601526115ef61016087016114dc565b838601526116018c61018088016114f9565b8286015261161261020087016114bf565b9085015250509085529093019261022001611573565b600080600080600061d4e0868803121561164157600080fd5b853567ffffffffffffffff81111561165857600080fd5b611664888289016112a7565b909650945061167890508760208801611545565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156116af57600080fd5b883567ffffffffffffffff8111156116c657600080fd5b6116d28b828c016112a7565b90995097505060208981013596506116ed8b60408c01611545565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261170f57600080fd5b6117176113fb565b918a0191808c84111561172957600080fd5b61d5008c015b84811015611746578035835291830191830161172f565b508094505050505092959891949750929550565b600080600080600061d4e0868803121561177357600080fd5b853567ffffffffffffffff81111561178a57600080fd5b611796888289016112a7565b90965094506117aa90508760208801611545565b925061d4a0860135915061d4c08601356117c3816114b0565b809150509295509295909350565b6104008101818360005b60208082106117ea57506117fe565b8251845292830192909101906001016117db565b50505092915050565b60008061d4a0838503121561181b57600080fd5b6118258484611545565b9461d480939093013593505050565b60008060008061d4c0858703121561184b57600080fd5b843567ffffffffffffffff81111561186257600080fd5b61186e878288016112a7565b909550935061188290508660208701611545565b9396929550929361d4a00135925050565b600080600080600061d4e086880312156118ac57600080fd5b853567ffffffffffffffff8111156118c357600080fd5b6118cf888289016112a7565b909650945050602086013592506118e98760408801611545565b9497939650919461d4c0013592915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461145b57600080fd5b60008060006060848603121561193457600080fd5b61193d846118fb565b95602085013595506040909401359392505050565b600080600080600061d4e0868803121561196b57600080fd5b853567ffffffffffffffff81111561198257600080fd5b61198e888289016112a7565b90965094506119a290508760208801611545565b925061d4a086013591506119b961d4c087016114e7565b90509295509295909350565b6000602082840312156119d757600080fd5b5035919050565b6000602082840312156119f057600080fd5b6119f9826118fb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611a4257611a42611a00565b500190565b600081611a5657611a56611a00565b506000190190565b60006000198203611a7157611a71611a00565b5060010190565b600082821015611a8a57611a8a611a00565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff808316818516808303821115611adb57611adb611a00565b01949350505050565b600060ff821680611af757611af7611a00565b6000190192915050565b600060ff821660ff8103611b1757611b17611a00565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611b5e57611b5e611b20565b500490565b600082611b7257611b72611b20565b500690565b8060005b6004811015611b9a578151845260209384019390910190600101611b7b565b50505050565b8060005b6004811015611b9a57815161ffff16845260209384019390910190600101611ba4565b61d4c08082528101849052600061d4e0858782850137600080828886010152817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f89011685010192506020915081840186825b6064811015611ce057815180511515845285810151868501865b6004811015611c5357825182529188019190880190600101611c36565b505050604081015160a081818701526060830151915060c0611c798188018460ff169052565b6080840151925060e0611c8e81890185611b77565b8285015163ffffffff16610160890152818501519350611cb2610180890185611ba0565b939093015160ff81166102008801529250611ccb915050565b50610220929092019190840190600101611c1c565b50505050508261d4a083015295945050505050565b805161145b816114b0565b805167ffffffffffffffff8116811461145b57600080fd5b805161145b816114ca565b805161145b81611442565b600060408284031215611d4057600080fd5b611d48611349565b9050815181526020820151611d5c816114b0565b602082015292915050565b60008183036101e0811215611d7b57600080fd5b611d83611349565b91506101c080821215611d9557600080fd5b611d9d61136c565b915083518252611daf60208501611d23565b6020830152611dc060408501611d23565b6040830152611dd160608501611d23565b6060830152611de38560808601611d2e565b6080830152611df58560c08601611d2e565b60a08301526101008085015160c08401526101208086015160e08501526101408087015183860152610160925082870151828601526101808701518186015250506101a08501518184015250818352808401516020840152505092915050565b6000610b80808385031215611e6957600080fd5b611e71611390565b91508251611e7e81611442565b8252602083810151611e8f81611442565b83820152611ea08560408601611d67565b60408401528461023f850112611eb557600080fd5b611ebd61141f565b918401918086841115611ecf57600080fd5b61022086015b84811015611ef657611ee78882611d67565b8352918301916101e001611ed5565b5060608501525091949350505050565b6000610cc08284031215611f1957600080fd5b611f216113b3565b611f2a83611cf5565b815260208301516020820152611f4260408401611d00565b604082015260608301516060820152611f5d60808401611d00565b6080820152611f6e60a08401611d18565b60a0820152611f7f60c08401611d18565b60c0820152611f9060e08401611cf5565b60e0820152610100611fa3818501611cf5565b908201526101208381015190820152610140611fc185828601611e55565b908201529392505050565b6000610b808284031215611fdf57600080fd5b6119f98383611e55565b600081600019048311821515161561200357612003611a00565b500290565b600061ffff821680611af757611af7611a00565b600060ff821660ff84168060ff0382111561203957612039611a00565b019392505050565b600067ffffffffffffffff808316818516808303821115611adb57611adb611a00565b600063ffffffff808316818516808303821115611adb57611adb611a0056fea2646970667358221220689b44e9b69eeeca06b437b6fa9ad3f43443aadbaa115efd984953b873a5967664736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
