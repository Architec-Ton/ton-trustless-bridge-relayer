{
  "_format": "hh-sol-artifact-1",
  "contractName": "TransactionParser",
  "sourceName": "contracts/parser/TransactionParser.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        }
      ],
      "name": "deserializeMsgDate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eth_address",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct TestData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bocData",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "Type",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "ihrDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "bounce",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "bounced",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "wc",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct TonAddress",
                  "name": "src",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "wc",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct TonAddress",
                  "name": "dest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "ihrFee",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "fwdFee",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "createdLt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "importFee",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct RawCommonMessageInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "bodyIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct Message[5]",
          "name": "outMessages",
          "type": "tuple[5]"
        }
      ],
      "name": "getDataFromMessages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eth_address",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct TestData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "messagesIdx",
          "type": "uint256"
        }
      ],
      "name": "parseCommonMsgInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "Type",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ihrDisabled",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "bounce",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "bounced",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "wc",
                  "type": "uint8"
                }
              ],
              "internalType": "struct TonAddress",
              "name": "src",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "wc",
                  "type": "uint8"
                }
              ],
              "internalType": "struct TonAddress",
              "name": "dest",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "ihrFee",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fwdFee",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "createdLt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "importFee",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawCommonMessageInfo",
          "name": "msgInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "parseCurrencyCollection",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "coins",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "messagesIdx",
          "type": "uint256"
        }
      ],
      "name": "parseMessage",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "Type",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "ihrDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "bounce",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "bounced",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "wc",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct TonAddress",
                  "name": "src",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "wc",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct TonAddress",
                  "name": "dest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "ihrFee",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "fwdFee",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "createdLt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "importFee",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct RawCommonMessageInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "bodyIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct Message",
          "name": "message",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "messagesIdx",
          "type": "uint256"
        }
      ],
      "name": "parseMessagesHeader",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasInMessage",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "hasOutMessages",
              "type": "bool"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "Type",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "ihrDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "bounce",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "bounced",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "hash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "wc",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct TonAddress",
                      "name": "src",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "hash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "wc",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct TonAddress",
                      "name": "dest",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "ihrFee",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "fwdFee",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdLt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "importFee",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct RawCommonMessageInfo",
                  "name": "info",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "bodyIdx",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Message",
              "name": "inMessage",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "Type",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "ihrDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "bounce",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "bounced",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "hash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "wc",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct TonAddress",
                      "name": "src",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "hash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "wc",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct TonAddress",
                      "name": "dest",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "ihrFee",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "fwdFee",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdLt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "importFee",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct RawCommonMessageInfo",
                  "name": "info",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "bodyIdx",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Message[5]",
              "name": "outMessages",
              "type": "tuple[5]"
            }
          ],
          "internalType": "struct MessagesHeader",
          "name": "messagesHeader",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "parseStateInit",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        }
      ],
      "name": "parseTransactionHeader",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "checkCode",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "addressHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "prevTransHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "prevTransLt",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "time",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "OutMesagesCount",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "oldStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "newStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "fees",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "hasInMessage",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasOutMessages",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message",
                  "name": "inMessage",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message[5]",
                  "name": "outMessages",
                  "type": "tuple[5]"
                }
              ],
              "internalType": "struct MessagesHeader",
              "name": "messages",
              "type": "tuple"
            }
          ],
          "internalType": "struct TransactionHeader",
          "name": "transaction",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "messagesIdx",
          "type": "uint256"
        }
      ],
      "name": "readAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "wc",
              "type": "uint8"
            }
          ],
          "internalType": "struct TonAddress",
          "name": "addr",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCoins",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506122b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806378c64141116100e3578063ad7117b31161008c578063ca0e911911610066578063ca0e911914610400578063dc77b42314610420578063e94e88b51461044057600080fd5b8063ad7117b3146103c7578063b88d34ee146103da578063bf49c150146103ed57600080fd5b80639c544ceb116100bd5780639c544ceb14610350578063a6d8ea981461037c578063a77230cf1461039f57600080fd5b806378c6414114610317578063883acc421461032a5780639aa3c6951461033d57600080fd5b8063420a02f31161014557806359ac4cc61161011f57806359ac4cc6146102de5780636484a23a146102f15780637893a08a1461030457600080fd5b8063420a02f3146102865780634dca6f06146102a6578063505a7b9b146102b957600080fd5b80631e7b8da3116101765780631e7b8da3146101fc5780631f6520e61461021c57806329556d6b1461024257600080fd5b80630660d87d1461019d57806319aac94a146101c65780631a1ae01c146101e7575b600080fd5b6101b06101ab366004611968565b610460565b6040516101bd9190611b0b565b60405180910390f35b6101d96101d4366004611b1a565b610565565b6040519081526020016101bd565b6101fa6101f5366004611b84565b6105ac565b005b61020f61020a366004611968565b610810565b6040516101bd9190611c4c565b61022f61022a366004611d1d565b610904565b60405161ffff90911681526020016101bd565b610255610250366004611dc7565b6109a2565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016101bd565b610299610294366004611b1a565b610a5d565b6040516101bd9190611f57565b6101d96102b4366004611f8d565b610aad565b6102cc6102c7366004611968565b610b32565b60405160ff90911681526020016101bd565b6102556102ec366004611968565b610c08565b6101fa6102ff366004611968565b610c57565b6101d9610312366004611fba565b610c9f565b6101d9610325366004611968565b610d36565b6101d9610338366004611968565b610d5c565b6102cc61034b366004611d1d565b610d94565b61036361035e366004611fba565b610e29565b60405167ffffffffffffffff90911681526020016101bd565b61038f61038a366004611968565b610eca565b60405190151581526020016101bd565b6103b26103ad366004611d1d565b610ee8565b60405163ffffffff90911681526020016101bd565b6101d96103d5366004612021565b610f83565b6101d96103e8366004611b1a565b610ff8565b6101d96103fb366004611968565b61104d565b61041361040e366004611968565b6110b5565b6040516101bd919061203a565b61043361042e366004611968565b61125c565b6040516101bd9190612054565b61045361044e366004611968565b6112d8565b6040516101bd9190612063565b6104686114b2565b61047485858585610eca565b1515815261048485858585610eca565b151560208201528051156104a8576104a285858561042e8787610aad565b60408201525b80602001511561055d5760006104cb8686866104c48888610aad565b600f610a5d565b90506000805b6005811015610559578281602081106104ec576104ec612072565b602002015160ff146105475761051e88888861042e8a88876020811061051457610514612072565b6020020151610aad565b8460600151836005811061053457610534612072565b602002015281610543816120d0565b9250505b80610551816120d0565b9150506104d1565b5050505b949350505050565b6000805b82156105a05761057b87878787610b32565b61058c9060ff16600183901b6120ea565b90508261059881612102565b935050610569565b90505b95945050505050565b6000856105bb89898888610eca565b61060f576105cb89898888610d36565b915060005b82811015610609576105e48a8a8989610b32565b6105f59060ff16600184901b6120ea565b915080610601816120d0565b9150506105d0565b506106de565b61061b89898888610eca565b61067f576106378989888861062f89610f83565b60ff16610e29565b67ffffffffffffffff16915060005b828110156106095761065a8a8a8989610b32565b61066b9060ff16600184901b6120ea565b915080610677816120d0565b915050610646565b600061068d8a8a8989610b32565b60ff1690506106a28a8a898961062f8a610f83565b67ffffffffffffffff16925060005b838110156106db576106c782600185901b6120ea565b9250806106d3816120d0565b9150506106b1565b50505b6106e88285612119565b60000361074e5760005b60208110156107485783816020811061070d5761070d612072565b602002015160ff03610736578584826020811061072c5761072c612072565b6020020152610748565b80610740816120d0565b9150506106f2565b50610805565b600061075a8787610aad565b905060006107688888610aad565b90508160ff14158015610790575087826064811061078857610788612072565b602002015151155b156107bf576107bf8b8b600186901b8b8660018a8d6107af9190612119565b6107b99190612119565b8b6105ac565b8060ff141580156107e557508781606481106107dd576107dd612072565b602002015151155b15610802576108028b8b600286901b8b8560016107af8b8e612119565b50505b505050505050505050565b6108186114e3565b610826858585856004610d94565b60ff168152610839858585856020610ff8565b602082015261084c858585856040610e29565b67ffffffffffffffff166040820152610869858585856020610ff8565b606082015261087c858585856040610e29565b67ffffffffffffffff166080820152610899858585856020610ee8565b63ffffffff1660a08201526108b285858585600f610ee8565b63ffffffff1660c08201526108cb858585856002610d94565b60ff1660e08201526108e1858585856002610d94565b60ff166101008201526108f68585858561104d565b610120820152949350505050565b600060108260ff16111561095f5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff8216156105a35761097886868686610b32565b61098e9060ff166201fffe600184901b16612130565b90508161099a81612156565b925050610963565b604080518082019091526000808252602082015260005b6005811015610a545760018382600581106109d6576109d6612072565b60200201515160a001515103610a425760008382600581106109fa576109fa612072565b6020020151602001519050610a1487878784610100610c9f565b73ffffffffffffffffffffffffffffffffffffffff168352610a3b87878784610100610c9f565b6020840152505b80610a4c816120d0565b9150506109b9565b50949350505050565b610a65611541565b60005b6020811015610a9c5760ff828260208110610a8557610a85612072565b602002015280610a94816120d0565b915050610a68565b506105a386866000878787876105ac565b6000828260648110610ac157610ac1612072565b602002015160200151838360648110610adc57610adc612072565b60200201516060015160ff1660048110610af857610af8612072565b60200201519050828260648110610b1157610b11612072565b6020020151606001805190610b2582612173565b60ff169052505b92915050565b6000806008848460648110610b4957610b49612072565b602002015160400151610b5c91906121c1565b905060006008858560648110610b7457610b74612072565b602002015160400151610b8791906121d5565b9050600781888885818110610b9e57610b9e612072565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c935060019050858560648110610be657610be6612072565b6020020151604001818151610bfb91906120ea565b9052505050949350505050565b6040805180820190915260008082526020820152610c2885858585610810565b506000610c3b8686866101ab8888610aad565b9050610c4d86868684606001516109a2565b9695505050505050565b610c6384848484610eca565b15610c7857610c76848484846005610c9f565b505b610c8484848484610eca565b15610c9957610c97848484846002610c9f565b505b50505050565b60006101008261ffff161115610cf75760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610956565b5060005b61ffff8216156105a357610d1186868686610b32565b610d229060ff16600183901b6120ea565b905081610d2e816121e9565b925050610cfb565b60005b610d4585858585610eca565b1561055d5780610d54816120d0565b915050610d39565b600080610d6d868686866004610d94565b90508060ff16600003610d8457506000905061055d565b610c4d868686868560ff16610ff8565b600060088260ff161115610dea5760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610956565b5060005b60ff8216156105a357610e0386868686610b32565b610e15906101fe600184901b166121fd565b905081610e2181612156565b925050610dee565b600060408261ffff161115610e805760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610956565b5060005b61ffff8216156105a357610e9a86868686610b32565b610eb69060ff166801fffffffffffffffe600184901b16612222565b905081610ec2816121e9565b925050610e84565b6000610ed885858585610b32565b60ff166001149050949350505050565b600060208260ff161115610f3e5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610956565b5060005b60ff8216156105a357610f5786868686610b32565b610f6f9060ff166401fffffffe600184901b16612245565b905081610f7b81612156565b925050610f42565b6000805b6001831115610fd157610f9b6001836120ea565b9150826001166001148015610fae575080155b15610fc557610fbe6001836120ea565b9150600190505b600183901c9250610f87565b826001148015610fdf575080155b15610ff257610fef6001836120ea565b91505b50919050565b600080611006836008612264565b905060005b81156110425761101d88888888610b32565b61102e9060ff16600183901b6120ea565b90508161103a81612102565b92505061100b565b979650505050505050565b600061105b85858585610d5c565b9050600061106b86868686610eca565b90508015610a5457600061107f8585610aad565b905084816064811061109357611093612072565b6020020151516110ab57610559878787846020610a5d565b5050949350505050565b604080518082019091526000808252602082015260006110d9868686866002610d94565b90508060ff166000036110ec575061055d565b8060ff16600103611124576000611107878787876009610e29565b905061111a878787878561ffff16610565565b83525061055d9050565b8060ff1660021461119d5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920535444206164647265737320737570706f7274656420545950452060448201527f4552524f520000000000000000000000000000000000000000000000000000006064820152608401610956565b60006111ab87878787610b32565b905060ff8116156112235760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920535444206164647265737320737570706f7274656420424954204560448201527f52524f52000000000000000000000000000000000000000000000000000000006064820152608401610956565b611231878787876008610d94565b836020019060ff16908160ff1681525050611250878787876020610ff8565b83525050949350505050565b611264611560565b611270858585856112d8565b8152600061128086868686610eca565b905080156112a45761129486868686610eca565b6112a4576112a28484610aad565b505b60006112b287878787610eca565b9050806112bf57836112c9565b6112c98585610aad565b60208401525050949350505050565b6113596040805161018081018252600080825260208083018290528284018290526060830182905283518085018552828152808201839052608084015283518085019094528184528301529060a0820190815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b61136585858585610eca565b6114355761137585858585610eca565b1515602082015261138885858585610eca565b1515604082015261139b85858585610eca565b151560608201526113ae858585856110b5565b60808201526113bf858585856110b5565b60a08201526113d08585858561104d565b60c08201526113e185858585610d5c565b60e08201526113f285858585610d5c565b610100820152611406858585856040610e29565b67ffffffffffffffff16610120820152611424858585856020610ee8565b63ffffffff1661014082015261055d565b61144185858585610eca565b1561147657611452858585856110b5565b6080820152611463858585856110b5565b60a0820152611406858585856040610e29565b611482858585856110b5565b6080820152611493858585856110b5565b60a08201526114a485858585610d5c565b610160820152949350505050565b60408051608081018252600080825260208201529081016114d1611560565b81526020016114de6115f9565b905290565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261014081016114de6114b2565b6040518061040001604052806020906020820280368337509192915050565b60405180604001604052806115ec6040805161018081018252600080825260208083018290528284018290526060830182905283518085018552828152808201839052608084015283518085019094528184528301529060a0820190815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b8152602001600081525090565b6040518060a001604052806005905b611610611560565b8152602001906001900390816116085790505090565b60008083601f84011261163857600080fd5b50813567ffffffffffffffff81111561165057600080fd5b60208301915083602082850101111561166857600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156116c2576116c261166f565b60405290565b6040805190810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610180810167ffffffffffffffff811182821017156116c2576116c261166f565b6040516080810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610c80810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610400810167ffffffffffffffff811182821017156116c2576116c261166f565b60405160a0810167ffffffffffffffff811182821017156116c2576116c261166f565b803580151581146117ad57600080fd5b919050565b600082601f8301126117c357600080fd5b6117cb61170f565b8060808401858111156117dd57600080fd5b845b818110156117f75780358452602093840193016117df565b509095945050505050565b803560ff811681146117ad57600080fd5b803563ffffffff811681146117ad57600080fd5b803561ffff811681146117ad57600080fd5b600082601f83011261184a57600080fd5b61185261170f565b80608084018581111561186457600080fd5b845b818110156117f75761187781611827565b845260209384019301611866565b600082601f83011261189657600080fd5b61189e611732565b8061d4808401858111156118b157600080fd5b845b818110156117f75761022081880312156118cd5760008081fd5b6118d561169e565b6118de8261179d565b815260206118ee898285016117b2565b8183015260a080840135604084015260c061190a818601611802565b606085015260e061191d8c8288016117b2565b608086015261192f6101608701611813565b838601526119418c6101808801611839565b828601526119526102008701611802565b90850152505090855290930192610220016118b3565b60008060008061d4c0858703121561197f57600080fd5b843567ffffffffffffffff81111561199657600080fd5b6119a287828801611626565b90955093506119b690508660208701611885565b9396929550929361d4a00135925050565b8051825260208101516119de602084018215159052565b5060408101516119f2604084018215159052565b506060810151611a06606084018215159052565b506080810151611a2660808401828051825260209081015160ff16910152565b5060a0810151805160c0840152602081015160ff1660e08401525060c08101516101008381019190915260e082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018084015201516101a090910152565b611a9b8282516119c7565b602001516101c09190910152565b8051151582526020808201511515818401526040820151611acd6040850182611a90565b506060820151610220840160005b6005811015611b0357611aef828451611a90565b918301916101e09190910190600101611adb565b505050505050565b610b808101610b2c8284611aa9565b600080600080600061d4e08688031215611b3357600080fd5b853567ffffffffffffffff811115611b4a57600080fd5b611b5688828901611626565b9096509450611b6a90508760208801611885565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b031215611ba157600080fd5b883567ffffffffffffffff811115611bb857600080fd5b611bc48b828c01611626565b9099509750506020898101359650611bdf8b60408c01611885565b955061d4c08a0135945061d4e08a013593508a61d51f8b0112611c0157600080fd5b611c09611756565b918a0191808c841115611c1b57600080fd5b61d5008c015b84811015611c385780358352918301918301611c21565b508094505050505092959891949750929550565b815160ff168152610cc08101602083015160208301526040830151611c7d604084018267ffffffffffffffff169052565b50606083015160608301526080830151611ca3608084018267ffffffffffffffff169052565b5060a0830151611cbb60a084018263ffffffff169052565b5060c0830151611cd360c084018263ffffffff169052565b5060e0830151611ce860e084018260ff169052565b506101008381015160ff1690830152610120808401519083015261014080840151611d1582850182611aa9565b505092915050565b600080600080600061d4e08688031215611d3657600080fd5b853567ffffffffffffffff811115611d4d57600080fd5b611d5988828901611626565b9096509450611d6d90508760208801611885565b925061d4a08601359150611d8461d4c08701611802565b90509295509295909350565b600060408284031215611da257600080fd5b611daa6116c8565b905081358152611dbc60208301611802565b602082015292915050565b60008060008061de00808688031215611ddf57600080fd5b853567ffffffffffffffff811115611df657600080fd5b611e0288828901611626565b909650945060209050611e1788888301611885565b93508761d4bf880112611e2957600080fd5b611e3161177a565b918701918089841115611e4357600080fd5b61d4a089015b84811015611f4857808b036101e0811215611e645760008081fd5b611e6c6116c8565b6101c080831215611e7d5760008081fd5b611e856116eb565b925083358352611e9687850161179d565b878401526040611ea781860161179d565b908401526060611eb885820161179d565b908401526080611eca8f868301611d90565b9084015260c0611edc8f868301611d90565b60a085015261010085810135918501919091526101208086013560e086015261014080870135928601929092526101608087013591860191909152610180860135918501919091526101a08501359084015291815290820135858201528352918301916101e001611e49565b50969995985093965050505050565b6104008101818360005b6020808210611f705750611f84565b825184529283019290910190600101611f61565b50505092915050565b60008061d4a08385031215611fa157600080fd5b611fab8484611885565b9461d480939093013593505050565b600080600080600061d4e08688031215611fd357600080fd5b853567ffffffffffffffff811115611fea57600080fd5b611ff688828901611626565b909650945061200a90508760208801611885565b925061d4a08601359150611d8461d4c08701611827565b60006020828403121561203357600080fd5b5035919050565b8151815260208083015160ff169082015260408101610b2c565b6101e08101610b2c8284611a90565b6101c08101610b2c82846119c7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060001982036120e3576120e36120a1565b5060010190565b600082198211156120fd576120fd6120a1565b500190565b600081612111576121116120a1565b506000190190565b60008282101561212b5761212b6120a1565b500390565b600061ffff80831681851680830382111561214d5761214d6120a1565b01949350505050565b600060ff821680612169576121696120a1565b6000190192915050565b600060ff821660ff8103612189576121896120a1565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826121d0576121d0612192565b500490565b6000826121e4576121e4612192565b500690565b600061ffff821680612169576121696120a1565b600060ff821660ff84168060ff0382111561221a5761221a6120a1565b019392505050565b600067ffffffffffffffff80831681851680830382111561214d5761214d6120a1565b600063ffffffff80831681851680830382111561214d5761214d6120a1565b600081600019048311821515161561227e5761227e6120a1565b50029056fea2646970667358221220e33255fa9ecd9300cd6c362743bee2264319577f25d673efeb7d1e141ee227da64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c806378c64141116100e3578063ad7117b31161008c578063ca0e911911610066578063ca0e911914610400578063dc77b42314610420578063e94e88b51461044057600080fd5b8063ad7117b3146103c7578063b88d34ee146103da578063bf49c150146103ed57600080fd5b80639c544ceb116100bd5780639c544ceb14610350578063a6d8ea981461037c578063a77230cf1461039f57600080fd5b806378c6414114610317578063883acc421461032a5780639aa3c6951461033d57600080fd5b8063420a02f31161014557806359ac4cc61161011f57806359ac4cc6146102de5780636484a23a146102f15780637893a08a1461030457600080fd5b8063420a02f3146102865780634dca6f06146102a6578063505a7b9b146102b957600080fd5b80631e7b8da3116101765780631e7b8da3146101fc5780631f6520e61461021c57806329556d6b1461024257600080fd5b80630660d87d1461019d57806319aac94a146101c65780631a1ae01c146101e7575b600080fd5b6101b06101ab366004611968565b610460565b6040516101bd9190611b0b565b60405180910390f35b6101d96101d4366004611b1a565b610565565b6040519081526020016101bd565b6101fa6101f5366004611b84565b6105ac565b005b61020f61020a366004611968565b610810565b6040516101bd9190611c4c565b61022f61022a366004611d1d565b610904565b60405161ffff90911681526020016101bd565b610255610250366004611dc7565b6109a2565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016101bd565b610299610294366004611b1a565b610a5d565b6040516101bd9190611f57565b6101d96102b4366004611f8d565b610aad565b6102cc6102c7366004611968565b610b32565b60405160ff90911681526020016101bd565b6102556102ec366004611968565b610c08565b6101fa6102ff366004611968565b610c57565b6101d9610312366004611fba565b610c9f565b6101d9610325366004611968565b610d36565b6101d9610338366004611968565b610d5c565b6102cc61034b366004611d1d565b610d94565b61036361035e366004611fba565b610e29565b60405167ffffffffffffffff90911681526020016101bd565b61038f61038a366004611968565b610eca565b60405190151581526020016101bd565b6103b26103ad366004611d1d565b610ee8565b60405163ffffffff90911681526020016101bd565b6101d96103d5366004612021565b610f83565b6101d96103e8366004611b1a565b610ff8565b6101d96103fb366004611968565b61104d565b61041361040e366004611968565b6110b5565b6040516101bd919061203a565b61043361042e366004611968565b61125c565b6040516101bd9190612054565b61045361044e366004611968565b6112d8565b6040516101bd9190612063565b6104686114b2565b61047485858585610eca565b1515815261048485858585610eca565b151560208201528051156104a8576104a285858561042e8787610aad565b60408201525b80602001511561055d5760006104cb8686866104c48888610aad565b600f610a5d565b90506000805b6005811015610559578281602081106104ec576104ec612072565b602002015160ff146105475761051e88888861042e8a88876020811061051457610514612072565b6020020151610aad565b8460600151836005811061053457610534612072565b602002015281610543816120d0565b9250505b80610551816120d0565b9150506104d1565b5050505b949350505050565b6000805b82156105a05761057b87878787610b32565b61058c9060ff16600183901b6120ea565b90508261059881612102565b935050610569565b90505b95945050505050565b6000856105bb89898888610eca565b61060f576105cb89898888610d36565b915060005b82811015610609576105e48a8a8989610b32565b6105f59060ff16600184901b6120ea565b915080610601816120d0565b9150506105d0565b506106de565b61061b89898888610eca565b61067f576106378989888861062f89610f83565b60ff16610e29565b67ffffffffffffffff16915060005b828110156106095761065a8a8a8989610b32565b61066b9060ff16600184901b6120ea565b915080610677816120d0565b915050610646565b600061068d8a8a8989610b32565b60ff1690506106a28a8a898961062f8a610f83565b67ffffffffffffffff16925060005b838110156106db576106c782600185901b6120ea565b9250806106d3816120d0565b9150506106b1565b50505b6106e88285612119565b60000361074e5760005b60208110156107485783816020811061070d5761070d612072565b602002015160ff03610736578584826020811061072c5761072c612072565b6020020152610748565b80610740816120d0565b9150506106f2565b50610805565b600061075a8787610aad565b905060006107688888610aad565b90508160ff14158015610790575087826064811061078857610788612072565b602002015151155b156107bf576107bf8b8b600186901b8b8660018a8d6107af9190612119565b6107b99190612119565b8b6105ac565b8060ff141580156107e557508781606481106107dd576107dd612072565b602002015151155b15610802576108028b8b600286901b8b8560016107af8b8e612119565b50505b505050505050505050565b6108186114e3565b610826858585856004610d94565b60ff168152610839858585856020610ff8565b602082015261084c858585856040610e29565b67ffffffffffffffff166040820152610869858585856020610ff8565b606082015261087c858585856040610e29565b67ffffffffffffffff166080820152610899858585856020610ee8565b63ffffffff1660a08201526108b285858585600f610ee8565b63ffffffff1660c08201526108cb858585856002610d94565b60ff1660e08201526108e1858585856002610d94565b60ff166101008201526108f68585858561104d565b610120820152949350505050565b600060108260ff16111561095f5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff8216156105a35761097886868686610b32565b61098e9060ff166201fffe600184901b16612130565b90508161099a81612156565b925050610963565b604080518082019091526000808252602082015260005b6005811015610a545760018382600581106109d6576109d6612072565b60200201515160a001515103610a425760008382600581106109fa576109fa612072565b6020020151602001519050610a1487878784610100610c9f565b73ffffffffffffffffffffffffffffffffffffffff168352610a3b87878784610100610c9f565b6020840152505b80610a4c816120d0565b9150506109b9565b50949350505050565b610a65611541565b60005b6020811015610a9c5760ff828260208110610a8557610a85612072565b602002015280610a94816120d0565b915050610a68565b506105a386866000878787876105ac565b6000828260648110610ac157610ac1612072565b602002015160200151838360648110610adc57610adc612072565b60200201516060015160ff1660048110610af857610af8612072565b60200201519050828260648110610b1157610b11612072565b6020020151606001805190610b2582612173565b60ff169052505b92915050565b6000806008848460648110610b4957610b49612072565b602002015160400151610b5c91906121c1565b905060006008858560648110610b7457610b74612072565b602002015160400151610b8791906121d5565b9050600781888885818110610b9e57610b9e612072565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c935060019050858560648110610be657610be6612072565b6020020151604001818151610bfb91906120ea565b9052505050949350505050565b6040805180820190915260008082526020820152610c2885858585610810565b506000610c3b8686866101ab8888610aad565b9050610c4d86868684606001516109a2565b9695505050505050565b610c6384848484610eca565b15610c7857610c76848484846005610c9f565b505b610c8484848484610eca565b15610c9957610c97848484846002610c9f565b505b50505050565b60006101008261ffff161115610cf75760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610956565b5060005b61ffff8216156105a357610d1186868686610b32565b610d229060ff16600183901b6120ea565b905081610d2e816121e9565b925050610cfb565b60005b610d4585858585610eca565b1561055d5780610d54816120d0565b915050610d39565b600080610d6d868686866004610d94565b90508060ff16600003610d8457506000905061055d565b610c4d868686868560ff16610ff8565b600060088260ff161115610dea5760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610956565b5060005b60ff8216156105a357610e0386868686610b32565b610e15906101fe600184901b166121fd565b905081610e2181612156565b925050610dee565b600060408261ffff161115610e805760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610956565b5060005b61ffff8216156105a357610e9a86868686610b32565b610eb69060ff166801fffffffffffffffe600184901b16612222565b905081610ec2816121e9565b925050610e84565b6000610ed885858585610b32565b60ff166001149050949350505050565b600060208260ff161115610f3e5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610956565b5060005b60ff8216156105a357610f5786868686610b32565b610f6f9060ff166401fffffffe600184901b16612245565b905081610f7b81612156565b925050610f42565b6000805b6001831115610fd157610f9b6001836120ea565b9150826001166001148015610fae575080155b15610fc557610fbe6001836120ea565b9150600190505b600183901c9250610f87565b826001148015610fdf575080155b15610ff257610fef6001836120ea565b91505b50919050565b600080611006836008612264565b905060005b81156110425761101d88888888610b32565b61102e9060ff16600183901b6120ea565b90508161103a81612102565b92505061100b565b979650505050505050565b600061105b85858585610d5c565b9050600061106b86868686610eca565b90508015610a5457600061107f8585610aad565b905084816064811061109357611093612072565b6020020151516110ab57610559878787846020610a5d565b5050949350505050565b604080518082019091526000808252602082015260006110d9868686866002610d94565b90508060ff166000036110ec575061055d565b8060ff16600103611124576000611107878787876009610e29565b905061111a878787878561ffff16610565565b83525061055d9050565b8060ff1660021461119d5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920535444206164647265737320737570706f7274656420545950452060448201527f4552524f520000000000000000000000000000000000000000000000000000006064820152608401610956565b60006111ab87878787610b32565b905060ff8116156112235760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920535444206164647265737320737570706f7274656420424954204560448201527f52524f52000000000000000000000000000000000000000000000000000000006064820152608401610956565b611231878787876008610d94565b836020019060ff16908160ff1681525050611250878787876020610ff8565b83525050949350505050565b611264611560565b611270858585856112d8565b8152600061128086868686610eca565b905080156112a45761129486868686610eca565b6112a4576112a28484610aad565b505b60006112b287878787610eca565b9050806112bf57836112c9565b6112c98585610aad565b60208401525050949350505050565b6113596040805161018081018252600080825260208083018290528284018290526060830182905283518085018552828152808201839052608084015283518085019094528184528301529060a0820190815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b61136585858585610eca565b6114355761137585858585610eca565b1515602082015261138885858585610eca565b1515604082015261139b85858585610eca565b151560608201526113ae858585856110b5565b60808201526113bf858585856110b5565b60a08201526113d08585858561104d565b60c08201526113e185858585610d5c565b60e08201526113f285858585610d5c565b610100820152611406858585856040610e29565b67ffffffffffffffff16610120820152611424858585856020610ee8565b63ffffffff1661014082015261055d565b61144185858585610eca565b1561147657611452858585856110b5565b6080820152611463858585856110b5565b60a0820152611406858585856040610e29565b611482858585856110b5565b6080820152611493858585856110b5565b60a08201526114a485858585610d5c565b610160820152949350505050565b60408051608081018252600080825260208201529081016114d1611560565b81526020016114de6115f9565b905290565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261014081016114de6114b2565b6040518061040001604052806020906020820280368337509192915050565b60405180604001604052806115ec6040805161018081018252600080825260208083018290528284018290526060830182905283518085018552828152808201839052608084015283518085019094528184528301529060a0820190815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b8152602001600081525090565b6040518060a001604052806005905b611610611560565b8152602001906001900390816116085790505090565b60008083601f84011261163857600080fd5b50813567ffffffffffffffff81111561165057600080fd5b60208301915083602082850101111561166857600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156116c2576116c261166f565b60405290565b6040805190810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610180810167ffffffffffffffff811182821017156116c2576116c261166f565b6040516080810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610c80810167ffffffffffffffff811182821017156116c2576116c261166f565b604051610400810167ffffffffffffffff811182821017156116c2576116c261166f565b60405160a0810167ffffffffffffffff811182821017156116c2576116c261166f565b803580151581146117ad57600080fd5b919050565b600082601f8301126117c357600080fd5b6117cb61170f565b8060808401858111156117dd57600080fd5b845b818110156117f75780358452602093840193016117df565b509095945050505050565b803560ff811681146117ad57600080fd5b803563ffffffff811681146117ad57600080fd5b803561ffff811681146117ad57600080fd5b600082601f83011261184a57600080fd5b61185261170f565b80608084018581111561186457600080fd5b845b818110156117f75761187781611827565b845260209384019301611866565b600082601f83011261189657600080fd5b61189e611732565b8061d4808401858111156118b157600080fd5b845b818110156117f75761022081880312156118cd5760008081fd5b6118d561169e565b6118de8261179d565b815260206118ee898285016117b2565b8183015260a080840135604084015260c061190a818601611802565b606085015260e061191d8c8288016117b2565b608086015261192f6101608701611813565b838601526119418c6101808801611839565b828601526119526102008701611802565b90850152505090855290930192610220016118b3565b60008060008061d4c0858703121561197f57600080fd5b843567ffffffffffffffff81111561199657600080fd5b6119a287828801611626565b90955093506119b690508660208701611885565b9396929550929361d4a00135925050565b8051825260208101516119de602084018215159052565b5060408101516119f2604084018215159052565b506060810151611a06606084018215159052565b506080810151611a2660808401828051825260209081015160ff16910152565b5060a0810151805160c0840152602081015160ff1660e08401525060c08101516101008381019190915260e082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018084015201516101a090910152565b611a9b8282516119c7565b602001516101c09190910152565b8051151582526020808201511515818401526040820151611acd6040850182611a90565b506060820151610220840160005b6005811015611b0357611aef828451611a90565b918301916101e09190910190600101611adb565b505050505050565b610b808101610b2c8284611aa9565b600080600080600061d4e08688031215611b3357600080fd5b853567ffffffffffffffff811115611b4a57600080fd5b611b5688828901611626565b9096509450611b6a90508760208801611885565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b031215611ba157600080fd5b883567ffffffffffffffff811115611bb857600080fd5b611bc48b828c01611626565b9099509750506020898101359650611bdf8b60408c01611885565b955061d4c08a0135945061d4e08a013593508a61d51f8b0112611c0157600080fd5b611c09611756565b918a0191808c841115611c1b57600080fd5b61d5008c015b84811015611c385780358352918301918301611c21565b508094505050505092959891949750929550565b815160ff168152610cc08101602083015160208301526040830151611c7d604084018267ffffffffffffffff169052565b50606083015160608301526080830151611ca3608084018267ffffffffffffffff169052565b5060a0830151611cbb60a084018263ffffffff169052565b5060c0830151611cd360c084018263ffffffff169052565b5060e0830151611ce860e084018260ff169052565b506101008381015160ff1690830152610120808401519083015261014080840151611d1582850182611aa9565b505092915050565b600080600080600061d4e08688031215611d3657600080fd5b853567ffffffffffffffff811115611d4d57600080fd5b611d5988828901611626565b9096509450611d6d90508760208801611885565b925061d4a08601359150611d8461d4c08701611802565b90509295509295909350565b600060408284031215611da257600080fd5b611daa6116c8565b905081358152611dbc60208301611802565b602082015292915050565b60008060008061de00808688031215611ddf57600080fd5b853567ffffffffffffffff811115611df657600080fd5b611e0288828901611626565b909650945060209050611e1788888301611885565b93508761d4bf880112611e2957600080fd5b611e3161177a565b918701918089841115611e4357600080fd5b61d4a089015b84811015611f4857808b036101e0811215611e645760008081fd5b611e6c6116c8565b6101c080831215611e7d5760008081fd5b611e856116eb565b925083358352611e9687850161179d565b878401526040611ea781860161179d565b908401526060611eb885820161179d565b908401526080611eca8f868301611d90565b9084015260c0611edc8f868301611d90565b60a085015261010085810135918501919091526101208086013560e086015261014080870135928601929092526101608087013591860191909152610180860135918501919091526101a08501359084015291815290820135858201528352918301916101e001611e49565b50969995985093965050505050565b6104008101818360005b6020808210611f705750611f84565b825184529283019290910190600101611f61565b50505092915050565b60008061d4a08385031215611fa157600080fd5b611fab8484611885565b9461d480939093013593505050565b600080600080600061d4e08688031215611fd357600080fd5b853567ffffffffffffffff811115611fea57600080fd5b611ff688828901611626565b909650945061200a90508760208801611885565b925061d4a08601359150611d8461d4c08701611827565b60006020828403121561203357600080fd5b5035919050565b8151815260208083015160ff169082015260408101610b2c565b6101e08101610b2c8284611a90565b6101c08101610b2c82846119c7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060001982036120e3576120e36120a1565b5060010190565b600082198211156120fd576120fd6120a1565b500190565b600081612111576121116120a1565b506000190190565b60008282101561212b5761212b6120a1565b500390565b600061ffff80831681851680830382111561214d5761214d6120a1565b01949350505050565b600060ff821680612169576121696120a1565b6000190192915050565b600060ff821660ff8103612189576121896120a1565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826121d0576121d0612192565b500490565b6000826121e4576121e4612192565b500690565b600061ffff821680612169576121696120a1565b600060ff821660ff84168060ff0382111561221a5761221a6120a1565b019392505050565b600067ffffffffffffffff80831681851680830382111561214d5761214d6120a1565b600063ffffffff80831681851680830382111561214d5761214d6120a1565b600081600019048311821515161561227e5761227e6120a1565b50029056fea2646970667358221220e33255fa9ecd9300cd6c362743bee2264319577f25d673efeb7d1e141ee227da64736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
