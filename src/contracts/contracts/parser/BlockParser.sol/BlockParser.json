{
  "_format": "hh-sol-artifact-1",
  "contractName": "BlockParser",
  "sourceName": "contracts/parser/BlockParser.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proofBoc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "checkCode",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "addressHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "prevTransHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "prevTransLt",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "time",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "OutMesagesCount",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "oldStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "newStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "fees",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "hasInMessage",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasOutMessages",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message",
                  "name": "inMessage",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message[5]",
                  "name": "outMessages",
                  "type": "tuple[5]"
                }
              ],
              "internalType": "struct MessagesHeader",
              "name": "messages",
              "type": "tuple"
            }
          ],
          "internalType": "struct TransactionHeader",
          "name": "transaction",
          "type": "tuple"
        }
      ],
      "name": "check_block_info",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "name": "computeNodeId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "treeOfCells",
          "type": "tuple[100]"
        }
      ],
      "name": "parseCandidatesRootBlock",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "cType",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "weight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "adnl_addr",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pubkey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "node_id",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ValidatorDescription[32]",
          "name": "",
          "type": "tuple[32]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "parseCurrencyCollection",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "coins",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "prefixLength",
          "type": "uint256"
        }
      ],
      "name": "parsePartValidators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "cType",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "weight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "adnl_addr",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pubkey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "node_id",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ValidatorDescription[32]",
          "name": "validators",
          "type": "tuple[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proofBoc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "proofBocInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "proofTreeOfCells",
          "type": "tuple[100]"
        },
        {
          "internalType": "bytes32",
          "name": "txRootHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "checkCode",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "addressHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "prevTransHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "prevTransLt",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "time",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "OutMesagesCount",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "oldStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "newStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "fees",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "hasInMessage",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasOutMessages",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message",
                  "name": "inMessage",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message[5]",
                  "name": "outMessages",
                  "type": "tuple[5]"
                }
              ],
              "internalType": "struct MessagesHeader",
              "name": "messages",
              "type": "tuple"
            }
          ],
          "internalType": "struct TransactionHeader",
          "name": "transaction",
          "type": "tuple"
        }
      ],
      "name": "parse_block",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proofBoc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "txRootHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "checkCode",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "addressHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "prevTransHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "prevTransLt",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "time",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "OutMesagesCount",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "oldStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "newStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "fees",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "hasInMessage",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasOutMessages",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message",
                  "name": "inMessage",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "Type",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "ihrDisabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounce",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "bounced",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "src",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bytes32",
                              "name": "hash",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint8",
                              "name": "wc",
                              "type": "uint8"
                            }
                          ],
                          "internalType": "struct TonAddress",
                          "name": "dest",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "ihrFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "fwdFee",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdLt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "createdAt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "importFee",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct RawCommonMessageInfo",
                      "name": "info",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bodyIdx",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Message[5]",
                  "name": "outMessages",
                  "type": "tuple[5]"
                }
              ],
              "internalType": "struct MessagesHeader",
              "name": "messages",
              "type": "tuple"
            }
          ],
          "internalType": "struct TransactionHeader",
          "name": "transaction",
          "type": "tuple"
        }
      ],
      "name": "parse_block_extra",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCoins",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proofBoc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "readUintLeq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50613024806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80639aa3c695116100e3578063b88d34ee1161008c578063bf49c15011610066578063bf49c150146103be578063ed78d521146103d1578063f2e15bad146103e457600080fd5b8063b88d34ee14610378578063bc8568911461038b578063bddb49a51461039e57600080fd5b8063a77230cf116100bd578063a77230cf1461032a578063ad7117b314610352578063b2bc83c91461036557600080fd5b80639aa3c695146102d85780639c544ceb146102eb578063a6d8ea981461031757600080fd5b80634dca6f06116101455780637893a08a1161011f5780637893a08a1461029f57806378c64141146102b2578063883acc42146102c557600080fd5b80634dca6f0614610254578063505a7b9b1461026757806358ac1aff1461028c57600080fd5b80631f6520e6116101765780631f6520e6146101eb578063420a02f314610211578063491d90b11461023157600080fd5b806319aac94a1461019d5780631a1ae01c146101c35780631acbaa62146101d8575b600080fd5b6101b06101ab36600461237e565b6103f7565b6040519081526020015b60405180910390f35b6101d66101d13660046123e8565b61043e565b005b6101b06101e63660046124b0565b6106a2565b6101fe6101f93660046124c9565b610759565b60405161ffff90911681526020016101ba565b61022461021f36600461237e565b6107f7565b6040516101ba919061253c565b61024461023f366004612853565b610847565b60405190151581526020016101ba565b6101b06102623660046129dd565b6108e6565b61027a610275366004612a0a565b61096a565b60405160ff90911681526020016101ba565b61024461029a366004612a69565b610a41565b6101b06102ad366004612ad1565b610c1c565b6101b06102c0366004612a0a565b610cb3565b6101b06102d3366004612a0a565b610cd9565b61027a6102e63660046124c9565b610d11565b6102fe6102f9366004612ad1565b610da6565b60405167ffffffffffffffff90911681526020016101ba565b610244610325366004612a0a565b610e47565b61033d6103383660046124c9565b610e65565b60405163ffffffff90911681526020016101ba565b6101b06103603660046124b0565b610f00565b610244610373366004612b38565b610f75565b6101b061038636600461237e565b6111f4565b6101b0610399366004612ba9565b611249565b6103b16103ac366004612bf5565b6112a4565b6040516101ba9190612c54565b6101b06103cc366004612a0a565b611653565b6103b16103df366004612cb8565b6116bd565b6101b06103f236600461237e565b611756565b6000805b82156104325761040d8787878761096a565b61041e9060ff16600183901b612d4f565b90508261042a81612d67565b9350506103fb565b90505b95945050505050565b60008561044d89898888610e47565b6104a15761045d89898888610cb3565b915060005b8281101561049b576104768a8a898961096a565b6104879060ff16600184901b612d4f565b91508061049381612d7e565b915050610462565b50610570565b6104ad89898888610e47565b610511576104c9898988886104c189610f00565b60ff16610da6565b67ffffffffffffffff16915060005b8281101561049b576104ec8a8a898961096a565b6104fd9060ff16600184901b612d4f565b91508061050981612d7e565b9150506104d8565b600061051f8a8a898961096a565b60ff1690506105348a8a89896104c18a610f00565b67ffffffffffffffff16925060005b8381101561056d5761055982600185901b612d4f565b92508061056581612d7e565b915050610543565b50505b61057a8285612d98565b6000036105e05760005b60208110156105da5783816020811061059f5761059f612daf565b602002015160ff036105c857858482602081106105be576105be612daf565b60200201526105da565b806105d281612d7e565b915050610584565b50610697565b60006105ec87876108e6565b905060006105fa88886108e6565b90508160ff14158015610622575087826064811061061a5761061a612daf565b602002015151155b15610651576106518b8b600186901b8b8660018a8d6106419190612d98565b61064b9190612d98565b8b61043e565b8060ff14158015610677575087816064811061066f5761066f612daf565b602002015151155b15610694576106948b8b600286901b8b8560016106418b8e612d98565b50505b505050505050505050565b6040517fc6b4134800000000000000000000000000000000000000000000000000000000602082015260248101829052600090600290604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261071391612dde565b602060405180830381855afa158015610730573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107539190612e19565b92915050565b600060108260ff1611156107b45760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff821615610435576107cd8686868661096a565b6107e39060ff166201fffe600184901b16612e32565b9050816107ef81612e58565b9250506107b8565b6107ff611f4d565b60005b60208110156108365760ff82826020811061081f5761081f612daf565b60200201528061082e81612d7e565b915050610802565b50610435868660008787878761043e565b6000806001610870898989610140015190809261086693929190612e75565b8960800151611249565b876040015161087f9190612d98565b6108899190612d98565b9050610899888887846020610e65565b506108a485826108e6565b506108af85826108e6565b506108ba85826108e6565b5060006108c786836108e6565b90506108d7898988848989610f75565b925050505b9695505050505050565b60008282606481106108fa576108fa612daf565b60200201516020015183836064811061091557610915612daf565b60200201516060015160ff166004811061093157610931612daf565b6020020151905082826064811061094a5761094a612daf565b602002015160600180519061095e82612e9f565b60ff1690525092915050565b600080600884846064811061098157610981612daf565b6020020151604001516109949190612eed565b9050600060088585606481106109ac576109ac612daf565b6020020151604001516109bf9190612f01565b90506007818888858181106109d6576109d6612daf565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c935060019050858560648110610a1e57610a1e612daf565b6020020151604001818151610a339190612d4f565b90525050505b949350505050565b6000610a51868686866020610e65565b63ffffffff16639bc7a98714610aa95760405162461bcd60e51b815260206004820152600f60248201527f6e6f74206120426c6f636b496e666f000000000000000000000000000000000060448201526064016107ab565b6028848460648110610abd57610abd612daf565b6020020151604001818151610ad29190612d4f565b9052506001610ae5878787876008610d11565b60ff161115610b365760405162461bcd60e51b815260206004820152600e60248201527f646174612e666c616773203e203100000000000000000000000000000000000060448201526064016107ab565b6040848460648110610b4a57610b4a612daf565b6020020151604001818151610b5f9190612d4f565b905250610b70868686866002610d11565b50610b7f86868686603c611756565b50610b8e868686866020610e65565b50610b9d868686866040610da6565b50610bac868686866020610e65565b506000610bbd878787876040610da6565b90506000610bcf888888886040610da6565b90508167ffffffffffffffff16846040015167ffffffffffffffff16101580610c1057508067ffffffffffffffff16846040015167ffffffffffffffff1611155b98975050505050505050565b60006101008261ffff161115610c745760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320363420626974730000000000000000000000000060448201526064016107ab565b5060005b61ffff82161561043557610c8e8686868661096a565b610c9f9060ff16600183901b612d4f565b905081610cab81612f15565b925050610c78565b60005b610cc285858585610e47565b15610a395780610cd181612d7e565b915050610cb6565b600080610cea868686866004610d11565b90508060ff16600003610d01575060009050610a39565b6108dc868686868560ff166111f4565b600060088260ff161115610d675760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a6520697320382062697473000000000000000000000000000060448201526064016107ab565b5060005b60ff82161561043557610d808686868661096a565b610d92906101fe600184901b16612f29565b905081610d9e81612e58565b925050610d6b565b600060408261ffff161115610dfd5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320363420626974730000000000000000000000000060448201526064016107ab565b5060005b61ffff82161561043557610e178686868661096a565b610e339060ff166801fffffffffffffffe600184901b16612f4e565b905081610e3f81612f15565b925050610e01565b6000610e558585858561096a565b60ff166001149050949350505050565b600060208260ff161115610ebb5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320333220626974730000000000000000000000000060448201526064016107ab565b5060005b60ff82161561043557610ed48686868661096a565b610eec9060ff166401fffffffe600184901b16612f71565b905081610ef881612e58565b925050610ebf565b6000805b6001831115610f4e57610f18600183612d4f565b9150826001166001148015610f2b575080155b15610f4257610f3b600183612d4f565b9150600190505b600183901c9250610f04565b826001148015610f5c575080155b15610f6f57610f6c600183612d4f565b91505b50919050565b600080610f86888888886020610e65565b90508063ffffffff16634a33f6fd14610fe15760405162461bcd60e51b815260206004820152601c60248201527f63656c6c206973206e6f7420657874726120626c6f636b20696e666f0000000060448201526064016107ab565b610feb86866108e6565b50610ff686866108e6565b5060006110078761026289896108e6565b9050600061101a8a8a8a856101006107f7565b905060005b60208110156111e35781816020811061103a5761103a612daf565b602002015160ff146111e3576110688b8b8b85856020811061105e5761105e612daf565b6020020151611653565b5061108d8b8b8b85856020811061108157611081612daf565b60200201516004610d11565b60ff166005146110df5760405162461bcd60e51b815260206004820152601460248201527f6973206e6f74206163636f756e7420626c6f636b00000000000000000000000060448201526064016107ab565b60006111058c8c8c8686602081106110f9576110f9612daf565b602002015160206111f4565b90508660200151811461111857506111d1565b600061113e8d8d8d87876020811061113257611132612daf565b602002015160406107f7565b905060005b60208110156111cd5781816020811061115e5761115e612daf565b602002015160ff146111cd57898c61118c8e85856020811061118257611182612daf565b60200201516108e6565b6064811061119c5761119c612daf565b60200201516080015151036111bb5760019750505050505050506108dc565b806111c581612d7e565b915050611143565b5050505b806111db81612d7e565b91505061101f565b5060009a9950505050505050505050565b600080611202836008612f90565b905060005b811561123e576112198888888861096a565b61122a9060ff16600183901b612d4f565b90508161123681612d67565b925050611207565b979650505050505050565b600080805b831561129b5785858281811061126657611266612daf565b61127b92013560f81c9050600884901b612d4f565b91508061128781612d7e565b9150508361129490612d67565b935061124e565b50949350505050565b6112ac611f6c565b6112ba858584866020610e65565b5060008284606481106112cf576112cf612daf565b6020020151602001516003600481106112ea576112ea612daf565b602002015190506000611301878786856020610e65565b90508063ffffffff16634a33f6fd1461135c5760405162461bcd60e51b815260206004820152601060248201527f6e6f74206120426c6f636b45787472610000000000000000000000000000000060448201526064016107ab565b83826064811061136e5761136e612daf565b60200201516020015160036004811061138957611389612daf565b602002015191508160ff036113e05760405162461bcd60e51b815260206004820152600f60248201527f4e6f204d63426c6f636b4578747261000000000000000000000000000000000060448201526064016107ab565b6113ee878786856010610759565b61ffff1661cca5146114425760405162461bcd60e51b815260206004820152601260248201527f6e6f742061204d63426c6f636b4578747261000000000000000000000000000060448201526064016107ab565b600061145088888786610e47565b9050801561160b57600c85846064811061146c5761146c612daf565b60200201516040018181516114819190612d4f565b905250611493888887866101006103f7565b5060008584606481106114a8576114a8612daf565b6020020151602001516003600481106114c3576114c3612daf565b602002015160ff14611506578584606481106114e1576114e1612daf565b6020020151602001516003600481106114fc576114fc612daf565b6020020151611539565b85846064811061151857611518612daf565b60200201516020015160026004811061153357611533612daf565b60200201515b90508060ff0361158b5760405162461bcd60e51b815260206004820152601060248201527f4e6f20436f6e66696720506172616d730000000000000000000000000000000060448201526064016107ab565b600061159b8a8a898560206107f7565b905060005b60208110156115f2578181602081106115bb576115bb612daf565b602002015160ff146115f2578181602081106115d9576115d9612daf565b60200201519250806115ea81612d7e565b9150506115a0565b506115ff8a8a848a611809565b95505050505050610a39565b60405162461bcd60e51b815260206004820152600f60248201527f6973206e6f206b657920626c6f636b000000000000000000000000000000000060448201526064016107ab565b600061166185858585610cd9565b9050600061167186868686610e47565b9050801561129b57600061168585856108e6565b905084816064811061169957611699612daf565b6020020151516116b3576116b18787878460206107f7565b505b5050949350505050565b6116c5611f6c565b60006116d487878688876107f7565b905060005b602081101561174b578181602081106116f4576116f4612daf565b602002015160ff1461174b57611722888884846020811061171757611717612daf565b602002015188611925565b83826020811061173457611734612daf565b60200201528061174381612d7e565b9150506116d9565b505095945050505050565b600080600181805b60208161ffff161015611794578583161561177b57809350600191505b60019290921b918061178c81612faf565b91505061175e565b50806117e25760405162461bcd60e51b815260206004820152600c60248201527f6e6f7420612055696e744c65000000000000000000000000000000000000000060448201526064016107ab565b826117ec81612faf565b9350506117fc8989898987610c1c565b9998505050505050505050565b611811611f6c565b61181f85858486601c610c1c565b5061182e858584866008610d11565b5061183d858584866020610e65565b5061184c858584866020610e65565b5061185b858584866010610759565b5061186a858584866010610759565b50600061187783856108e6565b9050611881611fba565b611889611f4d565b6118a088888761189989886108e6565b6010611a22565b9250905060005b6020811015611919578181602081106118c2576118c2612daf565b602002015160ff14611919576118f089898484602081106118e5576118e5612daf565b602002015189611925565b85826020811061190257611902612daf565b60200201528061191181612d7e565b9150506118a7565b50505050949350505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261195e858584866008610d11565b60ff168152611971858584866020610e65565b63ffffffff16638e81278a146119c95760405162461bcd60e51b815260206004820152600f60248201527f6e6f742061205369675075624b6579000000000000000000000000000000000060448201526064016107ab565b6119d8858584866101006103f7565b60608201526119eb858584866040610da6565b67ffffffffffffffff166020820152805160ff16607303610a3957611a15858584866101006103f7565b6040820152949350505050565b611a2a611f4d565b611a32611fba565b60005b6020811015611a695760ff838260208110611a5257611a52612daf565b602002015280611a6181612d7e565b915050611a35565b50611a7b878760008888888888611a85565b9550959350505050565b600086611a948a8a8989610e47565b611ae857611aa48a8a8989610cb3565b915060005b82811015611ae257611abd8b8b8a8a61096a565b611ace9060ff16600184901b612d4f565b915080611ada81612d7e565b915050611aa9565b50611baf565b611af48a8a8989610e47565b611b5057611b088a8a89896104c18a610f00565b67ffffffffffffffff16915060005b82811015611ae257611b2b8b8b8a8a61096a565b611b3c9060ff16600184901b612d4f565b915080611b4881612d7e565b915050611b17565b6000611b5e8b8b8a8a61096a565b60ff169050611b738b8b8a8a6104c18b610f00565b67ffffffffffffffff16925060005b83811015611bac57611b9882600185901b612d4f565b925080611ba481612d7e565b915050611b82565b50505b611bb98286612d98565b600003611c1f5760005b6020811015611c1957848160208110611bde57611bde612daf565b602002015160ff03611c075786858260208110611bfd57611bfd612daf565b6020020152611c19565b80611c1181612d7e565b915050611bc3565b50611f41565b6000611c2b88886108e6565b90506000611c3989896108e6565b90508160ff14158015611c615750888260648110611c5957611c59612daf565b602002015151155b15611c9657611c918c8c600186901b8c8660018a8e611c809190612d98565b611c8a9190612d98565b8c8c611a85565b611dc6565b888260648110611ca857611ca8612daf565b60200201515115611dc657600060405180604001604052806001878b611cce9190612d98565b611cd89190612d98565b81526020018e8e60088e8860648110611cf357611cf3612daf565b602002015160400151611d069190612eed565b611d11906002612d4f565b9060088f8960648110611d2657611d26612daf565b602002015160400151611d399190612eed565b611d44906020612d4f565b611d4f906002612d4f565b92611d5c93929190612e75565b611d6591612fd0565b9052905060005b600a811015611dc3578681600a8110611d8757611d87612daf565b602002015151600003611db157818782600a8110611da757611da7612daf565b6020020152611dc3565b80611dbb81612d7e565b915050611d6c565b50505b8060ff14158015611dec5750888160648110611de457611de4612daf565b602002015151155b15611e0e57611e098c8c600286901b8c856001611c808b8f612d98565b611f3e565b888160648110611e2057611e20612daf565b60200201515115611f3e57600060405180604001604052806001878b611e469190612d98565b611e509190612d98565b81526020018e8e60088e8760648110611e6b57611e6b612daf565b602002015160400151611e7e9190612eed565b611e89906002612d4f565b9060088f8860648110611e9e57611e9e612daf565b602002015160400151611eb19190612eed565b611ebc906020612d4f565b611ec7906002612d4f565b92611ed493929190612e75565b611edd91612fd0565b9052905060005b600a811015611f3b578681600a8110611eff57611eff612daf565b602002015151600003611f2957818782600a8110611f1f57611f1f612daf565b6020020152611f3b565b80611f3381612d7e565b915050611ee4565b50505b50505b50505050505050505050565b6040518061040001604052806020906020820280368337509192915050565b6040518061040001604052806020905b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181611f7c5790505090565b604051806101400160405280600a905b6040805180820190915260008082526020820152815260200190600190039081611fca5790505090565b60008083601f84011261200657600080fd5b50813567ffffffffffffffff81111561201e57600080fd5b60208301915083602082850101111561203657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156120905761209061203d565b60405290565b6040805190810167ffffffffffffffff811182821017156120905761209061203d565b604051610180810167ffffffffffffffff811182821017156120905761209061203d565b6040516080810167ffffffffffffffff811182821017156120905761209061203d565b604051610160810167ffffffffffffffff811182821017156120905761209061203d565b604051610200810167ffffffffffffffff811182821017156120905761209061203d565b604051610c80810167ffffffffffffffff811182821017156120905761209061203d565b604051610400810167ffffffffffffffff811182821017156120905761209061203d565b60405160a0810167ffffffffffffffff811182821017156120905761209061203d565b803580151581146121c357600080fd5b919050565b600082601f8301126121d957600080fd5b6121e16120dd565b8060808401858111156121f357600080fd5b845b8181101561220d5780358452602093840193016121f5565b509095945050505050565b803560ff811681146121c357600080fd5b803563ffffffff811681146121c357600080fd5b803561ffff811681146121c357600080fd5b600082601f83011261226057600080fd5b6122686120dd565b80608084018581111561227a57600080fd5b845b8181101561220d5761228d8161223d565b84526020938401930161227c565b600082601f8301126122ac57600080fd5b6122b4612148565b8061d4808401858111156122c757600080fd5b845b8181101561220d5761022081880312156122e35760008081fd5b6122eb61206c565b6122f4826121b3565b81526020612304898285016121c8565b8183015260a080840135604084015260c0612320818601612218565b606085015260e06123338c8288016121c8565b60808601526123456101608701612229565b838601526123578c610180880161224f565b828601526123686102008701612218565b90850152505090855290930192610220016122c9565b600080600080600061d4e0868803121561239757600080fd5b853567ffffffffffffffff8111156123ae57600080fd5b6123ba88828901611ff4565b90965094506123ce9050876020880161229b565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b03121561240557600080fd5b883567ffffffffffffffff81111561241c57600080fd5b6124288b828c01611ff4565b90995097505060208981013596506124438b60408c0161229b565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261246557600080fd5b61246d61216c565b918a0191808c84111561247f57600080fd5b61d5008c015b8481101561249c5780358352918301918301612485565b508094505050505092959891949750929550565b6000602082840312156124c257600080fd5b5035919050565b600080600080600061d4e086880312156124e257600080fd5b853567ffffffffffffffff8111156124f957600080fd5b61250588828901611ff4565b90965094506125199050876020880161229b565b925061d4a0860135915061253061d4c08701612218565b90509295509295909350565b6104008101818360005b60208082106125555750612569565b825184529283019290910190600101612546565b50505092915050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146121c357600080fd5b803567ffffffffffffffff811681146121c357600080fd5b6000604082840312156125cc57600080fd5b6125d4612096565b9050813581526125e660208301612218565b602082015292915050565b60008183036101e081121561260557600080fd5b61260d612096565b91506101c08082121561261f57600080fd5b6126276120b9565b915083358252612639602085016121b3565b602083015261264a604085016121b3565b604083015261265b606085016121b3565b606083015261266d85608086016125ba565b608083015261267f8560c086016125ba565b60a08301526101008085013560c08401526101208086013560e08501526101408087013583860152610160925082870135828601526101808701358186015250506101a08501358184015250818352808401356020840152505092915050565b6000610b808083850312156126f357600080fd5b6126fb6120dd565b9150612706836121b3565b825260206127158185016121b3565b8184015261272685604086016125f1565b60408401528461023f85011261273b57600080fd5b612743612190565b91840191808684111561275557600080fd5b61022086015b8481101561277c5761276d88826125f1565b8352918301916101e00161275b565b5060608501525091949350505050565b6000610cc0828403121561279f57600080fd5b6127a7612100565b90506127b282612218565b8152602082013560208201526127ca604083016125a2565b6040820152606082013560608201526127e5608083016125a2565b60808201526127f660a08301612229565b60a082015261280760c08301612229565b60c082015261281860e08301612218565b60e082015261010061282b818401612218565b908201526101208281013590820152610140612849848285016126df565b9082015292915050565b60008060008060008086880361e38081121561286e57600080fd5b873567ffffffffffffffff81111561288557600080fd5b6128918a828b01611ff4565b909850965061020090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018113156128ca57600080fd5b6128d2612124565b91506128e060208a01612572565b825260408901356020830152606089013560408301526080890135606083015260a0890135608083015260c089013560a083015261292060e08a016121b3565b60c0830152610100612933818b016121b3565b60e0840152610120612946818c016121b3565b82850152610140915061295a828c016121b3565b8185015250610160808b0135828501526101809150818b013581850152506101a0808b0135828501526101c09150818b013581850152506101e0808b013582850152828b013581850152505050809450506129b988610220890161229b565b925061d6a087013591506129d18861d6c0890161278c565b90509295509295509295565b60008061d4a083850312156129f157600080fd5b6129fb848461229b565b9461d480939093013593505050565b60008060008061d4c08587031215612a2157600080fd5b843567ffffffffffffffff811115612a3857600080fd5b612a4487828801611ff4565b9095509350612a589050866020870161229b565b9396929550929361d4a00135925050565b600080600080600061e1808688031215612a8257600080fd5b853567ffffffffffffffff811115612a9957600080fd5b612aa588828901611ff4565b9096509450612ab99050876020880161229b565b925061d4a086013591506125308761d4c0880161278c565b600080600080600061d4e08688031215612aea57600080fd5b853567ffffffffffffffff811115612b0157600080fd5b612b0d88828901611ff4565b9096509450612b219050876020880161229b565b925061d4a0860135915061253061d4c0870161223d565b60008060008060008061e1a08789031215612b5257600080fd5b863567ffffffffffffffff811115612b6957600080fd5b612b7589828a01611ff4565b9097509550612b899050886020890161229b565b935061d4a0870135925061d4c087013591506129d18861d4e0890161278c565b600080600060408486031215612bbe57600080fd5b833567ffffffffffffffff811115612bd557600080fd5b612be186828701611ff4565b909790965060209590950135949350505050565b60008060008061d4c08587031215612c0c57600080fd5b843567ffffffffffffffff811115612c2357600080fd5b612c2f87828801611ff4565b90955093505060208501359150612c49866040870161229b565b905092959194509250565b6114008101818360005b6020808210612c6d5750612569565b8251805160ff1685528181015167ffffffffffffffff168286015260408082015190860152606080820151908601526080908101519085015260a09093019290910190600101612c5e565b600080600080600061d4e08688031215612cd157600080fd5b853567ffffffffffffffff811115612ce857600080fd5b612cf488828901611ff4565b90965094505060208601359250612d0e876040880161229b565b9497939650919461d4c0013592915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612d6257612d62612d20565b500190565b600081612d7657612d76612d20565b506000190190565b60006000198203612d9157612d91612d20565b5060010190565b600082821015612daa57612daa612d20565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825160005b81811015612dff5760208186018101518583015201612de5565b81811115612e0e576000828501525b509190910192915050565b600060208284031215612e2b57600080fd5b5051919050565b600061ffff808316818516808303821115612e4f57612e4f612d20565b01949350505050565b600060ff821680612e6b57612e6b612d20565b6000190192915050565b60008085851115612e8557600080fd5b83861115612e9257600080fd5b5050820193919092039150565b600060ff821660ff8103612eb557612eb5612d20565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612efc57612efc612ebe565b500490565b600082612f1057612f10612ebe565b500690565b600061ffff821680612e6b57612e6b612d20565b600060ff821660ff84168060ff03821115612f4657612f46612d20565b019392505050565b600067ffffffffffffffff808316818516808303821115612e4f57612e4f612d20565b600063ffffffff808316818516808303821115612e4f57612e4f612d20565b6000816000190483118215151615612faa57612faa612d20565b500290565b600061ffff808316818103612fc657612fc6612d20565b6001019392505050565b8035602083101561075357600019602084900360031b1b169291505056fea2646970667358221220dfdd5094a619cb4d50d8483abf71964bd4ce486a476f37dcb96d391532c6915c64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c80639aa3c695116100e3578063b88d34ee1161008c578063bf49c15011610066578063bf49c150146103be578063ed78d521146103d1578063f2e15bad146103e457600080fd5b8063b88d34ee14610378578063bc8568911461038b578063bddb49a51461039e57600080fd5b8063a77230cf116100bd578063a77230cf1461032a578063ad7117b314610352578063b2bc83c91461036557600080fd5b80639aa3c695146102d85780639c544ceb146102eb578063a6d8ea981461031757600080fd5b80634dca6f06116101455780637893a08a1161011f5780637893a08a1461029f57806378c64141146102b2578063883acc42146102c557600080fd5b80634dca6f0614610254578063505a7b9b1461026757806358ac1aff1461028c57600080fd5b80631f6520e6116101765780631f6520e6146101eb578063420a02f314610211578063491d90b11461023157600080fd5b806319aac94a1461019d5780631a1ae01c146101c35780631acbaa62146101d8575b600080fd5b6101b06101ab36600461237e565b6103f7565b6040519081526020015b60405180910390f35b6101d66101d13660046123e8565b61043e565b005b6101b06101e63660046124b0565b6106a2565b6101fe6101f93660046124c9565b610759565b60405161ffff90911681526020016101ba565b61022461021f36600461237e565b6107f7565b6040516101ba919061253c565b61024461023f366004612853565b610847565b60405190151581526020016101ba565b6101b06102623660046129dd565b6108e6565b61027a610275366004612a0a565b61096a565b60405160ff90911681526020016101ba565b61024461029a366004612a69565b610a41565b6101b06102ad366004612ad1565b610c1c565b6101b06102c0366004612a0a565b610cb3565b6101b06102d3366004612a0a565b610cd9565b61027a6102e63660046124c9565b610d11565b6102fe6102f9366004612ad1565b610da6565b60405167ffffffffffffffff90911681526020016101ba565b610244610325366004612a0a565b610e47565b61033d6103383660046124c9565b610e65565b60405163ffffffff90911681526020016101ba565b6101b06103603660046124b0565b610f00565b610244610373366004612b38565b610f75565b6101b061038636600461237e565b6111f4565b6101b0610399366004612ba9565b611249565b6103b16103ac366004612bf5565b6112a4565b6040516101ba9190612c54565b6101b06103cc366004612a0a565b611653565b6103b16103df366004612cb8565b6116bd565b6101b06103f236600461237e565b611756565b6000805b82156104325761040d8787878761096a565b61041e9060ff16600183901b612d4f565b90508261042a81612d67565b9350506103fb565b90505b95945050505050565b60008561044d89898888610e47565b6104a15761045d89898888610cb3565b915060005b8281101561049b576104768a8a898961096a565b6104879060ff16600184901b612d4f565b91508061049381612d7e565b915050610462565b50610570565b6104ad89898888610e47565b610511576104c9898988886104c189610f00565b60ff16610da6565b67ffffffffffffffff16915060005b8281101561049b576104ec8a8a898961096a565b6104fd9060ff16600184901b612d4f565b91508061050981612d7e565b9150506104d8565b600061051f8a8a898961096a565b60ff1690506105348a8a89896104c18a610f00565b67ffffffffffffffff16925060005b8381101561056d5761055982600185901b612d4f565b92508061056581612d7e565b915050610543565b50505b61057a8285612d98565b6000036105e05760005b60208110156105da5783816020811061059f5761059f612daf565b602002015160ff036105c857858482602081106105be576105be612daf565b60200201526105da565b806105d281612d7e565b915050610584565b50610697565b60006105ec87876108e6565b905060006105fa88886108e6565b90508160ff14158015610622575087826064811061061a5761061a612daf565b602002015151155b15610651576106518b8b600186901b8b8660018a8d6106419190612d98565b61064b9190612d98565b8b61043e565b8060ff14158015610677575087816064811061066f5761066f612daf565b602002015151155b15610694576106948b8b600286901b8b8560016106418b8e612d98565b50505b505050505050505050565b6040517fc6b4134800000000000000000000000000000000000000000000000000000000602082015260248101829052600090600290604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261071391612dde565b602060405180830381855afa158015610730573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107539190612e19565b92915050565b600060108260ff1611156107b45760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320313620626974730000000000000000000000000060448201526064015b60405180910390fd5b5060005b60ff821615610435576107cd8686868661096a565b6107e39060ff166201fffe600184901b16612e32565b9050816107ef81612e58565b9250506107b8565b6107ff611f4d565b60005b60208110156108365760ff82826020811061081f5761081f612daf565b60200201528061082e81612d7e565b915050610802565b50610435868660008787878761043e565b6000806001610870898989610140015190809261086693929190612e75565b8960800151611249565b876040015161087f9190612d98565b6108899190612d98565b9050610899888887846020610e65565b506108a485826108e6565b506108af85826108e6565b506108ba85826108e6565b5060006108c786836108e6565b90506108d7898988848989610f75565b925050505b9695505050505050565b60008282606481106108fa576108fa612daf565b60200201516020015183836064811061091557610915612daf565b60200201516060015160ff166004811061093157610931612daf565b6020020151905082826064811061094a5761094a612daf565b602002015160600180519061095e82612e9f565b60ff1690525092915050565b600080600884846064811061098157610981612daf565b6020020151604001516109949190612eed565b9050600060088585606481106109ac576109ac612daf565b6020020151604001516109bf9190612f01565b90506007818888858181106109d6576109d6612daf565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c935060019050858560648110610a1e57610a1e612daf565b6020020151604001818151610a339190612d4f565b90525050505b949350505050565b6000610a51868686866020610e65565b63ffffffff16639bc7a98714610aa95760405162461bcd60e51b815260206004820152600f60248201527f6e6f74206120426c6f636b496e666f000000000000000000000000000000000060448201526064016107ab565b6028848460648110610abd57610abd612daf565b6020020151604001818151610ad29190612d4f565b9052506001610ae5878787876008610d11565b60ff161115610b365760405162461bcd60e51b815260206004820152600e60248201527f646174612e666c616773203e203100000000000000000000000000000000000060448201526064016107ab565b6040848460648110610b4a57610b4a612daf565b6020020151604001818151610b5f9190612d4f565b905250610b70868686866002610d11565b50610b7f86868686603c611756565b50610b8e868686866020610e65565b50610b9d868686866040610da6565b50610bac868686866020610e65565b506000610bbd878787876040610da6565b90506000610bcf888888886040610da6565b90508167ffffffffffffffff16846040015167ffffffffffffffff16101580610c1057508067ffffffffffffffff16846040015167ffffffffffffffff1611155b98975050505050505050565b60006101008261ffff161115610c745760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320363420626974730000000000000000000000000060448201526064016107ab565b5060005b61ffff82161561043557610c8e8686868661096a565b610c9f9060ff16600183901b612d4f565b905081610cab81612f15565b925050610c78565b60005b610cc285858585610e47565b15610a395780610cd181612d7e565b915050610cb6565b600080610cea868686866004610d11565b90508060ff16600003610d01575060009050610a39565b6108dc868686868560ff166111f4565b600060088260ff161115610d675760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a6520697320382062697473000000000000000000000000000060448201526064016107ab565b5060005b60ff82161561043557610d808686868661096a565b610d92906101fe600184901b16612f29565b905081610d9e81612e58565b925050610d6b565b600060408261ffff161115610dfd5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320363420626974730000000000000000000000000060448201526064016107ab565b5060005b61ffff82161561043557610e178686868661096a565b610e339060ff166801fffffffffffffffe600184901b16612f4e565b905081610e3f81612f15565b925050610e01565b6000610e558585858561096a565b60ff166001149050949350505050565b600060208260ff161115610ebb5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a6520697320333220626974730000000000000000000000000060448201526064016107ab565b5060005b60ff82161561043557610ed48686868661096a565b610eec9060ff166401fffffffe600184901b16612f71565b905081610ef881612e58565b925050610ebf565b6000805b6001831115610f4e57610f18600183612d4f565b9150826001166001148015610f2b575080155b15610f4257610f3b600183612d4f565b9150600190505b600183901c9250610f04565b826001148015610f5c575080155b15610f6f57610f6c600183612d4f565b91505b50919050565b600080610f86888888886020610e65565b90508063ffffffff16634a33f6fd14610fe15760405162461bcd60e51b815260206004820152601c60248201527f63656c6c206973206e6f7420657874726120626c6f636b20696e666f0000000060448201526064016107ab565b610feb86866108e6565b50610ff686866108e6565b5060006110078761026289896108e6565b9050600061101a8a8a8a856101006107f7565b905060005b60208110156111e35781816020811061103a5761103a612daf565b602002015160ff146111e3576110688b8b8b85856020811061105e5761105e612daf565b6020020151611653565b5061108d8b8b8b85856020811061108157611081612daf565b60200201516004610d11565b60ff166005146110df5760405162461bcd60e51b815260206004820152601460248201527f6973206e6f74206163636f756e7420626c6f636b00000000000000000000000060448201526064016107ab565b60006111058c8c8c8686602081106110f9576110f9612daf565b602002015160206111f4565b90508660200151811461111857506111d1565b600061113e8d8d8d87876020811061113257611132612daf565b602002015160406107f7565b905060005b60208110156111cd5781816020811061115e5761115e612daf565b602002015160ff146111cd57898c61118c8e85856020811061118257611182612daf565b60200201516108e6565b6064811061119c5761119c612daf565b60200201516080015151036111bb5760019750505050505050506108dc565b806111c581612d7e565b915050611143565b5050505b806111db81612d7e565b91505061101f565b5060009a9950505050505050505050565b600080611202836008612f90565b905060005b811561123e576112198888888861096a565b61122a9060ff16600183901b612d4f565b90508161123681612d67565b925050611207565b979650505050505050565b600080805b831561129b5785858281811061126657611266612daf565b61127b92013560f81c9050600884901b612d4f565b91508061128781612d7e565b9150508361129490612d67565b935061124e565b50949350505050565b6112ac611f6c565b6112ba858584866020610e65565b5060008284606481106112cf576112cf612daf565b6020020151602001516003600481106112ea576112ea612daf565b602002015190506000611301878786856020610e65565b90508063ffffffff16634a33f6fd1461135c5760405162461bcd60e51b815260206004820152601060248201527f6e6f74206120426c6f636b45787472610000000000000000000000000000000060448201526064016107ab565b83826064811061136e5761136e612daf565b60200201516020015160036004811061138957611389612daf565b602002015191508160ff036113e05760405162461bcd60e51b815260206004820152600f60248201527f4e6f204d63426c6f636b4578747261000000000000000000000000000000000060448201526064016107ab565b6113ee878786856010610759565b61ffff1661cca5146114425760405162461bcd60e51b815260206004820152601260248201527f6e6f742061204d63426c6f636b4578747261000000000000000000000000000060448201526064016107ab565b600061145088888786610e47565b9050801561160b57600c85846064811061146c5761146c612daf565b60200201516040018181516114819190612d4f565b905250611493888887866101006103f7565b5060008584606481106114a8576114a8612daf565b6020020151602001516003600481106114c3576114c3612daf565b602002015160ff14611506578584606481106114e1576114e1612daf565b6020020151602001516003600481106114fc576114fc612daf565b6020020151611539565b85846064811061151857611518612daf565b60200201516020015160026004811061153357611533612daf565b60200201515b90508060ff0361158b5760405162461bcd60e51b815260206004820152601060248201527f4e6f20436f6e66696720506172616d730000000000000000000000000000000060448201526064016107ab565b600061159b8a8a898560206107f7565b905060005b60208110156115f2578181602081106115bb576115bb612daf565b602002015160ff146115f2578181602081106115d9576115d9612daf565b60200201519250806115ea81612d7e565b9150506115a0565b506115ff8a8a848a611809565b95505050505050610a39565b60405162461bcd60e51b815260206004820152600f60248201527f6973206e6f206b657920626c6f636b000000000000000000000000000000000060448201526064016107ab565b600061166185858585610cd9565b9050600061167186868686610e47565b9050801561129b57600061168585856108e6565b905084816064811061169957611699612daf565b6020020151516116b3576116b18787878460206107f7565b505b5050949350505050565b6116c5611f6c565b60006116d487878688876107f7565b905060005b602081101561174b578181602081106116f4576116f4612daf565b602002015160ff1461174b57611722888884846020811061171757611717612daf565b602002015188611925565b83826020811061173457611734612daf565b60200201528061174381612d7e565b9150506116d9565b505095945050505050565b600080600181805b60208161ffff161015611794578583161561177b57809350600191505b60019290921b918061178c81612faf565b91505061175e565b50806117e25760405162461bcd60e51b815260206004820152600c60248201527f6e6f7420612055696e744c65000000000000000000000000000000000000000060448201526064016107ab565b826117ec81612faf565b9350506117fc8989898987610c1c565b9998505050505050505050565b611811611f6c565b61181f85858486601c610c1c565b5061182e858584866008610d11565b5061183d858584866020610e65565b5061184c858584866020610e65565b5061185b858584866010610759565b5061186a858584866010610759565b50600061187783856108e6565b9050611881611fba565b611889611f4d565b6118a088888761189989886108e6565b6010611a22565b9250905060005b6020811015611919578181602081106118c2576118c2612daf565b602002015160ff14611919576118f089898484602081106118e5576118e5612daf565b602002015189611925565b85826020811061190257611902612daf565b60200201528061191181612d7e565b9150506118a7565b50505050949350505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261195e858584866008610d11565b60ff168152611971858584866020610e65565b63ffffffff16638e81278a146119c95760405162461bcd60e51b815260206004820152600f60248201527f6e6f742061205369675075624b6579000000000000000000000000000000000060448201526064016107ab565b6119d8858584866101006103f7565b60608201526119eb858584866040610da6565b67ffffffffffffffff166020820152805160ff16607303610a3957611a15858584866101006103f7565b6040820152949350505050565b611a2a611f4d565b611a32611fba565b60005b6020811015611a695760ff838260208110611a5257611a52612daf565b602002015280611a6181612d7e565b915050611a35565b50611a7b878760008888888888611a85565b9550959350505050565b600086611a948a8a8989610e47565b611ae857611aa48a8a8989610cb3565b915060005b82811015611ae257611abd8b8b8a8a61096a565b611ace9060ff16600184901b612d4f565b915080611ada81612d7e565b915050611aa9565b50611baf565b611af48a8a8989610e47565b611b5057611b088a8a89896104c18a610f00565b67ffffffffffffffff16915060005b82811015611ae257611b2b8b8b8a8a61096a565b611b3c9060ff16600184901b612d4f565b915080611b4881612d7e565b915050611b17565b6000611b5e8b8b8a8a61096a565b60ff169050611b738b8b8a8a6104c18b610f00565b67ffffffffffffffff16925060005b83811015611bac57611b9882600185901b612d4f565b925080611ba481612d7e565b915050611b82565b50505b611bb98286612d98565b600003611c1f5760005b6020811015611c1957848160208110611bde57611bde612daf565b602002015160ff03611c075786858260208110611bfd57611bfd612daf565b6020020152611c19565b80611c1181612d7e565b915050611bc3565b50611f41565b6000611c2b88886108e6565b90506000611c3989896108e6565b90508160ff14158015611c615750888260648110611c5957611c59612daf565b602002015151155b15611c9657611c918c8c600186901b8c8660018a8e611c809190612d98565b611c8a9190612d98565b8c8c611a85565b611dc6565b888260648110611ca857611ca8612daf565b60200201515115611dc657600060405180604001604052806001878b611cce9190612d98565b611cd89190612d98565b81526020018e8e60088e8860648110611cf357611cf3612daf565b602002015160400151611d069190612eed565b611d11906002612d4f565b9060088f8960648110611d2657611d26612daf565b602002015160400151611d399190612eed565b611d44906020612d4f565b611d4f906002612d4f565b92611d5c93929190612e75565b611d6591612fd0565b9052905060005b600a811015611dc3578681600a8110611d8757611d87612daf565b602002015151600003611db157818782600a8110611da757611da7612daf565b6020020152611dc3565b80611dbb81612d7e565b915050611d6c565b50505b8060ff14158015611dec5750888160648110611de457611de4612daf565b602002015151155b15611e0e57611e098c8c600286901b8c856001611c808b8f612d98565b611f3e565b888160648110611e2057611e20612daf565b60200201515115611f3e57600060405180604001604052806001878b611e469190612d98565b611e509190612d98565b81526020018e8e60088e8760648110611e6b57611e6b612daf565b602002015160400151611e7e9190612eed565b611e89906002612d4f565b9060088f8860648110611e9e57611e9e612daf565b602002015160400151611eb19190612eed565b611ebc906020612d4f565b611ec7906002612d4f565b92611ed493929190612e75565b611edd91612fd0565b9052905060005b600a811015611f3b578681600a8110611eff57611eff612daf565b602002015151600003611f2957818782600a8110611f1f57611f1f612daf565b6020020152611f3b565b80611f3381612d7e565b915050611ee4565b50505b50505b50505050505050505050565b6040518061040001604052806020906020820280368337509192915050565b6040518061040001604052806020905b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181611f7c5790505090565b604051806101400160405280600a905b6040805180820190915260008082526020820152815260200190600190039081611fca5790505090565b60008083601f84011261200657600080fd5b50813567ffffffffffffffff81111561201e57600080fd5b60208301915083602082850101111561203657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156120905761209061203d565b60405290565b6040805190810167ffffffffffffffff811182821017156120905761209061203d565b604051610180810167ffffffffffffffff811182821017156120905761209061203d565b6040516080810167ffffffffffffffff811182821017156120905761209061203d565b604051610160810167ffffffffffffffff811182821017156120905761209061203d565b604051610200810167ffffffffffffffff811182821017156120905761209061203d565b604051610c80810167ffffffffffffffff811182821017156120905761209061203d565b604051610400810167ffffffffffffffff811182821017156120905761209061203d565b60405160a0810167ffffffffffffffff811182821017156120905761209061203d565b803580151581146121c357600080fd5b919050565b600082601f8301126121d957600080fd5b6121e16120dd565b8060808401858111156121f357600080fd5b845b8181101561220d5780358452602093840193016121f5565b509095945050505050565b803560ff811681146121c357600080fd5b803563ffffffff811681146121c357600080fd5b803561ffff811681146121c357600080fd5b600082601f83011261226057600080fd5b6122686120dd565b80608084018581111561227a57600080fd5b845b8181101561220d5761228d8161223d565b84526020938401930161227c565b600082601f8301126122ac57600080fd5b6122b4612148565b8061d4808401858111156122c757600080fd5b845b8181101561220d5761022081880312156122e35760008081fd5b6122eb61206c565b6122f4826121b3565b81526020612304898285016121c8565b8183015260a080840135604084015260c0612320818601612218565b606085015260e06123338c8288016121c8565b60808601526123456101608701612229565b838601526123578c610180880161224f565b828601526123686102008701612218565b90850152505090855290930192610220016122c9565b600080600080600061d4e0868803121561239757600080fd5b853567ffffffffffffffff8111156123ae57600080fd5b6123ba88828901611ff4565b90965094506123ce9050876020880161229b565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b03121561240557600080fd5b883567ffffffffffffffff81111561241c57600080fd5b6124288b828c01611ff4565b90995097505060208981013596506124438b60408c0161229b565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261246557600080fd5b61246d61216c565b918a0191808c84111561247f57600080fd5b61d5008c015b8481101561249c5780358352918301918301612485565b508094505050505092959891949750929550565b6000602082840312156124c257600080fd5b5035919050565b600080600080600061d4e086880312156124e257600080fd5b853567ffffffffffffffff8111156124f957600080fd5b61250588828901611ff4565b90965094506125199050876020880161229b565b925061d4a0860135915061253061d4c08701612218565b90509295509295909350565b6104008101818360005b60208082106125555750612569565b825184529283019290910190600101612546565b50505092915050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146121c357600080fd5b803567ffffffffffffffff811681146121c357600080fd5b6000604082840312156125cc57600080fd5b6125d4612096565b9050813581526125e660208301612218565b602082015292915050565b60008183036101e081121561260557600080fd5b61260d612096565b91506101c08082121561261f57600080fd5b6126276120b9565b915083358252612639602085016121b3565b602083015261264a604085016121b3565b604083015261265b606085016121b3565b606083015261266d85608086016125ba565b608083015261267f8560c086016125ba565b60a08301526101008085013560c08401526101208086013560e08501526101408087013583860152610160925082870135828601526101808701358186015250506101a08501358184015250818352808401356020840152505092915050565b6000610b808083850312156126f357600080fd5b6126fb6120dd565b9150612706836121b3565b825260206127158185016121b3565b8184015261272685604086016125f1565b60408401528461023f85011261273b57600080fd5b612743612190565b91840191808684111561275557600080fd5b61022086015b8481101561277c5761276d88826125f1565b8352918301916101e00161275b565b5060608501525091949350505050565b6000610cc0828403121561279f57600080fd5b6127a7612100565b90506127b282612218565b8152602082013560208201526127ca604083016125a2565b6040820152606082013560608201526127e5608083016125a2565b60808201526127f660a08301612229565b60a082015261280760c08301612229565b60c082015261281860e08301612218565b60e082015261010061282b818401612218565b908201526101208281013590820152610140612849848285016126df565b9082015292915050565b60008060008060008086880361e38081121561286e57600080fd5b873567ffffffffffffffff81111561288557600080fd5b6128918a828b01611ff4565b909850965061020090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018113156128ca57600080fd5b6128d2612124565b91506128e060208a01612572565b825260408901356020830152606089013560408301526080890135606083015260a0890135608083015260c089013560a083015261292060e08a016121b3565b60c0830152610100612933818b016121b3565b60e0840152610120612946818c016121b3565b82850152610140915061295a828c016121b3565b8185015250610160808b0135828501526101809150818b013581850152506101a0808b0135828501526101c09150818b013581850152506101e0808b013582850152828b013581850152505050809450506129b988610220890161229b565b925061d6a087013591506129d18861d6c0890161278c565b90509295509295509295565b60008061d4a083850312156129f157600080fd5b6129fb848461229b565b9461d480939093013593505050565b60008060008061d4c08587031215612a2157600080fd5b843567ffffffffffffffff811115612a3857600080fd5b612a4487828801611ff4565b9095509350612a589050866020870161229b565b9396929550929361d4a00135925050565b600080600080600061e1808688031215612a8257600080fd5b853567ffffffffffffffff811115612a9957600080fd5b612aa588828901611ff4565b9096509450612ab99050876020880161229b565b925061d4a086013591506125308761d4c0880161278c565b600080600080600061d4e08688031215612aea57600080fd5b853567ffffffffffffffff811115612b0157600080fd5b612b0d88828901611ff4565b9096509450612b219050876020880161229b565b925061d4a0860135915061253061d4c0870161223d565b60008060008060008061e1a08789031215612b5257600080fd5b863567ffffffffffffffff811115612b6957600080fd5b612b7589828a01611ff4565b9097509550612b899050886020890161229b565b935061d4a0870135925061d4c087013591506129d18861d4e0890161278c565b600080600060408486031215612bbe57600080fd5b833567ffffffffffffffff811115612bd557600080fd5b612be186828701611ff4565b909790965060209590950135949350505050565b60008060008061d4c08587031215612c0c57600080fd5b843567ffffffffffffffff811115612c2357600080fd5b612c2f87828801611ff4565b90955093505060208501359150612c49866040870161229b565b905092959194509250565b6114008101818360005b6020808210612c6d5750612569565b8251805160ff1685528181015167ffffffffffffffff168286015260408082015190860152606080820151908601526080908101519085015260a09093019290910190600101612c5e565b600080600080600061d4e08688031215612cd157600080fd5b853567ffffffffffffffff811115612ce857600080fd5b612cf488828901611ff4565b90965094505060208601359250612d0e876040880161229b565b9497939650919461d4c0013592915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612d6257612d62612d20565b500190565b600081612d7657612d76612d20565b506000190190565b60006000198203612d9157612d91612d20565b5060010190565b600082821015612daa57612daa612d20565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825160005b81811015612dff5760208186018101518583015201612de5565b81811115612e0e576000828501525b509190910192915050565b600060208284031215612e2b57600080fd5b5051919050565b600061ffff808316818516808303821115612e4f57612e4f612d20565b01949350505050565b600060ff821680612e6b57612e6b612d20565b6000190192915050565b60008085851115612e8557600080fd5b83861115612e9257600080fd5b5050820193919092039150565b600060ff821660ff8103612eb557612eb5612d20565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612efc57612efc612ebe565b500490565b600082612f1057612f10612ebe565b500690565b600061ffff821680612e6b57612e6b612d20565b600060ff821660ff84168060ff03821115612f4657612f46612d20565b019392505050565b600067ffffffffffffffff808316818516808303821115612e4f57612e4f612d20565b600063ffffffff808316818516808303821115612e4f57612e4f612d20565b6000816000190483118215151615612faa57612faa612d20565b500290565b600061ffff808316818103612fc657612fc6612d20565b6001019392505050565b8035602083101561075357600019602084900360031b1b169291505056fea2646970667358221220dfdd5094a619cb4d50d8483abf71964bd4ce486a476f37dcb96d391532c6915c64736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
