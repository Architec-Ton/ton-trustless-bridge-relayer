{
  "_format": "hh-sol-artifact-1",
  "contractName": "TreeOfCellsParser",
  "sourceName": "contracts/parser/TreeOfCellsParser.sol",
  "abi": [
    {
      "inputs": [],
      "name": "BOC_GENERIC",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BOC_IDX",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BOC_IDX_CRC32C",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LibraryCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MerkleProofCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MerkleUpdateCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OrdinaryCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PrunnedBranchCell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "levelMask",
          "type": "uint32"
        }
      ],
      "name": "applyLevelMask",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cell_info",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cell_slice",
          "type": "bytes"
        }
      ],
      "name": "calcHashForRefs",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        }
      ],
      "name": "calcHashesForToc",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "n",
          "type": "uint32"
        }
      ],
      "name": "count_setbits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "refs",
          "type": "uint256[4]"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cell_info",
          "type": "tuple"
        }
      ],
      "name": "create_data_cell",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData",
          "name": "cell",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cells_slice",
          "type": "bytes"
        },
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        },
        {
          "internalType": "uint256",
          "name": "ref_byte_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cell_count",
          "type": "uint256"
        }
      ],
      "name": "deserialize_cell",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData",
          "name": "cell",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "getDepth",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getHashesCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getHashesCountFromMask",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getLevel",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "getLevelFromMask",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "cells_slice",
          "type": "bytes"
        },
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        }
      ],
      "name": "get_cell_slice",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "cell_slice",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "get_indexes",
      "outputs": [
        {
          "internalType": "uint256[100]",
          "name": "custom_index",
          "type": "uint256[100]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "get_tree_of_cells",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "ref_byte_size",
          "type": "uint256"
        }
      ],
      "name": "init_cell_serialization_info",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "d1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "d2",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "with_hashes",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "hashes_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depth_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_len",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "data_with_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "refs_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refs_cnt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_offset",
              "type": "uint256"
            }
          ],
          "internalType": "struct CellSerializationInfo",
          "name": "cellInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "mask",
          "type": "uint32"
        }
      ],
      "name": "isLevelSignificant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        }
      ],
      "name": "parseSerializedHeader",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            },
            {
              "internalType": "uint256",
              "name": "root_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cell_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "absent_count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ref_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offset_byte_size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "has_index",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_roots",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_crc32c",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "has_cache_bits",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "roots_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total_size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootIdx",
              "type": "uint256"
            }
          ],
          "internalType": "struct BagOfCellsInfo",
          "name": "header",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506144ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c806378c6414111610186578063ad7117b3116100e3578063d0dc8d4e11610097578063f06c329d11610071578063f06c329d146106bc578063fa9e2008146106dd578063fe08378a146106e557600080fd5b8063d0dc8d4e14610699578063dd8254d8146106a1578063e433fce7146106b457600080fd5b8063b88d34ee116100c8578063b88d34ee14610660578063bc85689114610673578063c5de6a651461068657600080fd5b8063ad7117b31461063a578063b2cad9b71461064d57600080fd5b80639aa3c6951161013a578063a62f19381161011f578063a62f1938146105f4578063a6d8ea9814610614578063a77230cf1461062757600080fd5b80639aa3c695146105b55780639c544ceb146105c857600080fd5b80637ff3d1ad1161016b5780637ff3d1ad1461057a57806380b6f8171461058257806380e912a21461059557600080fd5b806378c64141146105445780637e8c8d7b1461055757600080fd5b80633c82adfe11610234578063505a7b9b116101e857806371734cce116101cd57806371734cce146104fe57806374e6af291461051e5780637893a08a1461053157600080fd5b8063505a7b9b146104d857806362225871146104eb57600080fd5b806341c0044c1161021957806341c0044c14610492578063420a02f3146104a55780634dca6f06146104c557600080fd5b80633c82adfe146104435780633f6093fa1461046b57600080fd5b80631b839b861161028b5780631f6520e6116102705780631f6520e6146103f6578063323273ea14610409578063365dc6141461041c57600080fd5b80631b839b86146103b65780631c1aa8ad146103d657600080fd5b8063151346d3116102bc578063151346d31461035b57806319aac94a146103805780631a1ae01c146103a157600080fd5b806303084edd146102d85780631109637d14610335575b600080fd5b6102ff7facc3a7280000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b610348610343366004613499565b6106ed565b60405161ffff909116815260200161032c565b61036e610369366004613509565b610899565b60405160ff909116815260200161032c565b61039361038e366004613524565b6108e8565b60405190815260200161032c565b6103b46103af36600461358e565b61092d565b005b6103c96103c4366004613656565b610b91565b60405161032c91906136a2565b6103e96103e4366004613797565b610ee5565b60405161032c91906138ee565b6103486104043660046138fd565b61113d565b610393610417366004613509565b6111d6565b6102ff7f68ff65f30000000000000000000000000000000000000000000000000000000081565b610456610451366004613970565b61120d565b60405163ffffffff909116815260200161032c565b6102ff7fb5ee9c720000000000000000000000000000000000000000000000000000000081565b61036e6104a0366004613509565b61122f565b6104b86104b3366004613524565b611284565b60405161032c91906139a3565b6103936104d33660046139d9565b6112d4565b61036e6104e6366004613a06565b611358565b6103b46104f9366004613b7f565b61142e565b61051161050c366004613be8565b611588565b60405161032c9190613c3e565b61039361052c366004613499565b611647565b61039361053f366004613c67565b61176f565b610393610552366004613a06565b611806565b61056a610565366004613970565b61182c565b604051901515815260200161032c565b61036e600281565b6103e9610590366004613d9f565b61186c565b6105a86105a3366004613be8565b61188e565b60405161032c9190613dcc565b61036e6105c33660046138fd565b61198e565b6105db6105d6366004613c67565b611a23565b60405167ffffffffffffffff909116815260200161032c565b610607610602366004613e01565b611ac4565b60405161032c9190613e43565b61056a610622366004613a06565b6125c7565b6104566106353660046138fd565b6125e5565b610393610648366004613f2b565b612680565b61036e61065b366004613509565b6126f5565b61039361066e366004613524565b612703565b610393610681366004613656565b612758565b61036e610694366004613509565b6127b3565b61036e60ff81565b6103b46106af366004613f44565b6127c1565b61036e600481565b6106cf6106ca366004613fe8565b61302b565b60405161032c92919061403d565b61036e600181565b61036e600381565b60008060016107196104a08787876064811061070b5761070b61408a565b602002015160a0015161120d565b61072391906140e8565b905060018484606481106107395761073961408a565b602002015160e0015160ff160361085857600060016107718686606481106107635761076361408a565b602002015160a001516127b3565b61077b91906140e8565b90508060ff168260ff161461085257600061079a60ff8416600261410b565b6107a590600861410b565b6107b360ff8416602061410b565b6107be90600861410b565b6107c990601061412a565b6107d3919061412a565b9050808686606481106107e8576107e861408a565b60200201516040018181516107fd919061412a565b90525060006108108a8a8989601061113d565b905061081d82601061412a565b87876064811061082f5761082f61408a565b60200201516040018181516108449190614142565b905250935061089092505050565b60009150505b83836064811061086a5761086a61408a565b602002015160c001518160ff16600481106108875761088761408a565b60200201519150505b95945050505050565b600081815b60038160ff16116108de578163ffffffff166000036108be579392505050565b60018263ffffffff16901c915080806108d690614159565b91505061089e565b5060039392505050565b6000805b8215610923576108fe87878787611358565b61090f9060ff16600183901b61412a565b90508261091b81614178565b9350506108ec565b9695505050505050565b60008561093c898988886125c7565b6109905761094c89898888611806565b915060005b8281101561098a576109658a8a8989611358565b6109769060ff16600184901b61412a565b9150806109828161418f565b915050610951565b50610a5f565b61099c898988886125c7565b610a00576109b8898988886109b089612680565b60ff16611a23565b67ffffffffffffffff16915060005b8281101561098a576109db8a8a8989611358565b6109ec9060ff16600184901b61412a565b9150806109f88161418f565b9150506109c7565b6000610a0e8a8a8989611358565b60ff169050610a238a8a89896109b08a612680565b67ffffffffffffffff16925060005b83811015610a5c57610a4882600185901b61412a565b925080610a548161418f565b915050610a32565b50505b610a698285614142565b600003610acf5760005b6020811015610ac957838160208110610a8e57610a8e61408a565b602002015160ff03610ab75785848260208110610aad57610aad61408a565b6020020152610ac9565b80610ac18161418f565b915050610a73565b50610b86565b6000610adb87876112d4565b90506000610ae988886112d4565b90508160ff14158015610b115750878260648110610b0957610b0961408a565b602002015151155b15610b4057610b408b8b600186901b8b8660018a8d610b309190614142565b610b3a9190614142565b8b61092d565b8060ff14158015610b665750878160648110610b5e57610b5e61408a565b602002015151155b15610b8357610b838b8b600286901b8b856001610b308b8e614142565b50505b505050505050505050565b610c0e604051806101a00160405280600060ff168152602001600060ff168152602001600015158152602001600063ffffffff168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6002831015610c645760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f7567682062797465730000000000000000000000000000000060448201526064015b60405180910390fd5b600084846000818110610c7957610c7961408a565b919091013560f81c91506000905085856001818110610c9a57610c9a61408a565b60ff85168652919091013560f81c6020850181905260078085166101608701819052600586901c909116606087015260088516151560408701526010851615156080870152909250600410159050610da0578261016001516007141580610d0357508260800151155b15610d505760405162461bcd60e51b815260206004820152601260248201527f496e76616c6964206669727374206279746500000000000000000000000000006044820152606401610c5b565b600061016084015260405162461bcd60e51b815260206004820152601260248201527f544f444f3a20616273656e742063656c6c7300000000000000000000000000006044820152606401610c5b565b600260a08401526060830151600090610db8906111d6565b610dc390600161412a565b90508360800151610dd5576000610de0565b610de081602061410b565b8460a00151610def919061412a565b60c08501526080840151610e04576000610e0f565b610e0f81600261410b565b8460c00151610e1e919061412a565b60e0850152610e3760018381169084901c607f166141a9565b60ff16610100850181905260018316151561012086015260e0850151610e5d919061412a565b610140850152610160840151610e7490869061410b565b846101400151610e84919061412a565b6101808501819052861015610edb5760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610c5b565b5050509392505050565b610eed613096565b366000610efc8989898961302b565b91509150610f086130ef565b60005b6004811015610f3f5760ff828260048110610f2857610f2861408a565b602002015280610f378161418f565b915050610f0b565b506000610f4d848489610b91565b6101808101519091508314610fa45760405162461bcd60e51b815260206004820152601460248201527f756e7573656420737061636520696e2063656c6c0000000000000000000000006044820152606401610c5b565b60005b8161016001518110156110c6576000610fe68686610fc58c8661410b565b866101400151610fd5919061412a565b610fe09282906141ce565b8b612758565b90508c81116110375760405162461bcd60e51b815260206004820152601260248201527f6261672d6f662d63656c6c73206572726f7200000000000000000000000000006044820152606401610c5b565b8781106110865760405162461bcd60e51b815260206004820152601d60248201527f726566496e646578206973206269676765722063656c6c20636f756e740000006044820152606401610c5b565b6001611092828a614142565b61109c9190614142565b8483600481106110ae576110ae61408a565b602002015250806110be8161418f565b915050610fa7565b506110d1828261186c565b94508a156110ff57876110e560018d614142565b606481106110f5576110f561408a565b6020020151611102565b60005b8160e00151611111919061412a565b61111c90600861410b565b60408601526060015163ffffffff1660a08501525050509695505050505050565b600060108260ff1611156111935760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732031362062697473000000000000000000000000006044820152606401610c5b565b5060005b60ff821615610890576111ac86868686611358565b6111c29060ff166201fffe600184901b166141f8565b9050816111ce8161421e565b925050611197565b6000805b63ffffffff831615611207576111f3600184168261412a565b905060018363ffffffff16901c92506111da565b92915050565b6000611220600160ff851681901b614142565b90911663ffffffff1692915050565b60008082815b60038160ff1610156112705761124e60018316846141a9565b925060018263ffffffff16901c9150808061126890614159565b915050611235565b5061127c8260016141a9565b949350505050565b61128c61310d565b60005b60208110156112c35760ff8282602081106112ac576112ac61408a565b6020020152806112bb8161418f565b91505061128f565b50610890868660008787878761092d565b60008282606481106112e8576112e861408a565b6020020151602001518383606481106113035761130361408a565b60200201516060015160ff166004811061131f5761131f61408a565b602002015190508282606481106113385761133861408a565b602002015160600180519061134c82614159565b60ff1690525092915050565b600080600884846064811061136f5761136f61408a565b602002015160400151611382919061426a565b90506000600885856064811061139a5761139a61408a565b6020020151604001516113ad919061427e565b90506007818888858181106113c4576113c461408a565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c93506001905085856064811061140c5761140c61408a565b6020020151604001818151611421919061412a565b9052505050949350505050565b6000366000868686610180015190876101a00151886101800151611452919061412a565b9261145f939291906141ce565b915091506000611470888888611588565b905060005b8660400151811015610b865780600188604001516114939190614142565b61149d9190614142565b94503660006114ae8787878761302b565b9150915060006114c383838c60800151610b91565b905060ff8985606481106114d9576114d961408a565b602002015160ff90911660e0909101528884606481106114fb576114fb61408a565b60200201515115611563576115148c8c8b87600861198e565b8985606481106115265761152661408a565b602002015160ff90911660e090910152600889856064811061154a5761154a61408a565b602002015160400181815161155f9190614142565b9052505b6115728c8c838c8888886127c1565b50505080806115809061418f565b915050611475565b61159061312c565b366000858585610180015190866101a001518761018001516115b2919061412a565b926115bf939291906141ce565b915091506000805b856040015181101561163c5760006115e485858960800151610b91565b6101808101519091506115fa90859081886141ce565b945094508061018001518361160f919061412a565b9250828683606481106116245761162461408a565b602002015250806116348161418f565b9150506115c7565b505050509392505050565b60008060016116656104a08787876064811061070b5761070b61408a565b61166f91906140e8565b905060018484606481106116855761168561408a565b602002015160e0015160ff160361174057600060016116af8686606481106107635761076361408a565b6116b991906140e8565b90508060ff168260ff161461173a5760006116d860ff8416600261410b565b6116e390600861410b565b6116ee90601061412a565b9050808686606481106117035761170361408a565b6020020151604001818151611718919061412a565b905250600061172c8a8a898961010061176f565b905061081d8261010061412a565b60009150505b8383606481106117525761175261408a565b6020020151608001518160ff16600481106108875761088761408a565b60006101008261ffff1611156117c75760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610c5b565b5060005b61ffff821615610890576117e186868686611358565b6117f29060ff16600183901b61412a565b9050816117fe81614292565b9250506117cb565b60005b611815858585856125c7565b1561127c57806118248161418f565b915050611809565b600060ff83161580611865575060026118466001856140e8565b60ff168363ffffffff16901c61185c91906142a6565b63ffffffff1615155b9392505050565b611874613096565b602081019290925260400151151581526000606082015290565b61189661314b565b60006118a3858585611588565b9050366000868686610180015190876101a001518861018001516118c7919061412a565b926118d4939291906141ce565b90925090506000805b86604001518110156119815780600188604001516118fb9190614142565b6119059190614142565b915061191d828585888b608001518c60400151610ee5565b86826064811061192f5761192f61408a565b602002015261018087015161194590600861410b565b8682606481106119575761195761408a565b602002015160400181815161196c919061412a565b905250806119798161418f565b9150506118dd565b5061163c8888888861142e565b600060088260ff1611156119e45760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610c5b565b5060005b60ff821615610890576119fd86868686611358565b611a0f906101fe600184901b166141a9565b905081611a1b8161421e565b9250506119e8565b600060408261ffff161115611a7a5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610c5b565b5060005b61ffff82161561089057611a9486868686611358565b611ab09060ff166801fffffffffffffffe600184901b166142c9565b905081611abc81614292565b925050611a7e565b611b6b60405180610200016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b816004811015611bbd5760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610c5b565b60408051610200810190915260009080611bda600484888a6141ce565b611be3916142ec565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160001515815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815250925063b5ee9c7260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611d14575082517fffffffff00000000000000000000000000000000000000000000000000000000167f68ff65f30000000000000000000000000000000000000000000000000000000014155b8015611d63575082517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a7280000000000000000000000000000000000000000000000000000000014155b15611db05760405162461bcd60e51b815260206004820152600e60248201527f77726f6e6720626f6320747970650000000000000000000000000000000000006044820152606401610c5b565b600085856004818110611dc557611dc561408a565b865192013560f81c9250507fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e0000000000000000000000000000000000000000000000000000000001611e7657611e2a60026001600784901c16614334565b60ff1660011460c0850152611e476002600683901c600316614334565b60ff16600114610100850152611e656002600583901c600716614334565b60ff16600114610120850152611eca565b600160c085015283517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a72800000000000000000000000000000000000000000000000000000000146101008501525b8361012001518015611ede57508360c00151155b15611f2b5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b600781166080850181905260041080611f48575060018460800151105b15611f955760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6006831015611fe65760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b85856005818110611ff957611ff961408a565b919091013560f81c60a0860181905260081090508061201c575060018460a00151105b156120695760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b60a0840151608085015161207e90600361410b565b61208990600661412a565b612093919061412a565b6101408501526120a460068361412a565b91506120b1600684614142565b925083608001518310156121075760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6121206121168684818a6141ce565b8660800151612758565b604085018190526121735760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b608084015161218390600261410b565b8310156121d25760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6121f286868660800151856121e7919061412a565b6121169282906141ce565b602085018190526122455760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b61014084015161016085015283517fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e00000000000000000000000000000000000000000000000000000000016122d057836080015184602001516122af919061410b565b84610160018181516122c1919061412a565b905250600160e0850152612324565b83602001516001146123245760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b61016084015161018085015260c084015115612364578360a00151846040015161234e919061410b565b8461018001818151612360919061412a565b9052505b608084015161237490600361410b565b8310156123c35760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6123e38686866080015160026123d9919061410b565b6121e7908661412a565b606085018190526040850151101561243d5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b60a0840151608085015161245290600361410b565b61245c919061412a565b8310156124ab5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6124e08686866080015160036124c1919061410b565b6124cb908661412a565b6124d69282906141ce565b8660a00151612758565b6101a08501819052604085015160201b101561253e5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b83610100015161254f576000612552565b60045b60ff16846101a0015185610180015161256b919061412a565b612575919061412a565b6101c085015261014084015160019061259f90612595908890818b6141ce565b8760800151612758565b85604001516125ae9190614142565b6125b89190614142565b6101e085015250505092915050565b60006125d585858585611358565b60ff166001149050949350505050565b600060208260ff16111561263b5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610c5b565b5060005b60ff8216156108905761265486868686611358565b61266c9060ff166401fffffffe600184901b16614356565b9050816126788161421e565b92505061263f565b6000805b60018311156126ce5761269860018361412a565b91508260011660011480156126ab575080155b156126c2576126bb60018361412a565b9150600190505b600183901c9250612684565b8260011480156126dc575080155b156126ef576126ec60018361412a565b91505b50919050565b600061120782600716610899565b60008061271183600861410b565b905060005b811561274d5761272888888888611358565b6127399060ff16600183901b61412a565b90508161274581614178565b925050612716565b979650505050505050565b600080805b83156127aa578585828181106127755761277561408a565b61278a92013560f81c9050600884901b61412a565b9150806127968161418f565b915050836127a390614178565b935061275d565b50949350505050565b60006112078260071661122f565b60018484606481106127d5576127d561408a565b602002015160e0015160ff160361284a57818160038181106127f9576127f961408a565b919091013560f81c90508484606481106128155761281561408a565b602002015163ffffffff90911660a0909101528181600381811061283b5761283b61408a565b919091013560f81c6060870152505b600060018585606481106128605761286061408a565b602002015160e0015160ff16146128835761287e86606001516127b3565b612886565b60015b61289387606001516127b3565b61289d91906140e8565b90506000806128af88606001516126f5565b905060005b8160ff168160ff1611610b83576128cf818a6060015161182c565b15613019578360ff168360ff1610156128f457826128ec81614159565b935050613019565b60608460ff168460ff1603612ac75760ff841615801590612933575060018989606481106129245761292461408a565b602002015160e0015160ff1614155b156129805760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420646573657269616c697a652063656c6c0000000000000000006044820152606401610c5b565b6000805b60048110156129e5578a8a6064811061299f5761299f61408a565b60200201516020015181600481106129b9576129b961408a565b602002015160ff146129e557816129cf81614159565b92505080806129dd9061418f565b915050612984565b5060006129fe848c8c6064811061070b5761070b61408a565b90506000612a0d826020614375565b8c8c60648110612a1f57612a1f61408a565b602002015151612a30576000612a33565b60085b612a3d90856141a9565b60ff16612a4a9190614356565b6101408e0151909150612a609060018b8d6141ce565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051929650612aae9260f885901b92508791506020016143dc565b6040516020818303038152906040529350505050612bae565b60ff82161580612af457506001898960648110612ae657612ae661408a565b602002015160e0015160ff16145b15612b415760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f7420646573657269616c697a652063656c6c2032000000000000006044820152606401610c5b565b80898960648110612b5457612b5461408a565b6020020151608001516001612b6988886140e8565b612b7391906140e8565b60ff1660048110612b8657612b8661408a565b6020020151604051602001612b9c929190614410565b60405160208183030381529060405290505b888860648110612bc057612bc061408a565b602002015160200151600060048110612bdb57612bdb61408a565b602002015160ff14612f7c5760005b6004811015612de157898960648110612c0557612c0561408a565b6020020151602001518160048110612c1f57612c1f61408a565b602002015160ff14612de15781612c698e8e868e8f8f60648110612c4557612c4561408a565b6020020151602001518760048110612c5f57612c5f61408a565b60200201516106ed565b604051602001612ca4919060f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016815260020190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052612ce09291602001614429565b6040516020818303038152906040529150898960648110612d0357612d0361408a565b602002015160c00151612d1687876140e8565b60ff1660048110612d2957612d2961408a565b602002015161ffff16612d4b8e8e868e8f8f60648110612c4557612c4561408a565b61ffff161115612dcf57612d888d8d858d8e8e60648110612d6e57612d6e61408a565b6020020151602001518660048110612c5f57612c5f61408a565b8a8a60648110612d9a57612d9a61408a565b602002015160c00151612dad88886140e8565b60ff1660048110612dc057612dc061408a565b61ffff90921660209290920201525b80612dd98161418f565b915050612bea565b898960648110612df357612df361408a565b602002015160c00151612e0687876140e8565b60ff1660048110612e1957612e1961408a565b60200201805190612e298261443e565b61ffff16905250600090505b6004811015612ee957898960648110612e5057612e5061408a565b6020020151602001518160048110612e6a57612e6a61408a565b602002015160ff14612ee95781612eb48e8e868e8f8f60648110612e9057612e9061408a565b6020020151602001518760048110612eaa57612eaa61408a565b6020020151611647565b604051602001612ec5929190614410565b60405160208183030381529060405291508080612ee19061418f565b915050612e35565b600282604051612ef9919061445f565b602060405180830381855afa158015612f16573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612f39919061446b565b8a8a60648110612f4b57612f4b61408a565b602002015160800151612f5e88886140e8565b60ff1660048110612f7157612f7161408a565b60200201525061300a565b600281604051612f8c919061445f565b602060405180830381855afa158015612fa9573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612fcc919061446b565b898960648110612fde57612fde61408a565b602002015160800151612ff187876140e8565b60ff16600481106130045761300461408a565b60200201525b8361301481614159565b945050505b8061302381614159565b9150506128b4565b36600080861561305b5783613041600189614142565b606481106130515761305161408a565b602002015161305e565b60005b905060008488606481106130745761307461408a565b602002015190506130878183888a6141ce565b93509350505094509492505050565b6040518061010001604052806000151581526020016130b36130ef565b815260006020820181905260408201526060016130ce6130ef565b8152600060208201526040016130e26130ef565b8152600060209091015290565b60405180608001604052806004906020820280368337509192915050565b6040518061040001604052806020906020820280368337509192915050565b60405180610c8001604052806064906020820280368337509192915050565b60405180610c8001604052806064905b613163613096565b81526020019060019003908161315b5790505090565b60008083601f84011261318b57600080fd5b50813567ffffffffffffffff8111156131a357600080fd5b6020830191508360208285010111156131bb57600080fd5b9250929050565b803560ff811681146131d357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561322b5761322b6131d8565b60405290565b604051610200810167ffffffffffffffff8111828210171561322b5761322b6131d8565b6040516101a0810167ffffffffffffffff8111828210171561322b5761322b6131d8565b6040516080810167ffffffffffffffff8111828210171561322b5761322b6131d8565b604051610c80810167ffffffffffffffff8111828210171561322b5761322b6131d8565b604051610400810167ffffffffffffffff8111828210171561322b5761322b6131d8565b803580151581146131d357600080fd5b600082601f83011261330557600080fd5b61330d613279565b80608084018581111561331f57600080fd5b845b81811015613339578035845260209384019301613321565b509095945050505050565b803563ffffffff811681146131d357600080fd5b803561ffff811681146131d357600080fd5b600082601f83011261337b57600080fd5b613383613279565b80608084018581111561339557600080fd5b845b81811015613339576133a881613358565b845260209384019301613397565b600082601f8301126133c757600080fd5b6133cf61329c565b8061d4808401858111156133e257600080fd5b845b818110156133395761022081880312156133fe5760008081fd5b613406613207565b61340f826132e4565b8152602061341f898285016132f4565b8183015260a080840135604084015260c061343b8186016131c2565b606085015260e061344e8c8288016132f4565b60808601526134606101608701613344565b838601526134728c610180880161336a565b8286015261348361020087016131c2565b90850152505090855290930192610220016133e4565b600080600080600061d4e086880312156134b257600080fd5b853567ffffffffffffffff8111156134c957600080fd5b6134d588828901613179565b90965094506134e89050602087016131c2565b92506134f787604088016133b6565b9497939650919461d4c0013592915050565b60006020828403121561351b57600080fd5b61186582613344565b600080600080600061d4e0868803121561353d57600080fd5b853567ffffffffffffffff81111561355457600080fd5b61356088828901613179565b9096509450613574905087602088016133b6565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156135ab57600080fd5b883567ffffffffffffffff8111156135c257600080fd5b6135ce8b828c01613179565b90995097505060208981013596506135e98b60408c016133b6565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261360b57600080fd5b6136136132c0565b918a0191808c84111561362557600080fd5b61d5008c015b84811015613642578035835291830191830161362b565b508094505050505092959891949750929550565b60008060006040848603121561366b57600080fd5b833567ffffffffffffffff81111561368257600080fd5b61368e86828701613179565b909790965060209590950135949350505050565b815160ff1681526101a0810160208301516136c2602084018260ff169052565b5060408301516136d6604084018215159052565b5060608301516136ee606084018263ffffffff169052565b506080830151613702608084018215159052565b5060a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516137418285018215159052565b50506101408381015190830152610160808401519083015261018092830151929091019190915290565b600082601f83011261377c57600080fd5b61378461329c565b80610c8084018581111561331f57600080fd5b600080600080600080610d0087890312156137b157600080fd5b86359550602087013567ffffffffffffffff8111156137cf57600080fd5b6137db89828a01613179565b90965094506137ef9050886040890161376b565b9250610cc08701359150610ce087013590509295509295509295565b8060005b600481101561382e57815184526020938401939091019060010161380f565b50505050565b8060005b600481101561382e57815161ffff16845260209384019390910190600101613838565b80511515825260208082015181840160005b600481101561388a5782518252918301919083019060010161386d565b50505050604081015160a0830152606081015160ff1660c083015260808101516138b760e084018261380b565b5060a081015163ffffffff1661016083015260c08101516138dc610180840182613834565b5060e0015160ff166102009190910152565b6102208101611207828461385b565b600080600080600061d4e0868803121561391657600080fd5b853567ffffffffffffffff81111561392d57600080fd5b61393988828901613179565b909650945061394d905087602088016133b6565b925061d4a0860135915061396461d4c087016131c2565b90509295509295909350565b6000806040838503121561398357600080fd5b61398c836131c2565b915061399a60208401613344565b90509250929050565b6104008101818360005b60208082106139bc57506139d0565b8251845292830192909101906001016139ad565b50505092915050565b60008061d4a083850312156139ed57600080fd5b6139f784846133b6565b9461d480939093013593505050565b60008060008061d4c08587031215613a1d57600080fd5b843567ffffffffffffffff811115613a3457600080fd5b613a4087828801613179565b9095509350613a54905086602087016133b6565b9396929550929361d4a00135925050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146131d357600080fd5b60006102008284031215613aa857600080fd5b613ab0613231565b9050613abb82613a65565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152613afb60c083016132e4565b60c0820152613b0c60e083016132e4565b60e0820152610100613b1f8184016132e4565b90820152610120613b318382016132e4565b908201526101408281013590820152610160808301359082015261018080830135908201526101a080830135908201526101c080830135908201526101e09182013591810191909152919050565b60008060008061d6a08587031215613b9657600080fd5b843567ffffffffffffffff811115613bad57600080fd5b613bb987828801613179565b9095509350613bcd90508660208701613a95565b9150613bdd8661022087016133b6565b905092959194509250565b60008060006102208486031215613bfe57600080fd5b833567ffffffffffffffff811115613c1557600080fd5b613c2186828701613179565b9094509250613c3590508560208601613a95565b90509250925092565b610c808101818360005b60648110156139d0578151835260209283019290910190600101613c48565b600080600080600061d4e08688031215613c8057600080fd5b853567ffffffffffffffff811115613c9757600080fd5b613ca388828901613179565b9096509450613cb7905087602088016133b6565b925061d4a0860135915061396461d4c08701613358565b60006101a08284031215613ce157600080fd5b613ce9613255565b9050613cf4826131c2565b8152613d02602083016131c2565b6020820152613d13604083016132e4565b6040820152613d2460608301613344565b6060820152613d35608083016132e4565b608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120613d728184016132e4565b90820152610140828101359082015261016080830135908201526101809182013591810191909152919050565b6000806102208385031215613db357600080fd5b613dbd84846132f4565b915061399a8460808501613cce565b61d4808101818360005b60648110156139d057613dea83835161385b565b610220929092019160209190910190600101613dd6565b60008060208385031215613e1457600080fd5b823567ffffffffffffffff811115613e2b57600080fd5b613e3785828601613179565b90969095509350505050565b81517fffffffff0000000000000000000000000000000000000000000000000000000016815261020081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151613eb360c084018215159052565b5060e0830151613ec760e084018215159052565b5061010083810151151590830152610120808401511515908301526101408084015190830152610160808401519083015261018080840151908301526101a080840151908301526101c080840151908301526101e092830151929091019190915290565b600060208284031215613f3d57600080fd5b5035919050565b600080600080600080600061d680888a031215613f6057600080fd5b873567ffffffffffffffff80821115613f7857600080fd5b613f848b838c01613179565b9099509750879150613f998b60208c01613cce565b9650613fa98b6101c08c016133b6565b955061d6408a0135945061d6608a0135915080821115613fc857600080fd5b50613fd58a828b01613179565b989b979a50959850939692959293505050565b600080600080610cc08587031215613fff57600080fd5b84359350602085013567ffffffffffffffff81111561401d57600080fd5b61402987828801613179565b9094509250613bdd9050866040870161376b565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff841680821015614102576141026140b9565b90039392505050565b6000816000190483118215151615614125576141256140b9565b500290565b6000821982111561413d5761413d6140b9565b500190565b600082821015614154576141546140b9565b500390565b600060ff821660ff810361416f5761416f6140b9565b60010192915050565b600081614187576141876140b9565b506000190190565b600060001982036141a2576141a26140b9565b5060010190565b600060ff821660ff84168060ff038211156141c6576141c66140b9565b019392505050565b600080858511156141de57600080fd5b838611156141eb57600080fd5b5050820193919092039150565b600061ffff808316818516808303821115614215576142156140b9565b01949350505050565b600060ff821680614231576142316140b9565b6000190192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826142795761427961423b565b500490565b60008261428d5761428d61423b565b500690565b600061ffff821680614231576142316140b9565b600063ffffffff808416806142bd576142bd61423b565b92169190910692915050565b600067ffffffffffffffff808316818516808303821115614215576142156140b9565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561432c5780818660040360031b1b83161692505b505092915050565b600060ff8316806143475761434761423b565b8060ff84160691505092915050565b600063ffffffff808316818516808303821115614215576142156140b9565b600063ffffffff80831681851681830481118215151615614398576143986140b9565b02949350505050565b6000815160005b818110156143c257602081850181015186830152016143a8565b818111156143d1576000828601525b509290920192915050565b7fff0000000000000000000000000000000000000000000000000000000000000083168152600061127c60018301846143a1565b600061441c82856143a1565b9283525050602001919050565b600061127c61443883866143a1565b846143a1565b600061ffff808316818103614455576144556140b9565b6001019392505050565b600061186582846143a1565b60006020828403121561447d57600080fd5b505191905056fea2646970667358221220518ee2218cf5489803433883d8b6e689dcf5e0abe15b89d189ad17e2955f97fd64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d35760003560e01c806378c6414111610186578063ad7117b3116100e3578063d0dc8d4e11610097578063f06c329d11610071578063f06c329d146106bc578063fa9e2008146106dd578063fe08378a146106e557600080fd5b8063d0dc8d4e14610699578063dd8254d8146106a1578063e433fce7146106b457600080fd5b8063b88d34ee116100c8578063b88d34ee14610660578063bc85689114610673578063c5de6a651461068657600080fd5b8063ad7117b31461063a578063b2cad9b71461064d57600080fd5b80639aa3c6951161013a578063a62f19381161011f578063a62f1938146105f4578063a6d8ea9814610614578063a77230cf1461062757600080fd5b80639aa3c695146105b55780639c544ceb146105c857600080fd5b80637ff3d1ad1161016b5780637ff3d1ad1461057a57806380b6f8171461058257806380e912a21461059557600080fd5b806378c64141146105445780637e8c8d7b1461055757600080fd5b80633c82adfe11610234578063505a7b9b116101e857806371734cce116101cd57806371734cce146104fe57806374e6af291461051e5780637893a08a1461053157600080fd5b8063505a7b9b146104d857806362225871146104eb57600080fd5b806341c0044c1161021957806341c0044c14610492578063420a02f3146104a55780634dca6f06146104c557600080fd5b80633c82adfe146104435780633f6093fa1461046b57600080fd5b80631b839b861161028b5780631f6520e6116102705780631f6520e6146103f6578063323273ea14610409578063365dc6141461041c57600080fd5b80631b839b86146103b65780631c1aa8ad146103d657600080fd5b8063151346d3116102bc578063151346d31461035b57806319aac94a146103805780631a1ae01c146103a157600080fd5b806303084edd146102d85780631109637d14610335575b600080fd5b6102ff7facc3a7280000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b610348610343366004613499565b6106ed565b60405161ffff909116815260200161032c565b61036e610369366004613509565b610899565b60405160ff909116815260200161032c565b61039361038e366004613524565b6108e8565b60405190815260200161032c565b6103b46103af36600461358e565b61092d565b005b6103c96103c4366004613656565b610b91565b60405161032c91906136a2565b6103e96103e4366004613797565b610ee5565b60405161032c91906138ee565b6103486104043660046138fd565b61113d565b610393610417366004613509565b6111d6565b6102ff7f68ff65f30000000000000000000000000000000000000000000000000000000081565b610456610451366004613970565b61120d565b60405163ffffffff909116815260200161032c565b6102ff7fb5ee9c720000000000000000000000000000000000000000000000000000000081565b61036e6104a0366004613509565b61122f565b6104b86104b3366004613524565b611284565b60405161032c91906139a3565b6103936104d33660046139d9565b6112d4565b61036e6104e6366004613a06565b611358565b6103b46104f9366004613b7f565b61142e565b61051161050c366004613be8565b611588565b60405161032c9190613c3e565b61039361052c366004613499565b611647565b61039361053f366004613c67565b61176f565b610393610552366004613a06565b611806565b61056a610565366004613970565b61182c565b604051901515815260200161032c565b61036e600281565b6103e9610590366004613d9f565b61186c565b6105a86105a3366004613be8565b61188e565b60405161032c9190613dcc565b61036e6105c33660046138fd565b61198e565b6105db6105d6366004613c67565b611a23565b60405167ffffffffffffffff909116815260200161032c565b610607610602366004613e01565b611ac4565b60405161032c9190613e43565b61056a610622366004613a06565b6125c7565b6104566106353660046138fd565b6125e5565b610393610648366004613f2b565b612680565b61036e61065b366004613509565b6126f5565b61039361066e366004613524565b612703565b610393610681366004613656565b612758565b61036e610694366004613509565b6127b3565b61036e60ff81565b6103b46106af366004613f44565b6127c1565b61036e600481565b6106cf6106ca366004613fe8565b61302b565b60405161032c92919061403d565b61036e600181565b61036e600381565b60008060016107196104a08787876064811061070b5761070b61408a565b602002015160a0015161120d565b61072391906140e8565b905060018484606481106107395761073961408a565b602002015160e0015160ff160361085857600060016107718686606481106107635761076361408a565b602002015160a001516127b3565b61077b91906140e8565b90508060ff168260ff161461085257600061079a60ff8416600261410b565b6107a590600861410b565b6107b360ff8416602061410b565b6107be90600861410b565b6107c990601061412a565b6107d3919061412a565b9050808686606481106107e8576107e861408a565b60200201516040018181516107fd919061412a565b90525060006108108a8a8989601061113d565b905061081d82601061412a565b87876064811061082f5761082f61408a565b60200201516040018181516108449190614142565b905250935061089092505050565b60009150505b83836064811061086a5761086a61408a565b602002015160c001518160ff16600481106108875761088761408a565b60200201519150505b95945050505050565b600081815b60038160ff16116108de578163ffffffff166000036108be579392505050565b60018263ffffffff16901c915080806108d690614159565b91505061089e565b5060039392505050565b6000805b8215610923576108fe87878787611358565b61090f9060ff16600183901b61412a565b90508261091b81614178565b9350506108ec565b9695505050505050565b60008561093c898988886125c7565b6109905761094c89898888611806565b915060005b8281101561098a576109658a8a8989611358565b6109769060ff16600184901b61412a565b9150806109828161418f565b915050610951565b50610a5f565b61099c898988886125c7565b610a00576109b8898988886109b089612680565b60ff16611a23565b67ffffffffffffffff16915060005b8281101561098a576109db8a8a8989611358565b6109ec9060ff16600184901b61412a565b9150806109f88161418f565b9150506109c7565b6000610a0e8a8a8989611358565b60ff169050610a238a8a89896109b08a612680565b67ffffffffffffffff16925060005b83811015610a5c57610a4882600185901b61412a565b925080610a548161418f565b915050610a32565b50505b610a698285614142565b600003610acf5760005b6020811015610ac957838160208110610a8e57610a8e61408a565b602002015160ff03610ab75785848260208110610aad57610aad61408a565b6020020152610ac9565b80610ac18161418f565b915050610a73565b50610b86565b6000610adb87876112d4565b90506000610ae988886112d4565b90508160ff14158015610b115750878260648110610b0957610b0961408a565b602002015151155b15610b4057610b408b8b600186901b8b8660018a8d610b309190614142565b610b3a9190614142565b8b61092d565b8060ff14158015610b665750878160648110610b5e57610b5e61408a565b602002015151155b15610b8357610b838b8b600286901b8b856001610b308b8e614142565b50505b505050505050505050565b610c0e604051806101a00160405280600060ff168152602001600060ff168152602001600015158152602001600063ffffffff168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6002831015610c645760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f7567682062797465730000000000000000000000000000000060448201526064015b60405180910390fd5b600084846000818110610c7957610c7961408a565b919091013560f81c91506000905085856001818110610c9a57610c9a61408a565b60ff85168652919091013560f81c6020850181905260078085166101608701819052600586901c909116606087015260088516151560408701526010851615156080870152909250600410159050610da0578261016001516007141580610d0357508260800151155b15610d505760405162461bcd60e51b815260206004820152601260248201527f496e76616c6964206669727374206279746500000000000000000000000000006044820152606401610c5b565b600061016084015260405162461bcd60e51b815260206004820152601260248201527f544f444f3a20616273656e742063656c6c7300000000000000000000000000006044820152606401610c5b565b600260a08401526060830151600090610db8906111d6565b610dc390600161412a565b90508360800151610dd5576000610de0565b610de081602061410b565b8460a00151610def919061412a565b60c08501526080840151610e04576000610e0f565b610e0f81600261410b565b8460c00151610e1e919061412a565b60e0850152610e3760018381169084901c607f166141a9565b60ff16610100850181905260018316151561012086015260e0850151610e5d919061412a565b610140850152610160840151610e7490869061410b565b846101400151610e84919061412a565b6101808501819052861015610edb5760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610c5b565b5050509392505050565b610eed613096565b366000610efc8989898961302b565b91509150610f086130ef565b60005b6004811015610f3f5760ff828260048110610f2857610f2861408a565b602002015280610f378161418f565b915050610f0b565b506000610f4d848489610b91565b6101808101519091508314610fa45760405162461bcd60e51b815260206004820152601460248201527f756e7573656420737061636520696e2063656c6c0000000000000000000000006044820152606401610c5b565b60005b8161016001518110156110c6576000610fe68686610fc58c8661410b565b866101400151610fd5919061412a565b610fe09282906141ce565b8b612758565b90508c81116110375760405162461bcd60e51b815260206004820152601260248201527f6261672d6f662d63656c6c73206572726f7200000000000000000000000000006044820152606401610c5b565b8781106110865760405162461bcd60e51b815260206004820152601d60248201527f726566496e646578206973206269676765722063656c6c20636f756e740000006044820152606401610c5b565b6001611092828a614142565b61109c9190614142565b8483600481106110ae576110ae61408a565b602002015250806110be8161418f565b915050610fa7565b506110d1828261186c565b94508a156110ff57876110e560018d614142565b606481106110f5576110f561408a565b6020020151611102565b60005b8160e00151611111919061412a565b61111c90600861410b565b60408601526060015163ffffffff1660a08501525050509695505050505050565b600060108260ff1611156111935760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732031362062697473000000000000000000000000006044820152606401610c5b565b5060005b60ff821615610890576111ac86868686611358565b6111c29060ff166201fffe600184901b166141f8565b9050816111ce8161421e565b925050611197565b6000805b63ffffffff831615611207576111f3600184168261412a565b905060018363ffffffff16901c92506111da565b92915050565b6000611220600160ff851681901b614142565b90911663ffffffff1692915050565b60008082815b60038160ff1610156112705761124e60018316846141a9565b925060018263ffffffff16901c9150808061126890614159565b915050611235565b5061127c8260016141a9565b949350505050565b61128c61310d565b60005b60208110156112c35760ff8282602081106112ac576112ac61408a565b6020020152806112bb8161418f565b91505061128f565b50610890868660008787878761092d565b60008282606481106112e8576112e861408a565b6020020151602001518383606481106113035761130361408a565b60200201516060015160ff166004811061131f5761131f61408a565b602002015190508282606481106113385761133861408a565b602002015160600180519061134c82614159565b60ff1690525092915050565b600080600884846064811061136f5761136f61408a565b602002015160400151611382919061426a565b90506000600885856064811061139a5761139a61408a565b6020020151604001516113ad919061427e565b90506007818888858181106113c4576113c461408a565b7fff00000000000000000000000000000000000000000000000000000000000000920135821690921b1690911c60f81c93506001905085856064811061140c5761140c61408a565b6020020151604001818151611421919061412a565b9052505050949350505050565b6000366000868686610180015190876101a00151886101800151611452919061412a565b9261145f939291906141ce565b915091506000611470888888611588565b905060005b8660400151811015610b865780600188604001516114939190614142565b61149d9190614142565b94503660006114ae8787878761302b565b9150915060006114c383838c60800151610b91565b905060ff8985606481106114d9576114d961408a565b602002015160ff90911660e0909101528884606481106114fb576114fb61408a565b60200201515115611563576115148c8c8b87600861198e565b8985606481106115265761152661408a565b602002015160ff90911660e090910152600889856064811061154a5761154a61408a565b602002015160400181815161155f9190614142565b9052505b6115728c8c838c8888886127c1565b50505080806115809061418f565b915050611475565b61159061312c565b366000858585610180015190866101a001518761018001516115b2919061412a565b926115bf939291906141ce565b915091506000805b856040015181101561163c5760006115e485858960800151610b91565b6101808101519091506115fa90859081886141ce565b945094508061018001518361160f919061412a565b9250828683606481106116245761162461408a565b602002015250806116348161418f565b9150506115c7565b505050509392505050565b60008060016116656104a08787876064811061070b5761070b61408a565b61166f91906140e8565b905060018484606481106116855761168561408a565b602002015160e0015160ff160361174057600060016116af8686606481106107635761076361408a565b6116b991906140e8565b90508060ff168260ff161461173a5760006116d860ff8416600261410b565b6116e390600861410b565b6116ee90601061412a565b9050808686606481106117035761170361408a565b6020020151604001818151611718919061412a565b905250600061172c8a8a898961010061176f565b905061081d8261010061412a565b60009150505b8383606481106117525761175261408a565b6020020151608001518160ff16600481106108875761088761408a565b60006101008261ffff1611156117c75760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610c5b565b5060005b61ffff821615610890576117e186868686611358565b6117f29060ff16600183901b61412a565b9050816117fe81614292565b9250506117cb565b60005b611815858585856125c7565b1561127c57806118248161418f565b915050611809565b600060ff83161580611865575060026118466001856140e8565b60ff168363ffffffff16901c61185c91906142a6565b63ffffffff1615155b9392505050565b611874613096565b602081019290925260400151151581526000606082015290565b61189661314b565b60006118a3858585611588565b9050366000868686610180015190876101a001518861018001516118c7919061412a565b926118d4939291906141ce565b90925090506000805b86604001518110156119815780600188604001516118fb9190614142565b6119059190614142565b915061191d828585888b608001518c60400151610ee5565b86826064811061192f5761192f61408a565b602002015261018087015161194590600861410b565b8682606481106119575761195761408a565b602002015160400181815161196c919061412a565b905250806119798161418f565b9150506118dd565b5061163c8888888861142e565b600060088260ff1611156119e45760405162461bcd60e51b815260206004820152601260248201527f6d61782073697a652069732038206269747300000000000000000000000000006044820152606401610c5b565b5060005b60ff821615610890576119fd86868686611358565b611a0f906101fe600184901b166141a9565b905081611a1b8161421e565b9250506119e8565b600060408261ffff161115611a7a5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732036342062697473000000000000000000000000006044820152606401610c5b565b5060005b61ffff82161561089057611a9486868686611358565b611ab09060ff166801fffffffffffffffe600184901b166142c9565b905081611abc81614292565b925050611a7e565b611b6b60405180610200016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b816004811015611bbd5760405162461bcd60e51b815260206004820152601060248201527f4e6f7420656e6f756768206279746573000000000000000000000000000000006044820152606401610c5b565b60408051610200810190915260009080611bda600484888a6141ce565b611be3916142ec565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160001515815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815250925063b5ee9c7260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611d14575082517fffffffff00000000000000000000000000000000000000000000000000000000167f68ff65f30000000000000000000000000000000000000000000000000000000014155b8015611d63575082517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a7280000000000000000000000000000000000000000000000000000000014155b15611db05760405162461bcd60e51b815260206004820152600e60248201527f77726f6e6720626f6320747970650000000000000000000000000000000000006044820152606401610c5b565b600085856004818110611dc557611dc561408a565b865192013560f81c9250507fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e0000000000000000000000000000000000000000000000000000000001611e7657611e2a60026001600784901c16614334565b60ff1660011460c0850152611e476002600683901c600316614334565b60ff16600114610100850152611e656002600583901c600716614334565b60ff16600114610120850152611eca565b600160c085015283517fffffffff00000000000000000000000000000000000000000000000000000000167facc3a72800000000000000000000000000000000000000000000000000000000146101008501525b8361012001518015611ede57508360c00151155b15611f2b5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b600781166080850181905260041080611f48575060018460800151105b15611f955760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6006831015611fe65760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b85856005818110611ff957611ff961408a565b919091013560f81c60a0860181905260081090508061201c575060018460a00151105b156120695760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b60a0840151608085015161207e90600361410b565b61208990600661412a565b612093919061412a565b6101408501526120a460068361412a565b91506120b1600684614142565b925083608001518310156121075760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6121206121168684818a6141ce565b8660800151612758565b604085018190526121735760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b608084015161218390600261410b565b8310156121d25760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6121f286868660800151856121e7919061412a565b6121169282906141ce565b602085018190526122455760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b61014084015161016085015283517fffffffff00000000000000000000000000000000000000000000000000000000167f4a11638e00000000000000000000000000000000000000000000000000000000016122d057836080015184602001516122af919061410b565b84610160018181516122c1919061412a565b905250600160e0850152612324565b83602001516001146123245760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b61016084015161018085015260c084015115612364578360a00151846040015161234e919061410b565b8461018001818151612360919061412a565b9052505b608084015161237490600361410b565b8310156123c35760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6123e38686866080015160026123d9919061410b565b6121e7908661412a565b606085018190526040850151101561243d5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b60a0840151608085015161245290600361410b565b61245c919061412a565b8310156124ab5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b6124e08686866080015160036124c1919061410b565b6124cb908661412a565b6124d69282906141ce565b8660a00151612758565b6101a08501819052604085015160201b101561253e5760405162461bcd60e51b815260206004820152601c60248201527f6261672d6f662d63656c6c733a20696e76616c696420686561646572000000006044820152606401610c5b565b83610100015161254f576000612552565b60045b60ff16846101a0015185610180015161256b919061412a565b612575919061412a565b6101c085015261014084015160019061259f90612595908890818b6141ce565b8760800151612758565b85604001516125ae9190614142565b6125b89190614142565b6101e085015250505092915050565b60006125d585858585611358565b60ff166001149050949350505050565b600060208260ff16111561263b5760405162461bcd60e51b815260206004820152601360248201527f6d61782073697a652069732033322062697473000000000000000000000000006044820152606401610c5b565b5060005b60ff8216156108905761265486868686611358565b61266c9060ff166401fffffffe600184901b16614356565b9050816126788161421e565b92505061263f565b6000805b60018311156126ce5761269860018361412a565b91508260011660011480156126ab575080155b156126c2576126bb60018361412a565b9150600190505b600183901c9250612684565b8260011480156126dc575080155b156126ef576126ec60018361412a565b91505b50919050565b600061120782600716610899565b60008061271183600861410b565b905060005b811561274d5761272888888888611358565b6127399060ff16600183901b61412a565b90508161274581614178565b925050612716565b979650505050505050565b600080805b83156127aa578585828181106127755761277561408a565b61278a92013560f81c9050600884901b61412a565b9150806127968161418f565b915050836127a390614178565b935061275d565b50949350505050565b60006112078260071661122f565b60018484606481106127d5576127d561408a565b602002015160e0015160ff160361284a57818160038181106127f9576127f961408a565b919091013560f81c90508484606481106128155761281561408a565b602002015163ffffffff90911660a0909101528181600381811061283b5761283b61408a565b919091013560f81c6060870152505b600060018585606481106128605761286061408a565b602002015160e0015160ff16146128835761287e86606001516127b3565b612886565b60015b61289387606001516127b3565b61289d91906140e8565b90506000806128af88606001516126f5565b905060005b8160ff168160ff1611610b83576128cf818a6060015161182c565b15613019578360ff168360ff1610156128f457826128ec81614159565b935050613019565b60608460ff168460ff1603612ac75760ff841615801590612933575060018989606481106129245761292461408a565b602002015160e0015160ff1614155b156129805760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420646573657269616c697a652063656c6c0000000000000000006044820152606401610c5b565b6000805b60048110156129e5578a8a6064811061299f5761299f61408a565b60200201516020015181600481106129b9576129b961408a565b602002015160ff146129e557816129cf81614159565b92505080806129dd9061418f565b915050612984565b5060006129fe848c8c6064811061070b5761070b61408a565b90506000612a0d826020614375565b8c8c60648110612a1f57612a1f61408a565b602002015151612a30576000612a33565b60085b612a3d90856141a9565b60ff16612a4a9190614356565b6101408e0151909150612a609060018b8d6141ce565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051929650612aae9260f885901b92508791506020016143dc565b6040516020818303038152906040529350505050612bae565b60ff82161580612af457506001898960648110612ae657612ae661408a565b602002015160e0015160ff16145b15612b415760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f7420646573657269616c697a652063656c6c2032000000000000006044820152606401610c5b565b80898960648110612b5457612b5461408a565b6020020151608001516001612b6988886140e8565b612b7391906140e8565b60ff1660048110612b8657612b8661408a565b6020020151604051602001612b9c929190614410565b60405160208183030381529060405290505b888860648110612bc057612bc061408a565b602002015160200151600060048110612bdb57612bdb61408a565b602002015160ff14612f7c5760005b6004811015612de157898960648110612c0557612c0561408a565b6020020151602001518160048110612c1f57612c1f61408a565b602002015160ff14612de15781612c698e8e868e8f8f60648110612c4557612c4561408a565b6020020151602001518760048110612c5f57612c5f61408a565b60200201516106ed565b604051602001612ca4919060f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016815260020190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052612ce09291602001614429565b6040516020818303038152906040529150898960648110612d0357612d0361408a565b602002015160c00151612d1687876140e8565b60ff1660048110612d2957612d2961408a565b602002015161ffff16612d4b8e8e868e8f8f60648110612c4557612c4561408a565b61ffff161115612dcf57612d888d8d858d8e8e60648110612d6e57612d6e61408a565b6020020151602001518660048110612c5f57612c5f61408a565b8a8a60648110612d9a57612d9a61408a565b602002015160c00151612dad88886140e8565b60ff1660048110612dc057612dc061408a565b61ffff90921660209290920201525b80612dd98161418f565b915050612bea565b898960648110612df357612df361408a565b602002015160c00151612e0687876140e8565b60ff1660048110612e1957612e1961408a565b60200201805190612e298261443e565b61ffff16905250600090505b6004811015612ee957898960648110612e5057612e5061408a565b6020020151602001518160048110612e6a57612e6a61408a565b602002015160ff14612ee95781612eb48e8e868e8f8f60648110612e9057612e9061408a565b6020020151602001518760048110612eaa57612eaa61408a565b6020020151611647565b604051602001612ec5929190614410565b60405160208183030381529060405291508080612ee19061418f565b915050612e35565b600282604051612ef9919061445f565b602060405180830381855afa158015612f16573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612f39919061446b565b8a8a60648110612f4b57612f4b61408a565b602002015160800151612f5e88886140e8565b60ff1660048110612f7157612f7161408a565b60200201525061300a565b600281604051612f8c919061445f565b602060405180830381855afa158015612fa9573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612fcc919061446b565b898960648110612fde57612fde61408a565b602002015160800151612ff187876140e8565b60ff16600481106130045761300461408a565b60200201525b8361301481614159565b945050505b8061302381614159565b9150506128b4565b36600080861561305b5783613041600189614142565b606481106130515761305161408a565b602002015161305e565b60005b905060008488606481106130745761307461408a565b602002015190506130878183888a6141ce565b93509350505094509492505050565b6040518061010001604052806000151581526020016130b36130ef565b815260006020820181905260408201526060016130ce6130ef565b8152600060208201526040016130e26130ef565b8152600060209091015290565b60405180608001604052806004906020820280368337509192915050565b6040518061040001604052806020906020820280368337509192915050565b60405180610c8001604052806064906020820280368337509192915050565b60405180610c8001604052806064905b613163613096565b81526020019060019003908161315b5790505090565b60008083601f84011261318b57600080fd5b50813567ffffffffffffffff8111156131a357600080fd5b6020830191508360208285010111156131bb57600080fd5b9250929050565b803560ff811681146131d357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561322b5761322b6131d8565b60405290565b604051610200810167ffffffffffffffff8111828210171561322b5761322b6131d8565b6040516101a0810167ffffffffffffffff8111828210171561322b5761322b6131d8565b6040516080810167ffffffffffffffff8111828210171561322b5761322b6131d8565b604051610c80810167ffffffffffffffff8111828210171561322b5761322b6131d8565b604051610400810167ffffffffffffffff8111828210171561322b5761322b6131d8565b803580151581146131d357600080fd5b600082601f83011261330557600080fd5b61330d613279565b80608084018581111561331f57600080fd5b845b81811015613339578035845260209384019301613321565b509095945050505050565b803563ffffffff811681146131d357600080fd5b803561ffff811681146131d357600080fd5b600082601f83011261337b57600080fd5b613383613279565b80608084018581111561339557600080fd5b845b81811015613339576133a881613358565b845260209384019301613397565b600082601f8301126133c757600080fd5b6133cf61329c565b8061d4808401858111156133e257600080fd5b845b818110156133395761022081880312156133fe5760008081fd5b613406613207565b61340f826132e4565b8152602061341f898285016132f4565b8183015260a080840135604084015260c061343b8186016131c2565b606085015260e061344e8c8288016132f4565b60808601526134606101608701613344565b838601526134728c610180880161336a565b8286015261348361020087016131c2565b90850152505090855290930192610220016133e4565b600080600080600061d4e086880312156134b257600080fd5b853567ffffffffffffffff8111156134c957600080fd5b6134d588828901613179565b90965094506134e89050602087016131c2565b92506134f787604088016133b6565b9497939650919461d4c0013592915050565b60006020828403121561351b57600080fd5b61186582613344565b600080600080600061d4e0868803121561353d57600080fd5b853567ffffffffffffffff81111561355457600080fd5b61356088828901613179565b9096509450613574905087602088016133b6565b9497939650939461d4a0810135945061d4c0013592915050565b600080600080600080600061d90080898b0312156135ab57600080fd5b883567ffffffffffffffff8111156135c257600080fd5b6135ce8b828c01613179565b90995097505060208981013596506135e98b60408c016133b6565b955061d4c08a0135945061d4e08a013593508a61d51f8b011261360b57600080fd5b6136136132c0565b918a0191808c84111561362557600080fd5b61d5008c015b84811015613642578035835291830191830161362b565b508094505050505092959891949750929550565b60008060006040848603121561366b57600080fd5b833567ffffffffffffffff81111561368257600080fd5b61368e86828701613179565b909790965060209590950135949350505050565b815160ff1681526101a0810160208301516136c2602084018260ff169052565b5060408301516136d6604084018215159052565b5060608301516136ee606084018263ffffffff169052565b506080830151613702608084018215159052565b5060a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516137418285018215159052565b50506101408381015190830152610160808401519083015261018092830151929091019190915290565b600082601f83011261377c57600080fd5b61378461329c565b80610c8084018581111561331f57600080fd5b600080600080600080610d0087890312156137b157600080fd5b86359550602087013567ffffffffffffffff8111156137cf57600080fd5b6137db89828a01613179565b90965094506137ef9050886040890161376b565b9250610cc08701359150610ce087013590509295509295509295565b8060005b600481101561382e57815184526020938401939091019060010161380f565b50505050565b8060005b600481101561382e57815161ffff16845260209384019390910190600101613838565b80511515825260208082015181840160005b600481101561388a5782518252918301919083019060010161386d565b50505050604081015160a0830152606081015160ff1660c083015260808101516138b760e084018261380b565b5060a081015163ffffffff1661016083015260c08101516138dc610180840182613834565b5060e0015160ff166102009190910152565b6102208101611207828461385b565b600080600080600061d4e0868803121561391657600080fd5b853567ffffffffffffffff81111561392d57600080fd5b61393988828901613179565b909650945061394d905087602088016133b6565b925061d4a0860135915061396461d4c087016131c2565b90509295509295909350565b6000806040838503121561398357600080fd5b61398c836131c2565b915061399a60208401613344565b90509250929050565b6104008101818360005b60208082106139bc57506139d0565b8251845292830192909101906001016139ad565b50505092915050565b60008061d4a083850312156139ed57600080fd5b6139f784846133b6565b9461d480939093013593505050565b60008060008061d4c08587031215613a1d57600080fd5b843567ffffffffffffffff811115613a3457600080fd5b613a4087828801613179565b9095509350613a54905086602087016133b6565b9396929550929361d4a00135925050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146131d357600080fd5b60006102008284031215613aa857600080fd5b613ab0613231565b9050613abb82613a65565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152613afb60c083016132e4565b60c0820152613b0c60e083016132e4565b60e0820152610100613b1f8184016132e4565b90820152610120613b318382016132e4565b908201526101408281013590820152610160808301359082015261018080830135908201526101a080830135908201526101c080830135908201526101e09182013591810191909152919050565b60008060008061d6a08587031215613b9657600080fd5b843567ffffffffffffffff811115613bad57600080fd5b613bb987828801613179565b9095509350613bcd90508660208701613a95565b9150613bdd8661022087016133b6565b905092959194509250565b60008060006102208486031215613bfe57600080fd5b833567ffffffffffffffff811115613c1557600080fd5b613c2186828701613179565b9094509250613c3590508560208601613a95565b90509250925092565b610c808101818360005b60648110156139d0578151835260209283019290910190600101613c48565b600080600080600061d4e08688031215613c8057600080fd5b853567ffffffffffffffff811115613c9757600080fd5b613ca388828901613179565b9096509450613cb7905087602088016133b6565b925061d4a0860135915061396461d4c08701613358565b60006101a08284031215613ce157600080fd5b613ce9613255565b9050613cf4826131c2565b8152613d02602083016131c2565b6020820152613d13604083016132e4565b6040820152613d2460608301613344565b6060820152613d35608083016132e4565b608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120613d728184016132e4565b90820152610140828101359082015261016080830135908201526101809182013591810191909152919050565b6000806102208385031215613db357600080fd5b613dbd84846132f4565b915061399a8460808501613cce565b61d4808101818360005b60648110156139d057613dea83835161385b565b610220929092019160209190910190600101613dd6565b60008060208385031215613e1457600080fd5b823567ffffffffffffffff811115613e2b57600080fd5b613e3785828601613179565b90969095509350505050565b81517fffffffff0000000000000000000000000000000000000000000000000000000016815261020081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151613eb360c084018215159052565b5060e0830151613ec760e084018215159052565b5061010083810151151590830152610120808401511515908301526101408084015190830152610160808401519083015261018080840151908301526101a080840151908301526101c080840151908301526101e092830151929091019190915290565b600060208284031215613f3d57600080fd5b5035919050565b600080600080600080600061d680888a031215613f6057600080fd5b873567ffffffffffffffff80821115613f7857600080fd5b613f848b838c01613179565b9099509750879150613f998b60208c01613cce565b9650613fa98b6101c08c016133b6565b955061d6408a0135945061d6608a0135915080821115613fc857600080fd5b50613fd58a828b01613179565b989b979a50959850939692959293505050565b600080600080610cc08587031215613fff57600080fd5b84359350602085013567ffffffffffffffff81111561401d57600080fd5b61402987828801613179565b9094509250613bdd9050866040870161376b565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff841680821015614102576141026140b9565b90039392505050565b6000816000190483118215151615614125576141256140b9565b500290565b6000821982111561413d5761413d6140b9565b500190565b600082821015614154576141546140b9565b500390565b600060ff821660ff810361416f5761416f6140b9565b60010192915050565b600081614187576141876140b9565b506000190190565b600060001982036141a2576141a26140b9565b5060010190565b600060ff821660ff84168060ff038211156141c6576141c66140b9565b019392505050565b600080858511156141de57600080fd5b838611156141eb57600080fd5b5050820193919092039150565b600061ffff808316818516808303821115614215576142156140b9565b01949350505050565b600060ff821680614231576142316140b9565b6000190192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826142795761427961423b565b500490565b60008261428d5761428d61423b565b500690565b600061ffff821680614231576142316140b9565b600063ffffffff808416806142bd576142bd61423b565b92169190910692915050565b600067ffffffffffffffff808316818516808303821115614215576142156140b9565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561432c5780818660040360031b1b83161692505b505092915050565b600060ff8316806143475761434761423b565b8060ff84160691505092915050565b600063ffffffff808316818516808303821115614215576142156140b9565b600063ffffffff80831681851681830481118215151615614398576143986140b9565b02949350505050565b6000815160005b818110156143c257602081850181015186830152016143a8565b818111156143d1576000828601525b509290920192915050565b7fff0000000000000000000000000000000000000000000000000000000000000083168152600061127c60018301846143a1565b600061441c82856143a1565b9283525050602001919050565b600061127c61443883866143a1565b846143a1565b600061ffff808316818103614455576144556140b9565b6001019392505050565b600061186582846143a1565b60006020828403121561447d57600080fd5b505191905056fea2646970667358221220518ee2218cf5489803433883d8b6e689dcf5e0abe15b89d189ad17e2955f97fd64736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
