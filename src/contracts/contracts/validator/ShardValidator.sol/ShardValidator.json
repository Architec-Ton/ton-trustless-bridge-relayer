{
  "_format": "hh-sol-artifact-1",
  "contractName": "ShardValidator",
  "sourceName": "contracts/validator/ShardValidator.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "toc",
          "type": "tuple[100]"
        }
      ],
      "name": "addPrevBlock",
      "outputs": [
        {
          "internalType": "bytes32[10]",
          "name": "root_hashes",
          "type": "bytes32[10]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "seq_no",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "start_lt",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "end_lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "new_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct VerifiedBlockInfo[10]",
          "name": "blocks",
          "type": "tuple[10]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "prefix",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "name": "doParse",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2Ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keySize",
          "type": "uint256"
        }
      ],
      "name": "parseDict",
      "outputs": [
        {
          "internalType": "uint256[32]",
          "name": "cellIdxs",
          "type": "uint256[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "toc",
          "type": "tuple[100]"
        }
      ],
      "name": "parseShardProofPath",
      "outputs": [
        {
          "internalType": "bytes32[10]",
          "name": "root_hashes",
          "type": "bytes32[10]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "seq_no",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "start_lt",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "end_lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "new_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct VerifiedBlockInfo[10]",
          "name": "blocks",
          "type": "tuple[10]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "readBytes32BitSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeb",
          "type": "uint256"
        }
      ],
      "name": "readBytes32ByteSize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "buffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readCell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "toc",
          "type": "tuple[100]"
        }
      ],
      "name": "readMasterProof",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "new_hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "boc",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "rootIdx",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "toc",
          "type": "tuple[100]"
        }
      ],
      "name": "readStateProof",
      "outputs": [
        {
          "internalType": "bytes32[10]",
          "name": "root_hashes",
          "type": "bytes32[10]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "seq_no",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "start_lt",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "end_lt",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "new_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct VerifiedBlockInfo[10]",
          "name": "blocks",
          "type": "tuple[10]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "value",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "value",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "size",
          "type": "uint16"
        }
      ],
      "name": "readUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "readUint8",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "value",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "special",
              "type": "bool"
            },
            {
              "internalType": "uint256[4]",
              "name": "refs",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "cursor",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "cursorRef",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[4]",
              "name": "_hash",
              "type": "bytes32[4]"
            },
            {
              "internalType": "uint32",
              "name": "level_mask",
              "type": "uint32"
            },
            {
              "internalType": "uint16[4]",
              "name": "depth",
              "type": "uint16[4]"
            },
            {
              "internalType": "uint8",
              "name": "cellType",
              "type": "uint8"
            }
          ],
          "internalType": "struct CellData[100]",
          "name": "cells",
          "type": "tuple[100]"
        },
        {
          "internalType": "uint256",
          "name": "cellIdx",
          "type": "uint256"
        }
      ],
      "name": "readUnaryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
